{"version":3,"file":"ProgressBar-CcnKoD10.js","sources":["../../src/components/shared/ProgressBar.tsx"],"sourcesContent":["import * as React from 'react';\r\nimport * as ProgressPrimitive from '@radix-ui/react-progress';\r\nimport { cn } from '@/lib/utils';\r\nimport { formatPercent } from '@/utils/format';\r\n\r\nexport interface ProgressBarProps extends React.ComponentPropsWithoutRef<typeof ProgressPrimitive.Root> {\r\n  /** Current value */\r\n  value?: number;\r\n  /** Maximum value */\r\n  max?: number;\r\n  /** Threshold at which bar turns to danger/error color (percentage 0-100) */\r\n  dangerZone?: number;\r\n  /** Optional target marker to show on the bar */\r\n  target?: number;\r\n  /** Show animated stripes for active/processing state */\r\n  animated?: boolean;\r\n  /** Show label with percentage */\r\n  showLabel?: boolean;\r\n  /** Custom label text (overrides percentage) */\r\n  label?: string;\r\n  /** Size variant */\r\n  size?: 'sm' | 'md' | 'lg';\r\n  /** Color variant */\r\n  variant?: 'primary' | 'success' | 'warning' | 'error';\r\n  /** Additional className */\r\n  className?: string;\r\n}\r\n\r\n/**\r\n * Enhanced ProgressBar component with danger zones, targets, and better accessibility\r\n *\r\n * Features:\r\n * - Danger zone highlighting (automatically turns red when threshold exceeded)\r\n * - Target markers\r\n * - Animated stripes for active states\r\n * - Labels and percentages\r\n * - ARIA live region for screen readers\r\n *\r\n * @example\r\n * ```tsx\r\n * <ProgressBar\r\n *   value={75}\r\n *   max={100}\r\n *   dangerZone={80}\r\n *   showLabel\r\n *   animated={isProcessing}\r\n * />\r\n * ```\r\n */\r\nexport const ProgressBar = React.forwardRef<\r\n  React.ElementRef<typeof ProgressPrimitive.Root>,\r\n  ProgressBarProps\r\n>(\r\n  (\r\n    {\r\n      value = 0,\r\n      max = 100,\r\n      dangerZone,\r\n      target,\r\n      animated = false,\r\n      showLabel = false,\r\n      label,\r\n      size = 'md',\r\n      variant = 'primary',\r\n      className,\r\n      ...props\r\n    },\r\n    ref\r\n  ) => {\r\n    const percentage = Math.min(100, Math.max(0, (value / max) * 100));\r\n\r\n    // Determine if we're in danger zone\r\n    const isInDangerZone = dangerZone !== undefined && percentage >= dangerZone;\r\n\r\n    // Determine color based on danger zone or variant\r\n    const colorClass = isInDangerZone\r\n      ? 'bg-status-error'\r\n      : variant === 'success'\r\n      ? 'bg-status-success'\r\n      : variant === 'warning'\r\n      ? 'bg-status-warning'\r\n      : variant === 'error'\r\n      ? 'bg-status-error'\r\n      : 'bg-primary';\r\n\r\n    const sizeClasses = {\r\n      sm: 'h-2',\r\n      md: 'h-4',\r\n      lg: 'h-6'\r\n    };\r\n\r\n    const displayLabel = label || formatPercent(percentage, 0);\r\n\r\n    return (\r\n      <div className=\"space-y-2\">\r\n        {/* Label */}\r\n        {showLabel && (\r\n          <div className=\"flex justify-between text-sm\">\r\n            <span className=\"font-medium\">{displayLabel}</span>\r\n            {max !== 100 && (\r\n              <span className=\"text-muted-foreground\">\r\n                {value} / {max}\r\n              </span>\r\n            )}\r\n          </div>\r\n        )}\r\n\r\n        {/* Progress Bar Container */}\r\n        <div className=\"relative\">\r\n          <ProgressPrimitive.Root\r\n            ref={ref}\r\n            className={cn(\r\n              'relative w-full overflow-hidden rounded-full bg-muted',\r\n              sizeClasses[size],\r\n              className\r\n            )}\r\n            aria-valuemin={0}\r\n            aria-valuemax={max}\r\n            aria-valuenow={value}\r\n            aria-valuetext={displayLabel}\r\n            aria-live=\"polite\"\r\n            aria-label=\"Progress\"\r\n            {...props}\r\n          >\r\n            <ProgressPrimitive.Indicator\r\n              className={cn(\r\n                'h-full w-full flex-1 transition-all duration-[var(--duration-normal)]',\r\n                colorClass,\r\n                animated && 'animate-progress-stripes bg-gradient-to-r from-transparent via-white/20 to-transparent bg-[length:200%_100%]'\r\n              )}\r\n              style={{ transform: `translateX(-${100 - percentage}%)` }}\r\n            />\r\n          </ProgressPrimitive.Root>\r\n\r\n          {/* Target Marker */}\r\n          {target !== undefined && target > 0 && target <= max && (\r\n            <div\r\n              className=\"absolute top-0 bottom-0 w-0.5 bg-foreground/50\"\r\n              style={{ left: `${(target / max) * 100}%` }}\r\n              aria-label={`Target: ${target}`}\r\n            >\r\n              <div className=\"absolute -top-1 -left-1 w-2 h-2 rounded-full bg-foreground/50\" />\r\n            </div>\r\n          )}\r\n        </div>\r\n\r\n        {/* Danger Zone Warning */}\r\n        {isInDangerZone && (\r\n          <p className=\"text-caption text-status-error flex items-center gap-1\">\r\n            <span className=\"inline-block w-1.5 h-1.5 rounded-full bg-status-error animate-pulse\" />\r\n            High usage detected\r\n          </p>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n);\r\n\r\nProgressBar.displayName = 'ProgressBar';\r\n\r\n// Add keyframes for animated stripes\r\nif (typeof document !== 'undefined') {\r\n  const style = document.createElement('style');\r\n  style.textContent = `\r\n    @keyframes progress-stripes {\r\n      0% { background-position: 200% 0; }\r\n      100% { background-position: 0% 0; }\r\n    }\r\n    .animate-progress-stripes {\r\n      animation: progress-stripes 2s linear infinite;\r\n    }\r\n  `;\r\n  document.head.appendChild(style);\r\n}\r\n"],"names":["ProgressBar","React.forwardRef","value","max","dangerZone","target","animated","showLabel","label","size","variant","className","props","ref","percentage","isInDangerZone","colorClass","sizeClasses","displayLabel","formatPercent","jsxs","jsx","ProgressPrimitive.Root","cn","ProgressPrimitive.Indicator","style"],"mappings":"8KAiDO,MAAMA,EAAcC,EAAAA,WAIzB,CACE,CACE,MAAAC,EAAQ,EACR,IAAAC,EAAM,IACN,WAAAC,EACA,OAAAC,EACA,SAAAC,EAAW,GACX,UAAAC,EAAY,GACZ,MAAAC,EACA,KAAAC,EAAO,KACP,QAAAC,EAAU,UACV,UAAAC,EACA,GAAGC,CAAA,EAELC,IACG,CACH,MAAMC,EAAa,KAAK,IAAI,IAAK,KAAK,IAAI,EAAIZ,EAAQC,EAAO,GAAG,CAAC,EAG3DY,EAAiBX,IAAe,QAAaU,GAAcV,EAG3DY,EAAaD,EACf,kBACAL,IAAY,UACZ,oBACAA,IAAY,UACZ,oBACAA,IAAY,QACZ,kBACA,aAEEO,EAAc,CAClB,GAAI,MACJ,GAAI,MACJ,GAAI,KAAA,EAGAC,EAAeV,GAASW,EAAcL,EAAY,CAAC,EAEzD,OACEM,EAAAA,KAAC,MAAA,CAAI,UAAU,YAEZ,SAAA,CAAAb,GACCa,EAAAA,KAAC,MAAA,CAAI,UAAU,+BACb,SAAA,CAAAC,EAAAA,IAAC,OAAA,CAAK,UAAU,cAAe,SAAAH,EAAa,EAC3Cf,IAAQ,KACPiB,OAAC,OAAA,CAAK,UAAU,wBACb,SAAA,CAAAlB,EAAM,MAAIC,CAAA,CAAA,CACb,CAAA,EAEJ,EAIFiB,EAAAA,KAAC,MAAA,CAAI,UAAU,WACb,SAAA,CAAAC,EAAAA,IAACC,EAAA,CACC,IAAAT,EACA,UAAWU,EACT,wDACAN,EAAYR,CAAI,EAChBE,CAAA,EAEF,gBAAe,EACf,gBAAeR,EACf,gBAAeD,EACf,iBAAgBgB,EAChB,YAAU,SACV,aAAW,WACV,GAAGN,EAEJ,SAAAS,EAAAA,IAACG,EAAA,CACC,UAAWD,EACT,wEACAP,EACAV,GAAY,8GAAA,EAEd,MAAO,CAAE,UAAW,eAAe,IAAMQ,CAAU,IAAA,CAAK,CAAA,CAC1D,CAAA,EAIDT,IAAW,QAAaA,EAAS,GAAKA,GAAUF,GAC/CkB,EAAAA,IAAC,MAAA,CACC,UAAU,iDACV,MAAO,CAAE,KAAM,GAAIhB,EAASF,EAAO,GAAG,GAAA,EACtC,aAAY,WAAWE,CAAM,GAE7B,SAAAgB,EAAAA,IAAC,MAAA,CAAI,UAAU,+DAAA,CAAgE,CAAA,CAAA,CACjF,EAEJ,EAGCN,GACCK,EAAAA,KAAC,IAAA,CAAE,UAAU,yDACX,SAAA,CAAAC,EAAAA,IAAC,OAAA,CAAK,UAAU,qEAAA,CAAsE,EAAE,qBAAA,CAAA,CAE1F,CAAA,EAEJ,CAEJ,CACF,EAEArB,EAAY,YAAc,cAG1B,GAAI,OAAO,SAAa,IAAa,CACnC,MAAMyB,EAAQ,SAAS,cAAc,OAAO,EAC5CA,EAAM,YAAc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IASpB,SAAS,KAAK,YAAYA,CAAK,CACjC"}