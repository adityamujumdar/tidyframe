{"version":3,"file":"DashboardHome-DIwF94fx.js","sources":["../../node_modules/lucide-react/dist/esm/icons/party-popper.js","../../src/pages/dashboard/DashboardHome.tsx"],"sourcesContent":["/**\n * @license lucide-react v0.542.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst __iconNode = [\n  [\"path\", { d: \"M5.8 11.3 2 22l10.7-3.79\", key: \"gwxi1d\" }],\n  [\"path\", { d: \"M4 3h.01\", key: \"1vcuye\" }],\n  [\"path\", { d: \"M22 8h.01\", key: \"1mrtc2\" }],\n  [\"path\", { d: \"M15 2h.01\", key: \"1cjtqr\" }],\n  [\"path\", { d: \"M22 20h.01\", key: \"1mrys2\" }],\n  [\n    \"path\",\n    {\n      d: \"m22 2-2.24.75a2.9 2.9 0 0 0-1.96 3.12c.1.86-.57 1.63-1.45 1.63h-.38c-.86 0-1.6.6-1.76 1.44L14 10\",\n      key: \"hbicv8\"\n    }\n  ],\n  [\n    \"path\",\n    { d: \"m22 13-.82-.33c-.86-.34-1.82.2-1.98 1.11c-.11.7-.72 1.22-1.43 1.22H17\", key: \"1i94pl\" }\n  ],\n  [\"path\", { d: \"m11 2 .33.82c.34.86-.2 1.82-1.11 1.98C9.52 4.9 9 5.52 9 6.23V7\", key: \"1cofks\" }],\n  [\n    \"path\",\n    {\n      d: \"M11 13c1.93 1.93 2.83 4.17 2 5-.83.83-3.07-.07-5-2-1.93-1.93-2.83-4.17-2-5 .83-.83 3.07.07 5 2Z\",\n      key: \"4kbmks\"\n    }\n  ]\n];\nconst PartyPopper = createLucideIcon(\"party-popper\", __iconNode);\n\nexport { __iconNode, PartyPopper as default };\n//# sourceMappingURL=party-popper.js.map\n","import { useState, useEffect } from 'react';\r\nimport { logger } from '@/utils/logger';\nimport { Link, useSearchParams, useNavigate } from 'react-router-dom';\r\nimport { useAuth } from '@/contexts/AuthContext';\r\nimport { processingService } from '@/services/processingService';\r\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';\r\nimport { Button } from '@/components/ui/button';\r\nimport {\r\n  Upload,\r\n  FileText,\r\n  Activity,\r\n  CheckCircle,\r\n  AlertCircle,\r\n  PartyPopper,\r\n  ArrowRight,\r\n  RefreshCw\r\n} from 'lucide-react';\r\nimport { toast } from 'sonner';\r\nimport {\r\n  Dialog,\r\n  DialogContent,\r\n  DialogDescription,\r\n  DialogFooter,\r\n  DialogHeader,\r\n  DialogTitle,\r\n} from '@/components/ui/dialog';\r\nimport { ProcessingJob, UsageStats, UsageStatsResponse } from '@/types/processing';\r\nimport { StatusIndicator } from '@/components/shared/StatusIndicator';\r\nimport { ProgressBar } from '@/components/shared/ProgressBar';\r\nimport { formatDate } from '@/utils/format';\r\nimport { BILLING, PARSE_LIMITS, UI } from '@/config/constants';\r\n\r\nexport default function DashboardHome() {\r\n  const { user, refreshUser } = useAuth();\r\n  const navigate = useNavigate();\r\n  const [searchParams] = useSearchParams();\r\n  const [recentJobs, setRecentJobs] = useState<ProcessingJob[]>([]);\r\n  const [usageStats, setUsageStats] = useState<UsageStats | null>(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [showWelcomeModal, setShowWelcomeModal] = useState(false);\r\n  const [refreshing, setRefreshing] = useState(false);\r\n\r\n  // Check if this is a new user after payment\r\n  useEffect(() => {\r\n    const paymentSuccess = searchParams.get('payment_success');\r\n    const hasSeenWelcome = localStorage.getItem('welcome_modal_shown');\r\n\r\n    if (paymentSuccess === 'true' && !hasSeenWelcome) {\r\n      setShowWelcomeModal(true);\r\n      localStorage.setItem('welcome_modal_shown', 'true');\r\n    }\r\n  }, [searchParams]);\r\n\r\n  useEffect(() => {\r\n    const fetchDashboardData = async () => {\r\n      try {\r\n        const [jobs, usage] = await Promise.all([\r\n          processingService.getJobs().catch(err => {\r\n            logger.debug('Jobs endpoint not available yet, using empty array');\r\n            return [];\r\n          }),\r\n          processingService.getUserUsage().catch(err => {\r\n            logger.debug('Usage endpoint not available yet, using defaults');\r\n            return {\r\n              parses_this_month: user?.parsesThisMonth || 0,\r\n              monthly_limit: user?.monthlyLimit || PARSE_LIMITS.STANDARD,\r\n              remaining_parses: user?.monthlyLimit ? (user.monthlyLimit - (user.parsesThisMonth || 0)) : PARSE_LIMITS.STANDARD,\r\n              usage_percentage: user?.monthlyLimit ? ((user.parsesThisMonth || 0) / user.monthlyLimit) * 100 : 0,\r\n              days_until_reset: BILLING.DEFAULT_CYCLE_DAYS\r\n            };\r\n          })\r\n        ]);\r\n        \r\n        setRecentJobs(Array.isArray(jobs) ? jobs.slice(0, UI.MAX_RECENT_JOBS) : []); // Show only recent jobs\r\n        // Convert backend snake_case to frontend camelCase for UsageStats\r\n        const usageResponse = usage as UsageStatsResponse;\r\n        setUsageStats({\r\n            parsesThisMonth: usageResponse?.parses_this_month || user?.parsesThisMonth || 0,\r\n            monthlyLimit: usageResponse?.monthly_limit || user?.monthlyLimit || PARSE_LIMITS.STANDARD,\r\n            remainingParses: usageResponse?.remaining_parses || (user?.monthlyLimit ? (user.monthlyLimit - (user.parsesThisMonth || 0)) : PARSE_LIMITS.STANDARD),\r\n            usagePercentage: usageResponse?.usage_percentage || (user?.monthlyLimit ? ((user.parsesThisMonth || 0) / user.monthlyLimit) * 100 : 0),\r\n            daysUntilReset: usageResponse?.days_until_reset || BILLING.DEFAULT_CYCLE_DAYS\r\n        });\r\n      } catch (error) {\r\n        logger.error('Error fetching dashboard data:', error);\r\n        // Set fallback data instead of showing errors\r\n        setRecentJobs([]);\r\n        setUsageStats({\r\n          parsesThisMonth: user?.parsesThisMonth || 0,\r\n          monthlyLimit: user?.monthlyLimit || PARSE_LIMITS.STANDARD,\r\n          remainingParses: user?.monthlyLimit ? (user.monthlyLimit - (user.parsesThisMonth || 0)) : PARSE_LIMITS.STANDARD,\r\n          usagePercentage: user?.monthlyLimit ? ((user.parsesThisMonth || 0) / user.monthlyLimit) * 100 : 0,\r\n          daysUntilReset: BILLING.DEFAULT_CYCLE_DAYS\r\n        });\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchDashboardData();\r\n  }, [user]);\r\n\r\n  const usagePercentage = user && user.monthlyLimit > 0\r\n    ? (user.parsesThisMonth / user.monthlyLimit) * 100\r\n    : 0;\r\n\r\n  const handleRefreshSubscription = async () => {\r\n    setRefreshing(true);\r\n    try {\r\n      await refreshUser();\r\n      toast.success('Subscription status updated successfully');\r\n    } catch (error) {\r\n      toast.error('Failed to refresh subscription status. Please try again.');\r\n    } finally {\r\n      setRefreshing(false);\r\n    }\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"space-y-6\">\r\n        <div className=\"grid gap-4 md:grid-cols-2 lg:grid-cols-4\">\r\n          {[...Array(4)].map((_, i) => (\r\n            <Card key={i} className=\"animate-pulse\">\r\n              <CardHeader className=\"pb-2\">\r\n                <div className=\"h-4 bg-muted rounded w-24\"></div>\r\n              </CardHeader>\r\n              <CardContent>\r\n                <div className=\"h-8 bg-muted rounded w-16\"></div>\r\n              </CardContent>\r\n            </Card>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"space-y-6\">\r\n      {/* Welcome Modal for New Users */}\r\n      <Dialog open={showWelcomeModal} onOpenChange={setShowWelcomeModal}>\r\n        <DialogContent className=\"sm:max-w-md\">\r\n          <DialogHeader>\r\n            <div className=\"flex justify-center mb-4\">\r\n              <div className=\"h-16 w-16 rounded-full bg-primary/10 flex items-center justify-center\">\r\n                <PartyPopper className=\"h-8 w-8 text-primary\" />\r\n              </div>\r\n            </div>\r\n            <DialogTitle className=\"text-center text-2xl\">\r\n              Welcome to TidyFrame!\r\n            </DialogTitle>\r\n            <DialogDescription className=\"text-center\">\r\n              Your account is now active with 100,000 monthly parses. Let's process your first file!\r\n            </DialogDescription>\r\n          </DialogHeader>\r\n\r\n          <div className=\"space-y-3 py-4\">\r\n            <div className=\"flex items-start space-x-3 p-3 rounded-lg bg-muted/50\">\r\n              <CheckCircle className=\"h-5 w-5 text-success mt-0.5 flex-shrink-0\" />\r\n              <div>\r\n                <p className=\"text-sm font-medium\">95%+ Accuracy</p>\r\n                <p className=\"text-xs text-muted-foreground\">AI-powered name parsing with entity detection</p>\r\n              </div>\r\n            </div>\r\n            <div className=\"flex items-start space-x-3 p-3 rounded-lg bg-muted/50\">\r\n              <CheckCircle className=\"h-5 w-5 text-success mt-0.5 flex-shrink-0\" />\r\n              <div>\r\n                <p className=\"text-sm font-medium\">Lightning Fast</p>\r\n                <p className=\"text-xs text-muted-foreground\">Process 1000 names in under 1 minute</p>\r\n              </div>\r\n            </div>\r\n            <div className=\"flex items-start space-x-3 p-3 rounded-lg bg-muted/50\">\r\n              <CheckCircle className=\"h-5 w-5 text-success mt-0.5 flex-shrink-0\" />\r\n              <div>\r\n                <p className=\"text-sm font-medium\">Easy Export</p>\r\n                <p className=\"text-xs text-muted-foreground\">Download results in CSV or Excel format</p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <DialogFooter>\r\n            <Button\r\n              className=\"w-full\"\r\n              size=\"lg\"\r\n              onClick={() => {\r\n                setShowWelcomeModal(false);\r\n                navigate('/dashboard/upload');\r\n              }}\r\n            >\r\n              Upload Your First File\r\n              <ArrowRight className=\"ml-2 h-4 w-4\" />\r\n            </Button>\r\n          </DialogFooter>\r\n        </DialogContent>\r\n      </Dialog>\r\n\r\n      {/* Welcome Section */}\r\n      <div className=\"flex flex-col gap-2\">\r\n        <h1 className=\"text-3xl font-bold tracking-tight\">\r\n          Welcome back{user?.fullName ? `, ${user.fullName}` : ''}!\r\n        </h1>\r\n        <p className=\"text-muted-foreground\">\r\n          Here's what's happening with your name parsing projects today.\r\n        </p>\r\n      </div>\r\n\r\n      {/* Subscription Status Refresh - Show for FREE plan users who may have just paid */}\r\n      {user?.plan === 'free' && (\r\n        <Card className=\"border-primary/50 bg-primary/5\">\r\n          <CardContent className=\"pt-6\">\r\n            <div className=\"flex items-start justify-between gap-4\">\r\n              <div className=\"flex items-start space-x-3\">\r\n                <AlertCircle className=\"h-5 w-5 text-primary mt-0.5 flex-shrink-0\" />\r\n                <div>\r\n                  <h3 className=\"font-semibold text-sm\">Subscription Status</h3>\r\n                  <p className=\"text-sm text-muted-foreground mt-1\">\r\n                    If you just completed payment, click refresh to update your subscription status.\r\n                  </p>\r\n                </div>\r\n              </div>\r\n              <Button\r\n                variant=\"outline\"\r\n                size=\"sm\"\r\n                onClick={handleRefreshSubscription}\r\n                disabled={refreshing}\r\n                className=\"flex-shrink-0\"\r\n              >\r\n                {refreshing ? (\r\n                  <>\r\n                    <RefreshCw className=\"mr-2 h-4 w-4 animate-spin\" />\r\n                    Refreshing...\r\n                  </>\r\n                ) : (\r\n                  <>\r\n                    <RefreshCw className=\"mr-2 h-4 w-4\" />\r\n                    Refresh Status\r\n                  </>\r\n                )}\r\n              </Button>\r\n            </div>\r\n          </CardContent>\r\n        </Card>\r\n      )}\r\n\r\n      {/* Stats Cards */}\r\n      <div className=\"grid gap-4 md:grid-cols-2 lg:grid-cols-3\">\r\n        <Card>\r\n          <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\r\n            <CardTitle className=\"text-sm font-medium\">Parses This Month</CardTitle>\r\n            <FileText className=\"h-4 w-4 text-muted-foreground\" />\r\n          </CardHeader>\r\n          <CardContent>\r\n            <div className=\"text-2xl font-bold\">\r\n              {user?.parsesThisMonth || 0}\r\n            </div>\r\n            <p className=\"text-caption text-muted-foreground\">\r\n              of {user?.monthlyLimit === -1 ? '∞' : user?.monthlyLimit || 100000} limit\r\n            </p>\r\n          </CardContent>\r\n        </Card>\r\n\r\n        <Card>\r\n          <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\r\n            <CardTitle className=\"text-sm font-medium\">Active Jobs</CardTitle>\r\n            <Activity className=\"h-4 w-4 text-muted-foreground\" />\r\n          </CardHeader>\r\n          <CardContent>\r\n            <div className=\"text-2xl font-bold\">\r\n              {recentJobs.filter(job => job.status === 'processing' || job.status === 'pending').length}\r\n            </div>\r\n            <p className=\"text-caption text-muted-foreground\">\r\n              Currently processing\r\n            </p>\r\n          </CardContent>\r\n        </Card>\r\n\r\n        <Card>\r\n          <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\r\n            <CardTitle className=\"text-sm font-medium\">Completed Today</CardTitle>\r\n            <CheckCircle className=\"h-4 w-4 text-muted-foreground\" />\r\n          </CardHeader>\r\n          <CardContent>\r\n            <div className=\"text-2xl font-bold\">\r\n              {recentJobs.filter(job => \r\n                job.status === 'completed' && \r\n                new Date(job.completedAt!).toDateString() === new Date().toDateString()\r\n              ).length}\r\n            </div>\r\n            <p className=\"text-caption text-muted-foreground\">\r\n              Files processed\r\n            </p>\r\n          </CardContent>\r\n        </Card>\r\n\r\n      </div>\r\n\r\n      {/* Usage Progress */}\r\n      {user && user.monthlyLimit !== -1 && (\r\n        <Card>\r\n          <CardHeader>\r\n            <CardTitle>Monthly Usage</CardTitle>\r\n            <CardDescription>\r\n              Your parsing usage for this billing period\r\n            </CardDescription>\r\n          </CardHeader>\r\n          <CardContent>\r\n            <ProgressBar\r\n              value={user.parsesThisMonth}\r\n              max={user.monthlyLimit}\r\n              showLabel\r\n              label={`Parses Used: ${user.parsesThisMonth} / ${user.monthlyLimit}`}\r\n              dangerZone={80}\r\n              size=\"sm\"\r\n            />\r\n          </CardContent>\r\n        </Card>\r\n      )}\r\n\r\n      <div className=\"grid gap-4 md:grid-cols-2\">\r\n        {/* Quick Actions */}\r\n        <Card>\r\n          <CardHeader>\r\n            <CardTitle>Quick Actions</CardTitle>\r\n            <CardDescription>\r\n              Get started with common tasks\r\n            </CardDescription>\r\n          </CardHeader>\r\n          <CardContent className=\"grid gap-2\">\r\n            <Link to=\"/dashboard/upload\">\r\n              <Button className=\"w-full justify-start\" variant=\"outline\">\r\n                <Upload className=\"mr-2 h-4 w-4\" />\r\n                Upload New File\r\n              </Button>\r\n            </Link>\r\n            <Link to=\"/dashboard/results\">\r\n              <Button className=\"w-full justify-start border border-info/20 hover:border-info/40\" variant=\"secondary\">\r\n                <FileText className=\"mr-2 h-4 w-4\" />\r\n                View Results\r\n              </Button>\r\n            </Link>\r\n          </CardContent>\r\n        </Card>\r\n\r\n        {/* Recent Jobs */}\r\n        <Card>\r\n          <CardHeader>\r\n            <CardTitle>Recent Jobs</CardTitle>\r\n            <CardDescription>\r\n              Your latest file processing jobs\r\n            </CardDescription>\r\n          </CardHeader>\r\n          <CardContent>\r\n            {recentJobs.length === 0 ? (\r\n              <p className=\"text-muted-foreground text-sm\">\r\n                No jobs yet. Upload your first file to get started!\r\n              </p>\r\n            ) : (\r\n              <div className=\"space-y-4\">\r\n                {recentJobs.map((job) => (\r\n                  <div\r\n                    key={job.id}\r\n                    className=\"flex items-center justify-between p-2 rounded border\"\r\n                    role=\"article\"\r\n                    aria-label={`Job ${job.filename}, ${job.status}`}\r\n                  >\r\n                    <div className=\"flex items-center gap-4\">\r\n                      <StatusIndicator\r\n                        status={job.status as any}\r\n                        mode=\"icon\"\r\n                        iconSize=\"sm\"\r\n                        animate\r\n                      />\r\n                      <div>\r\n                        <p className=\"text-sm font-medium truncate max-w-32\">\r\n                          {job.filename}\r\n                        </p>\r\n                        <p className=\"text-caption text-muted-foreground\">\r\n                          {formatDate(job.createdAt)}\r\n                        </p>\r\n                      </div>\r\n                    </div>\r\n                    <StatusIndicator\r\n                      status={job.status as any}\r\n                      mode=\"badge\"\r\n                    />\r\n                  </div>\r\n                ))}\r\n                <Link to=\"/dashboard/processing\">\r\n                  <Button variant=\"ghost\" size=\"sm\" className=\"w-full\">\r\n                    View All Jobs\r\n                  </Button>\r\n                </Link>\r\n              </div>\r\n            )}\r\n          </CardContent>\r\n        </Card>\r\n      </div>\r\n    </div>\r\n  );\r\n}"],"names":["__iconNode","PartyPopper","createLucideIcon","DashboardHome","user","refreshUser","useAuth","navigate","useNavigate","searchParams","useSearchParams","recentJobs","setRecentJobs","useState","usageStats","setUsageStats","loading","setLoading","showWelcomeModal","setShowWelcomeModal","refreshing","setRefreshing","useEffect","paymentSuccess","hasSeenWelcome","jobs","usage","processingService","err","logger","PARSE_LIMITS","BILLING","UI","usageResponse","error","handleRefreshSubscription","toast","jsx","_","i","jsxs","Card","CardHeader","CardContent","Dialog","DialogContent","DialogHeader","DialogTitle","DialogDescription","CheckCircle","DialogFooter","Button","ArrowRight","AlertCircle","Fragment","RefreshCw","CardTitle","FileText","Activity","job","CardDescription","ProgressBar","Link","Upload","StatusIndicator","formatDate"],"mappings":"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","x_google_ignoreList":[0]}