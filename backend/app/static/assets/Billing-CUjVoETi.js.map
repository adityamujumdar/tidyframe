{"version":3,"file":"Billing-CUjVoETi.js","sources":["../../node_modules/lucide-react/dist/esm/icons/circle-check.js","../../node_modules/lucide-react/dist/esm/icons/receipt.js","../../node_modules/date-fns/constants.js","../../node_modules/date-fns/constructFrom.js","../../node_modules/date-fns/toDate.js","../../node_modules/date-fns/_lib/defaultOptions.js","../../node_modules/date-fns/startOfWeek.js","../../node_modules/date-fns/startOfISOWeek.js","../../node_modules/date-fns/getISOWeekYear.js","../../node_modules/date-fns/_lib/getTimezoneOffsetInMilliseconds.js","../../node_modules/date-fns/_lib/normalizeDates.js","../../node_modules/date-fns/startOfDay.js","../../node_modules/date-fns/differenceInCalendarDays.js","../../node_modules/date-fns/startOfISOWeekYear.js","../../node_modules/date-fns/isDate.js","../../node_modules/date-fns/isValid.js","../../node_modules/date-fns/startOfYear.js","../../node_modules/date-fns/locale/en-US/_lib/formatDistance.js","../../node_modules/date-fns/locale/_lib/buildFormatLongFn.js","../../node_modules/date-fns/locale/en-US/_lib/formatLong.js","../../node_modules/date-fns/locale/en-US/_lib/formatRelative.js","../../node_modules/date-fns/locale/_lib/buildLocalizeFn.js","../../node_modules/date-fns/locale/en-US/_lib/localize.js","../../node_modules/date-fns/locale/_lib/buildMatchFn.js","../../node_modules/date-fns/locale/_lib/buildMatchPatternFn.js","../../node_modules/date-fns/locale/en-US/_lib/match.js","../../node_modules/date-fns/locale/en-US.js","../../node_modules/date-fns/getDayOfYear.js","../../node_modules/date-fns/getISOWeek.js","../../node_modules/date-fns/getWeekYear.js","../../node_modules/date-fns/startOfWeekYear.js","../../node_modules/date-fns/getWeek.js","../../node_modules/date-fns/_lib/addLeadingZeros.js","../../node_modules/date-fns/_lib/format/lightFormatters.js","../../node_modules/date-fns/_lib/format/formatters.js","../../node_modules/date-fns/_lib/format/longFormatters.js","../../node_modules/date-fns/_lib/protectedTokens.js","../../node_modules/date-fns/format.js","../../src/components/billing/SubscriptionCard.tsx","../../src/components/billing/PaymentModal.tsx","../../src/pages/dashboard/Billing.tsx"],"sourcesContent":["/**\n * @license lucide-react v0.542.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst __iconNode = [\n  [\"circle\", { cx: \"12\", cy: \"12\", r: \"10\", key: \"1mglay\" }],\n  [\"path\", { d: \"m9 12 2 2 4-4\", key: \"dzmm74\" }]\n];\nconst CircleCheck = createLucideIcon(\"circle-check\", __iconNode);\n\nexport { __iconNode, CircleCheck as default };\n//# sourceMappingURL=circle-check.js.map\n","/**\n * @license lucide-react v0.542.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst __iconNode = [\n  [\n    \"path\",\n    { d: \"M4 2v20l2-1 2 1 2-1 2 1 2-1 2 1 2-1 2 1V2l-2 1-2-1-2 1-2-1-2 1-2-1-2 1Z\", key: \"q3az6g\" }\n  ],\n  [\"path\", { d: \"M16 8h-6a2 2 0 1 0 0 4h4a2 2 0 1 1 0 4H8\", key: \"1h4pet\" }],\n  [\"path\", { d: \"M12 17.5v-11\", key: \"1jc1ny\" }]\n];\nconst Receipt = createLucideIcon(\"receipt\", __iconNode);\n\nexport { __iconNode, Receipt as default };\n//# sourceMappingURL=receipt.js.map\n","/**\n * @module constants\n * @summary Useful constants\n * @description\n * Collection of useful date constants.\n *\n * The constants could be imported from `date-fns/constants`:\n *\n * ```ts\n * import { maxTime, minTime } from \"./constants/date-fns/constants\";\n *\n * function isAllowedTime(time) {\n *   return time <= maxTime && time >= minTime;\n * }\n * ```\n */\n\n/**\n * @constant\n * @name daysInWeek\n * @summary Days in 1 week.\n */\nexport const daysInWeek = 7;\n\n/**\n * @constant\n * @name daysInYear\n * @summary Days in 1 year.\n *\n * @description\n * How many days in a year.\n *\n * One years equals 365.2425 days according to the formula:\n *\n * > Leap year occurs every 4 years, except for years that are divisible by 100 and not divisible by 400.\n * > 1 mean year = (365+1/4-1/100+1/400) days = 365.2425 days\n */\nexport const daysInYear = 365.2425;\n\n/**\n * @constant\n * @name maxTime\n * @summary Maximum allowed time.\n *\n * @example\n * import { maxTime } from \"./constants/date-fns/constants\";\n *\n * const isValid = 8640000000000001 <= maxTime;\n * //=> false\n *\n * new Date(8640000000000001);\n * //=> Invalid Date\n */\nexport const maxTime = Math.pow(10, 8) * 24 * 60 * 60 * 1000;\n\n/**\n * @constant\n * @name minTime\n * @summary Minimum allowed time.\n *\n * @example\n * import { minTime } from \"./constants/date-fns/constants\";\n *\n * const isValid = -8640000000000001 >= minTime;\n * //=> false\n *\n * new Date(-8640000000000001)\n * //=> Invalid Date\n */\nexport const minTime = -maxTime;\n\n/**\n * @constant\n * @name millisecondsInWeek\n * @summary Milliseconds in 1 week.\n */\nexport const millisecondsInWeek = 604800000;\n\n/**\n * @constant\n * @name millisecondsInDay\n * @summary Milliseconds in 1 day.\n */\nexport const millisecondsInDay = 86400000;\n\n/**\n * @constant\n * @name millisecondsInMinute\n * @summary Milliseconds in 1 minute\n */\nexport const millisecondsInMinute = 60000;\n\n/**\n * @constant\n * @name millisecondsInHour\n * @summary Milliseconds in 1 hour\n */\nexport const millisecondsInHour = 3600000;\n\n/**\n * @constant\n * @name millisecondsInSecond\n * @summary Milliseconds in 1 second\n */\nexport const millisecondsInSecond = 1000;\n\n/**\n * @constant\n * @name minutesInYear\n * @summary Minutes in 1 year.\n */\nexport const minutesInYear = 525600;\n\n/**\n * @constant\n * @name minutesInMonth\n * @summary Minutes in 1 month.\n */\nexport const minutesInMonth = 43200;\n\n/**\n * @constant\n * @name minutesInDay\n * @summary Minutes in 1 day.\n */\nexport const minutesInDay = 1440;\n\n/**\n * @constant\n * @name minutesInHour\n * @summary Minutes in 1 hour.\n */\nexport const minutesInHour = 60;\n\n/**\n * @constant\n * @name monthsInQuarter\n * @summary Months in 1 quarter.\n */\nexport const monthsInQuarter = 3;\n\n/**\n * @constant\n * @name monthsInYear\n * @summary Months in 1 year.\n */\nexport const monthsInYear = 12;\n\n/**\n * @constant\n * @name quartersInYear\n * @summary Quarters in 1 year\n */\nexport const quartersInYear = 4;\n\n/**\n * @constant\n * @name secondsInHour\n * @summary Seconds in 1 hour.\n */\nexport const secondsInHour = 3600;\n\n/**\n * @constant\n * @name secondsInMinute\n * @summary Seconds in 1 minute.\n */\nexport const secondsInMinute = 60;\n\n/**\n * @constant\n * @name secondsInDay\n * @summary Seconds in 1 day.\n */\nexport const secondsInDay = secondsInHour * 24;\n\n/**\n * @constant\n * @name secondsInWeek\n * @summary Seconds in 1 week.\n */\nexport const secondsInWeek = secondsInDay * 7;\n\n/**\n * @constant\n * @name secondsInYear\n * @summary Seconds in 1 year.\n */\nexport const secondsInYear = secondsInDay * daysInYear;\n\n/**\n * @constant\n * @name secondsInMonth\n * @summary Seconds in 1 month\n */\nexport const secondsInMonth = secondsInYear / 12;\n\n/**\n * @constant\n * @name secondsInQuarter\n * @summary Seconds in 1 quarter.\n */\nexport const secondsInQuarter = secondsInMonth * 3;\n\n/**\n * @constant\n * @name constructFromSymbol\n * @summary Symbol enabling Date extensions to inherit properties from the reference date.\n *\n * The symbol is used to enable the `constructFrom` function to construct a date\n * using a reference date and a value. It allows to transfer extra properties\n * from the reference date to the new date. It's useful for extensions like\n * [`TZDate`](https://github.com/date-fns/tz) that accept a time zone as\n * a constructor argument.\n */\nexport const constructFromSymbol = Symbol.for(\"constructDateFrom\");\n","import { constructFromSymbol } from \"./constants.js\";\n\n/**\n * @name constructFrom\n * @category Generic Helpers\n * @summary Constructs a date using the reference date and the value\n *\n * @description\n * The function constructs a new date using the constructor from the reference\n * date and the given value. It helps to build generic functions that accept\n * date extensions.\n *\n * It defaults to `Date` if the passed reference date is a number or a string.\n *\n * Starting from v3.7.0, it allows to construct a date using `[Symbol.for(\"constructDateFrom\")]`\n * enabling to transfer extra properties from the reference date to the new date.\n * It's useful for extensions like [`TZDate`](https://github.com/date-fns/tz)\n * that accept a time zone as a constructor argument.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The reference date to take constructor from\n * @param value - The value to create the date\n *\n * @returns Date initialized using the given date and value\n *\n * @example\n * import { constructFrom } from \"./constructFrom/date-fns\";\n *\n * // A function that clones a date preserving the original type\n * function cloneDate<DateType extends Date>(date: DateType): DateType {\n *   return constructFrom(\n *     date, // Use constructor from the given date\n *     date.getTime() // Use the date value to create a new date\n *   );\n * }\n */\nexport function constructFrom(date, value) {\n  if (typeof date === \"function\") return date(value);\n\n  if (date && typeof date === \"object\" && constructFromSymbol in date)\n    return date[constructFromSymbol](value);\n\n  if (date instanceof Date) return new date.constructor(value);\n\n  return new Date(value);\n}\n\n// Fallback for modularized imports:\nexport default constructFrom;\n","import { constructFrom } from \"./constructFrom.js\";\n\n/**\n * @name toDate\n * @category Common Helpers\n * @summary Convert the given argument to an instance of Date.\n *\n * @description\n * Convert the given argument to an instance of Date.\n *\n * If the argument is an instance of Date, the function returns its clone.\n *\n * If the argument is a number, it is treated as a timestamp.\n *\n * If the argument is none of the above, the function returns Invalid Date.\n *\n * Starting from v3.7.0, it clones a date using `[Symbol.for(\"constructDateFrom\")]`\n * enabling to transfer extra properties from the reference date to the new date.\n * It's useful for extensions like [`TZDate`](https://github.com/date-fns/tz)\n * that accept a time zone as a constructor argument.\n *\n * **Note**: *all* Date arguments passed to any *date-fns* function is processed by `toDate`.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n * @typeParam ResultDate - The result `Date` type, it is the type returned from the context function if it is passed, or inferred from the arguments.\n *\n * @param argument - The value to convert\n *\n * @returns The parsed date in the local time zone\n *\n * @example\n * // Clone the date:\n * const result = toDate(new Date(2014, 1, 11, 11, 30, 30))\n * //=> Tue Feb 11 2014 11:30:30\n *\n * @example\n * // Convert the timestamp to date:\n * const result = toDate(1392098430000)\n * //=> Tue Feb 11 2014 11:30:30\n */\nexport function toDate(argument, context) {\n  // [TODO] Get rid of `toDate` or `constructFrom`?\n  return constructFrom(context || argument, argument);\n}\n\n// Fallback for modularized imports:\nexport default toDate;\n","let defaultOptions = {};\n\nexport function getDefaultOptions() {\n  return defaultOptions;\n}\n\nexport function setDefaultOptions(newOptions) {\n  defaultOptions = newOptions;\n}\n","import { getDefaultOptions } from \"./_lib/defaultOptions.js\";\nimport { toDate } from \"./toDate.js\";\n\n/**\n * The {@link startOfWeek} function options.\n */\n\n/**\n * @name startOfWeek\n * @category Week Helpers\n * @summary Return the start of a week for the given date.\n *\n * @description\n * Return the start of a week for the given date.\n * The result will be in the local timezone.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n * @typeParam ResultDate - The result `Date` type, it is the type returned from the context function if it is passed, or inferred from the arguments.\n *\n * @param date - The original date\n * @param options - An object with options\n *\n * @returns The start of a week\n *\n * @example\n * // The start of a week for 2 September 2014 11:55:00:\n * const result = startOfWeek(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Sun Aug 31 2014 00:00:00\n *\n * @example\n * // If the week starts on Monday, the start of the week for 2 September 2014 11:55:00:\n * const result = startOfWeek(new Date(2014, 8, 2, 11, 55, 0), { weekStartsOn: 1 })\n * //=> Mon Sep 01 2014 00:00:00\n */\nexport function startOfWeek(date, options) {\n  const defaultOptions = getDefaultOptions();\n  const weekStartsOn =\n    options?.weekStartsOn ??\n    options?.locale?.options?.weekStartsOn ??\n    defaultOptions.weekStartsOn ??\n    defaultOptions.locale?.options?.weekStartsOn ??\n    0;\n\n  const _date = toDate(date, options?.in);\n  const day = _date.getDay();\n  const diff = (day < weekStartsOn ? 7 : 0) + day - weekStartsOn;\n\n  _date.setDate(_date.getDate() - diff);\n  _date.setHours(0, 0, 0, 0);\n  return _date;\n}\n\n// Fallback for modularized imports:\nexport default startOfWeek;\n","import { startOfWeek } from \"./startOfWeek.js\";\n\n/**\n * The {@link startOfISOWeek} function options.\n */\n\n/**\n * @name startOfISOWeek\n * @category ISO Week Helpers\n * @summary Return the start of an ISO week for the given date.\n *\n * @description\n * Return the start of an ISO week for the given date.\n * The result will be in the local timezone.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n * @typeParam ResultDate - The result `Date` type, it is the type returned from the context function if it is passed, or inferred from the arguments.\n *\n * @param date - The original date\n * @param options - An object with options\n *\n * @returns The start of an ISO week\n *\n * @example\n * // The start of an ISO week for 2 September 2014 11:55:00:\n * const result = startOfISOWeek(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Mon Sep 01 2014 00:00:00\n */\nexport function startOfISOWeek(date, options) {\n  return startOfWeek(date, { ...options, weekStartsOn: 1 });\n}\n\n// Fallback for modularized imports:\nexport default startOfISOWeek;\n","import { constructFrom } from \"./constructFrom.js\";\nimport { startOfISOWeek } from \"./startOfISOWeek.js\";\nimport { toDate } from \"./toDate.js\";\n\n/**\n * The {@link getISOWeekYear} function options.\n */\n\n/**\n * @name getISOWeekYear\n * @category ISO Week-Numbering Year Helpers\n * @summary Get the ISO week-numbering year of the given date.\n *\n * @description\n * Get the ISO week-numbering year of the given date,\n * which always starts 3 days before the year's first Thursday.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @param date - The given date\n *\n * @returns The ISO week-numbering year\n *\n * @example\n * // Which ISO-week numbering year is 2 January 2005?\n * const result = getISOWeekYear(new Date(2005, 0, 2))\n * //=> 2004\n */\nexport function getISOWeekYear(date, options) {\n  const _date = toDate(date, options?.in);\n  const year = _date.getFullYear();\n\n  const fourthOfJanuaryOfNextYear = constructFrom(_date, 0);\n  fourthOfJanuaryOfNextYear.setFullYear(year + 1, 0, 4);\n  fourthOfJanuaryOfNextYear.setHours(0, 0, 0, 0);\n  const startOfNextYear = startOfISOWeek(fourthOfJanuaryOfNextYear);\n\n  const fourthOfJanuaryOfThisYear = constructFrom(_date, 0);\n  fourthOfJanuaryOfThisYear.setFullYear(year, 0, 4);\n  fourthOfJanuaryOfThisYear.setHours(0, 0, 0, 0);\n  const startOfThisYear = startOfISOWeek(fourthOfJanuaryOfThisYear);\n\n  if (_date.getTime() >= startOfNextYear.getTime()) {\n    return year + 1;\n  } else if (_date.getTime() >= startOfThisYear.getTime()) {\n    return year;\n  } else {\n    return year - 1;\n  }\n}\n\n// Fallback for modularized imports:\nexport default getISOWeekYear;\n","import { toDate } from \"../toDate.js\";\n\n/**\n * Google Chrome as of 67.0.3396.87 introduced timezones with offset that includes seconds.\n * They usually appear for dates that denote time before the timezones were introduced\n * (e.g. for 'Europe/Prague' timezone the offset is GMT+00:57:44 before 1 October 1891\n * and GMT+01:00:00 after that date)\n *\n * Date#getTimezoneOffset returns the offset in minutes and would return 57 for the example above,\n * which would lead to incorrect calculations.\n *\n * This function returns the timezone offset in milliseconds that takes seconds in account.\n */\nexport function getTimezoneOffsetInMilliseconds(date) {\n  const _date = toDate(date);\n  const utcDate = new Date(\n    Date.UTC(\n      _date.getFullYear(),\n      _date.getMonth(),\n      _date.getDate(),\n      _date.getHours(),\n      _date.getMinutes(),\n      _date.getSeconds(),\n      _date.getMilliseconds(),\n    ),\n  );\n  utcDate.setUTCFullYear(_date.getFullYear());\n  return +date - +utcDate;\n}\n","import { constructFrom } from \"../constructFrom.js\";\n\nexport function normalizeDates(context, ...dates) {\n  const normalize = constructFrom.bind(\n    null,\n    context || dates.find((date) => typeof date === \"object\"),\n  );\n  return dates.map(normalize);\n}\n","import { toDate } from \"./toDate.js\";\n\n/**\n * The {@link startOfDay} function options.\n */\n\n/**\n * @name startOfDay\n * @category Day Helpers\n * @summary Return the start of a day for the given date.\n *\n * @description\n * Return the start of a day for the given date.\n * The result will be in the local timezone.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n * @typeParam ResultDate - The result `Date` type, it is the type returned from the context function if it is passed, or inferred from the arguments.\n *\n * @param date - The original date\n * @param options - The options\n *\n * @returns The start of a day\n *\n * @example\n * // The start of a day for 2 September 2014 11:55:00:\n * const result = startOfDay(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Tue Sep 02 2014 00:00:00\n */\nexport function startOfDay(date, options) {\n  const _date = toDate(date, options?.in);\n  _date.setHours(0, 0, 0, 0);\n  return _date;\n}\n\n// Fallback for modularized imports:\nexport default startOfDay;\n","import { getTimezoneOffsetInMilliseconds } from \"./_lib/getTimezoneOffsetInMilliseconds.js\";\nimport { normalizeDates } from \"./_lib/normalizeDates.js\";\nimport { millisecondsInDay } from \"./constants.js\";\nimport { startOfDay } from \"./startOfDay.js\";\n\n/**\n * The {@link differenceInCalendarDays} function options.\n */\n\n/**\n * @name differenceInCalendarDays\n * @category Day Helpers\n * @summary Get the number of calendar days between the given dates.\n *\n * @description\n * Get the number of calendar days between the given dates. This means that the times are removed\n * from the dates and then the difference in days is calculated.\n *\n * @param laterDate - The later date\n * @param earlierDate - The earlier date\n * @param options - The options object\n *\n * @returns The number of calendar days\n *\n * @example\n * // How many calendar days are between\n * // 2 July 2011 23:00:00 and 2 July 2012 00:00:00?\n * const result = differenceInCalendarDays(\n *   new Date(2012, 6, 2, 0, 0),\n *   new Date(2011, 6, 2, 23, 0)\n * )\n * //=> 366\n * // How many calendar days are between\n * // 2 July 2011 23:59:00 and 3 July 2011 00:01:00?\n * const result = differenceInCalendarDays(\n *   new Date(2011, 6, 3, 0, 1),\n *   new Date(2011, 6, 2, 23, 59)\n * )\n * //=> 1\n */\nexport function differenceInCalendarDays(laterDate, earlierDate, options) {\n  const [laterDate_, earlierDate_] = normalizeDates(\n    options?.in,\n    laterDate,\n    earlierDate,\n  );\n\n  const laterStartOfDay = startOfDay(laterDate_);\n  const earlierStartOfDay = startOfDay(earlierDate_);\n\n  const laterTimestamp =\n    +laterStartOfDay - getTimezoneOffsetInMilliseconds(laterStartOfDay);\n  const earlierTimestamp =\n    +earlierStartOfDay - getTimezoneOffsetInMilliseconds(earlierStartOfDay);\n\n  // Round the number of days to the nearest integer because the number of\n  // milliseconds in a day is not constant (e.g. it's different in the week of\n  // the daylight saving time clock shift).\n  return Math.round((laterTimestamp - earlierTimestamp) / millisecondsInDay);\n}\n\n// Fallback for modularized imports:\nexport default differenceInCalendarDays;\n","import { constructFrom } from \"./constructFrom.js\";\nimport { getISOWeekYear } from \"./getISOWeekYear.js\";\nimport { startOfISOWeek } from \"./startOfISOWeek.js\";\n\n/**\n * The {@link startOfISOWeekYear} function options.\n */\n\n/**\n * @name startOfISOWeekYear\n * @category ISO Week-Numbering Year Helpers\n * @summary Return the start of an ISO week-numbering year for the given date.\n *\n * @description\n * Return the start of an ISO week-numbering year,\n * which always starts 3 days before the year's first Thursday.\n * The result will be in the local timezone.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n * @typeParam ResultDate - The result `Date` type, it is the type returned from the context function if it is passed, or inferred from the arguments.\n *\n * @param date - The original date\n * @param options - An object with options\n *\n * @returns The start of an ISO week-numbering year\n *\n * @example\n * // The start of an ISO week-numbering year for 2 July 2005:\n * const result = startOfISOWeekYear(new Date(2005, 6, 2))\n * //=> Mon Jan 03 2005 00:00:00\n */\nexport function startOfISOWeekYear(date, options) {\n  const year = getISOWeekYear(date, options);\n  const fourthOfJanuary = constructFrom(options?.in || date, 0);\n  fourthOfJanuary.setFullYear(year, 0, 4);\n  fourthOfJanuary.setHours(0, 0, 0, 0);\n  return startOfISOWeek(fourthOfJanuary);\n}\n\n// Fallback for modularized imports:\nexport default startOfISOWeekYear;\n","/**\n * @name isDate\n * @category Common Helpers\n * @summary Is the given value a date?\n *\n * @description\n * Returns true if the given value is an instance of Date. The function works for dates transferred across iframes.\n *\n * @param value - The value to check\n *\n * @returns True if the given value is a date\n *\n * @example\n * // For a valid date:\n * const result = isDate(new Date())\n * //=> true\n *\n * @example\n * // For an invalid date:\n * const result = isDate(new Date(NaN))\n * //=> true\n *\n * @example\n * // For some value:\n * const result = isDate('2014-02-31')\n * //=> false\n *\n * @example\n * // For an object:\n * const result = isDate({})\n * //=> false\n */\nexport function isDate(value) {\n  return (\n    value instanceof Date ||\n    (typeof value === \"object\" &&\n      Object.prototype.toString.call(value) === \"[object Date]\")\n  );\n}\n\n// Fallback for modularized imports:\nexport default isDate;\n","import { isDate } from \"./isDate.js\";\nimport { toDate } from \"./toDate.js\";\n\n/**\n * @name isValid\n * @category Common Helpers\n * @summary Is the given date valid?\n *\n * @description\n * Returns false if argument is Invalid Date and true otherwise.\n * Argument is converted to Date using `toDate`. See [toDate](https://date-fns.org/docs/toDate)\n * Invalid Date is a Date, whose time value is NaN.\n *\n * Time value of Date: http://es5.github.io/#x15.9.1.1\n *\n * @param date - The date to check\n *\n * @returns The date is valid\n *\n * @example\n * // For the valid date:\n * const result = isValid(new Date(2014, 1, 31))\n * //=> true\n *\n * @example\n * // For the value, convertible into a date:\n * const result = isValid(1393804800000)\n * //=> true\n *\n * @example\n * // For the invalid date:\n * const result = isValid(new Date(''))\n * //=> false\n */\nexport function isValid(date) {\n  return !((!isDate(date) && typeof date !== \"number\") || isNaN(+toDate(date)));\n}\n\n// Fallback for modularized imports:\nexport default isValid;\n","import { toDate } from \"./toDate.js\";\n\n/**\n * The {@link startOfYear} function options.\n */\n\n/**\n * @name startOfYear\n * @category Year Helpers\n * @summary Return the start of a year for the given date.\n *\n * @description\n * Return the start of a year for the given date.\n * The result will be in the local timezone.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n * @typeParam ResultDate - The result `Date` type, it is the type returned from the context function if it is passed, or inferred from the arguments.\n *\n * @param date - The original date\n * @param options - The options\n *\n * @returns The start of a year\n *\n * @example\n * // The start of a year for 2 September 2014 11:55:00:\n * const result = startOfYear(new Date(2014, 8, 2, 11, 55, 00))\n * //=> Wed Jan 01 2014 00:00:00\n */\nexport function startOfYear(date, options) {\n  const date_ = toDate(date, options?.in);\n  date_.setFullYear(date_.getFullYear(), 0, 1);\n  date_.setHours(0, 0, 0, 0);\n  return date_;\n}\n\n// Fallback for modularized imports:\nexport default startOfYear;\n","const formatDistanceLocale = {\n  lessThanXSeconds: {\n    one: \"less than a second\",\n    other: \"less than {{count}} seconds\",\n  },\n\n  xSeconds: {\n    one: \"1 second\",\n    other: \"{{count}} seconds\",\n  },\n\n  halfAMinute: \"half a minute\",\n\n  lessThanXMinutes: {\n    one: \"less than a minute\",\n    other: \"less than {{count}} minutes\",\n  },\n\n  xMinutes: {\n    one: \"1 minute\",\n    other: \"{{count}} minutes\",\n  },\n\n  aboutXHours: {\n    one: \"about 1 hour\",\n    other: \"about {{count}} hours\",\n  },\n\n  xHours: {\n    one: \"1 hour\",\n    other: \"{{count}} hours\",\n  },\n\n  xDays: {\n    one: \"1 day\",\n    other: \"{{count}} days\",\n  },\n\n  aboutXWeeks: {\n    one: \"about 1 week\",\n    other: \"about {{count}} weeks\",\n  },\n\n  xWeeks: {\n    one: \"1 week\",\n    other: \"{{count}} weeks\",\n  },\n\n  aboutXMonths: {\n    one: \"about 1 month\",\n    other: \"about {{count}} months\",\n  },\n\n  xMonths: {\n    one: \"1 month\",\n    other: \"{{count}} months\",\n  },\n\n  aboutXYears: {\n    one: \"about 1 year\",\n    other: \"about {{count}} years\",\n  },\n\n  xYears: {\n    one: \"1 year\",\n    other: \"{{count}} years\",\n  },\n\n  overXYears: {\n    one: \"over 1 year\",\n    other: \"over {{count}} years\",\n  },\n\n  almostXYears: {\n    one: \"almost 1 year\",\n    other: \"almost {{count}} years\",\n  },\n};\n\nexport const formatDistance = (token, count, options) => {\n  let result;\n\n  const tokenValue = formatDistanceLocale[token];\n  if (typeof tokenValue === \"string\") {\n    result = tokenValue;\n  } else if (count === 1) {\n    result = tokenValue.one;\n  } else {\n    result = tokenValue.other.replace(\"{{count}}\", count.toString());\n  }\n\n  if (options?.addSuffix) {\n    if (options.comparison && options.comparison > 0) {\n      return \"in \" + result;\n    } else {\n      return result + \" ago\";\n    }\n  }\n\n  return result;\n};\n","export function buildFormatLongFn(args) {\n  return (options = {}) => {\n    // TODO: Remove String()\n    const width = options.width ? String(options.width) : args.defaultWidth;\n    const format = args.formats[width] || args.formats[args.defaultWidth];\n    return format;\n  };\n}\n","import { buildFormatLongFn } from \"../../_lib/buildFormatLongFn.js\";\n\nconst dateFormats = {\n  full: \"EEEE, MMMM do, y\",\n  long: \"MMMM do, y\",\n  medium: \"MMM d, y\",\n  short: \"MM/dd/yyyy\",\n};\n\nconst timeFormats = {\n  full: \"h:mm:ss a zzzz\",\n  long: \"h:mm:ss a z\",\n  medium: \"h:mm:ss a\",\n  short: \"h:mm a\",\n};\n\nconst dateTimeFormats = {\n  full: \"{{date}} 'at' {{time}}\",\n  long: \"{{date}} 'at' {{time}}\",\n  medium: \"{{date}}, {{time}}\",\n  short: \"{{date}}, {{time}}\",\n};\n\nexport const formatLong = {\n  date: buildFormatLongFn({\n    formats: dateFormats,\n    defaultWidth: \"full\",\n  }),\n\n  time: buildFormatLongFn({\n    formats: timeFormats,\n    defaultWidth: \"full\",\n  }),\n\n  dateTime: buildFormatLongFn({\n    formats: dateTimeFormats,\n    defaultWidth: \"full\",\n  }),\n};\n","const formatRelativeLocale = {\n  lastWeek: \"'last' eeee 'at' p\",\n  yesterday: \"'yesterday at' p\",\n  today: \"'today at' p\",\n  tomorrow: \"'tomorrow at' p\",\n  nextWeek: \"eeee 'at' p\",\n  other: \"P\",\n};\n\nexport const formatRelative = (token, _date, _baseDate, _options) =>\n  formatRelativeLocale[token];\n","/**\n * The localize function argument callback which allows to convert raw value to\n * the actual type.\n *\n * @param value - The value to convert\n *\n * @returns The converted value\n */\n\n/**\n * The map of localized values for each width.\n */\n\n/**\n * The index type of the locale unit value. It types conversion of units of\n * values that don't start at 0 (i.e. quarters).\n */\n\n/**\n * Converts the unit value to the tuple of values.\n */\n\n/**\n * The tuple of localized era values. The first element represents BC,\n * the second element represents AD.\n */\n\n/**\n * The tuple of localized quarter values. The first element represents Q1.\n */\n\n/**\n * The tuple of localized day values. The first element represents Sunday.\n */\n\n/**\n * The tuple of localized month values. The first element represents January.\n */\n\nexport function buildLocalizeFn(args) {\n  return (value, options) => {\n    const context = options?.context ? String(options.context) : \"standalone\";\n\n    let valuesArray;\n    if (context === \"formatting\" && args.formattingValues) {\n      const defaultWidth = args.defaultFormattingWidth || args.defaultWidth;\n      const width = options?.width ? String(options.width) : defaultWidth;\n\n      valuesArray =\n        args.formattingValues[width] || args.formattingValues[defaultWidth];\n    } else {\n      const defaultWidth = args.defaultWidth;\n      const width = options?.width ? String(options.width) : args.defaultWidth;\n\n      valuesArray = args.values[width] || args.values[defaultWidth];\n    }\n    const index = args.argumentCallback ? args.argumentCallback(value) : value;\n\n    // @ts-expect-error - For some reason TypeScript just don't want to match it, no matter how hard we try. I challenge you to try to remove it!\n    return valuesArray[index];\n  };\n}\n","import { buildLocalizeFn } from \"../../_lib/buildLocalizeFn.js\";\n\nconst eraValues = {\n  narrow: [\"B\", \"A\"],\n  abbreviated: [\"BC\", \"AD\"],\n  wide: [\"Before Christ\", \"Anno Domini\"],\n};\n\nconst quarterValues = {\n  narrow: [\"1\", \"2\", \"3\", \"4\"],\n  abbreviated: [\"Q1\", \"Q2\", \"Q3\", \"Q4\"],\n  wide: [\"1st quarter\", \"2nd quarter\", \"3rd quarter\", \"4th quarter\"],\n};\n\n// Note: in English, the names of days of the week and months are capitalized.\n// If you are making a new locale based on this one, check if the same is true for the language you're working on.\n// Generally, formatted dates should look like they are in the middle of a sentence,\n// e.g. in Spanish language the weekdays and months should be in the lowercase.\nconst monthValues = {\n  narrow: [\"J\", \"F\", \"M\", \"A\", \"M\", \"J\", \"J\", \"A\", \"S\", \"O\", \"N\", \"D\"],\n  abbreviated: [\n    \"Jan\",\n    \"Feb\",\n    \"Mar\",\n    \"Apr\",\n    \"May\",\n    \"Jun\",\n    \"Jul\",\n    \"Aug\",\n    \"Sep\",\n    \"Oct\",\n    \"Nov\",\n    \"Dec\",\n  ],\n\n  wide: [\n    \"January\",\n    \"February\",\n    \"March\",\n    \"April\",\n    \"May\",\n    \"June\",\n    \"July\",\n    \"August\",\n    \"September\",\n    \"October\",\n    \"November\",\n    \"December\",\n  ],\n};\n\nconst dayValues = {\n  narrow: [\"S\", \"M\", \"T\", \"W\", \"T\", \"F\", \"S\"],\n  short: [\"Su\", \"Mo\", \"Tu\", \"We\", \"Th\", \"Fr\", \"Sa\"],\n  abbreviated: [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"],\n  wide: [\n    \"Sunday\",\n    \"Monday\",\n    \"Tuesday\",\n    \"Wednesday\",\n    \"Thursday\",\n    \"Friday\",\n    \"Saturday\",\n  ],\n};\n\nconst dayPeriodValues = {\n  narrow: {\n    am: \"a\",\n    pm: \"p\",\n    midnight: \"mi\",\n    noon: \"n\",\n    morning: \"morning\",\n    afternoon: \"afternoon\",\n    evening: \"evening\",\n    night: \"night\",\n  },\n  abbreviated: {\n    am: \"AM\",\n    pm: \"PM\",\n    midnight: \"midnight\",\n    noon: \"noon\",\n    morning: \"morning\",\n    afternoon: \"afternoon\",\n    evening: \"evening\",\n    night: \"night\",\n  },\n  wide: {\n    am: \"a.m.\",\n    pm: \"p.m.\",\n    midnight: \"midnight\",\n    noon: \"noon\",\n    morning: \"morning\",\n    afternoon: \"afternoon\",\n    evening: \"evening\",\n    night: \"night\",\n  },\n};\n\nconst formattingDayPeriodValues = {\n  narrow: {\n    am: \"a\",\n    pm: \"p\",\n    midnight: \"mi\",\n    noon: \"n\",\n    morning: \"in the morning\",\n    afternoon: \"in the afternoon\",\n    evening: \"in the evening\",\n    night: \"at night\",\n  },\n  abbreviated: {\n    am: \"AM\",\n    pm: \"PM\",\n    midnight: \"midnight\",\n    noon: \"noon\",\n    morning: \"in the morning\",\n    afternoon: \"in the afternoon\",\n    evening: \"in the evening\",\n    night: \"at night\",\n  },\n  wide: {\n    am: \"a.m.\",\n    pm: \"p.m.\",\n    midnight: \"midnight\",\n    noon: \"noon\",\n    morning: \"in the morning\",\n    afternoon: \"in the afternoon\",\n    evening: \"in the evening\",\n    night: \"at night\",\n  },\n};\n\nconst ordinalNumber = (dirtyNumber, _options) => {\n  const number = Number(dirtyNumber);\n\n  // If ordinal numbers depend on context, for example,\n  // if they are different for different grammatical genders,\n  // use `options.unit`.\n  //\n  // `unit` can be 'year', 'quarter', 'month', 'week', 'date', 'dayOfYear',\n  // 'day', 'hour', 'minute', 'second'.\n\n  const rem100 = number % 100;\n  if (rem100 > 20 || rem100 < 10) {\n    switch (rem100 % 10) {\n      case 1:\n        return number + \"st\";\n      case 2:\n        return number + \"nd\";\n      case 3:\n        return number + \"rd\";\n    }\n  }\n  return number + \"th\";\n};\n\nexport const localize = {\n  ordinalNumber,\n\n  era: buildLocalizeFn({\n    values: eraValues,\n    defaultWidth: \"wide\",\n  }),\n\n  quarter: buildLocalizeFn({\n    values: quarterValues,\n    defaultWidth: \"wide\",\n    argumentCallback: (quarter) => quarter - 1,\n  }),\n\n  month: buildLocalizeFn({\n    values: monthValues,\n    defaultWidth: \"wide\",\n  }),\n\n  day: buildLocalizeFn({\n    values: dayValues,\n    defaultWidth: \"wide\",\n  }),\n\n  dayPeriod: buildLocalizeFn({\n    values: dayPeriodValues,\n    defaultWidth: \"wide\",\n    formattingValues: formattingDayPeriodValues,\n    defaultFormattingWidth: \"wide\",\n  }),\n};\n","export function buildMatchFn(args) {\n  return (string, options = {}) => {\n    const width = options.width;\n\n    const matchPattern =\n      (width && args.matchPatterns[width]) ||\n      args.matchPatterns[args.defaultMatchWidth];\n    const matchResult = string.match(matchPattern);\n\n    if (!matchResult) {\n      return null;\n    }\n    const matchedString = matchResult[0];\n\n    const parsePatterns =\n      (width && args.parsePatterns[width]) ||\n      args.parsePatterns[args.defaultParseWidth];\n\n    const key = Array.isArray(parsePatterns)\n      ? findIndex(parsePatterns, (pattern) => pattern.test(matchedString))\n      : // [TODO] -- I challenge you to fix the type\n        findKey(parsePatterns, (pattern) => pattern.test(matchedString));\n\n    let value;\n\n    value = args.valueCallback ? args.valueCallback(key) : key;\n    value = options.valueCallback\n      ? // [TODO] -- I challenge you to fix the type\n        options.valueCallback(value)\n      : value;\n\n    const rest = string.slice(matchedString.length);\n\n    return { value, rest };\n  };\n}\n\nfunction findKey(object, predicate) {\n  for (const key in object) {\n    if (\n      Object.prototype.hasOwnProperty.call(object, key) &&\n      predicate(object[key])\n    ) {\n      return key;\n    }\n  }\n  return undefined;\n}\n\nfunction findIndex(array, predicate) {\n  for (let key = 0; key < array.length; key++) {\n    if (predicate(array[key])) {\n      return key;\n    }\n  }\n  return undefined;\n}\n","export function buildMatchPatternFn(args) {\n  return (string, options = {}) => {\n    const matchResult = string.match(args.matchPattern);\n    if (!matchResult) return null;\n    const matchedString = matchResult[0];\n\n    const parseResult = string.match(args.parsePattern);\n    if (!parseResult) return null;\n    let value = args.valueCallback\n      ? args.valueCallback(parseResult[0])\n      : parseResult[0];\n\n    // [TODO] I challenge you to fix the type\n    value = options.valueCallback ? options.valueCallback(value) : value;\n\n    const rest = string.slice(matchedString.length);\n\n    return { value, rest };\n  };\n}\n","import { buildMatchFn } from \"../../_lib/buildMatchFn.js\";\nimport { buildMatchPatternFn } from \"../../_lib/buildMatchPatternFn.js\";\n\nconst matchOrdinalNumberPattern = /^(\\d+)(th|st|nd|rd)?/i;\nconst parseOrdinalNumberPattern = /\\d+/i;\n\nconst matchEraPatterns = {\n  narrow: /^(b|a)/i,\n  abbreviated: /^(b\\.?\\s?c\\.?|b\\.?\\s?c\\.?\\s?e\\.?|a\\.?\\s?d\\.?|c\\.?\\s?e\\.?)/i,\n  wide: /^(before christ|before common era|anno domini|common era)/i,\n};\nconst parseEraPatterns = {\n  any: [/^b/i, /^(a|c)/i],\n};\n\nconst matchQuarterPatterns = {\n  narrow: /^[1234]/i,\n  abbreviated: /^q[1234]/i,\n  wide: /^[1234](th|st|nd|rd)? quarter/i,\n};\nconst parseQuarterPatterns = {\n  any: [/1/i, /2/i, /3/i, /4/i],\n};\n\nconst matchMonthPatterns = {\n  narrow: /^[jfmasond]/i,\n  abbreviated: /^(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec)/i,\n  wide: /^(january|february|march|april|may|june|july|august|september|october|november|december)/i,\n};\nconst parseMonthPatterns = {\n  narrow: [\n    /^j/i,\n    /^f/i,\n    /^m/i,\n    /^a/i,\n    /^m/i,\n    /^j/i,\n    /^j/i,\n    /^a/i,\n    /^s/i,\n    /^o/i,\n    /^n/i,\n    /^d/i,\n  ],\n\n  any: [\n    /^ja/i,\n    /^f/i,\n    /^mar/i,\n    /^ap/i,\n    /^may/i,\n    /^jun/i,\n    /^jul/i,\n    /^au/i,\n    /^s/i,\n    /^o/i,\n    /^n/i,\n    /^d/i,\n  ],\n};\n\nconst matchDayPatterns = {\n  narrow: /^[smtwf]/i,\n  short: /^(su|mo|tu|we|th|fr|sa)/i,\n  abbreviated: /^(sun|mon|tue|wed|thu|fri|sat)/i,\n  wide: /^(sunday|monday|tuesday|wednesday|thursday|friday|saturday)/i,\n};\nconst parseDayPatterns = {\n  narrow: [/^s/i, /^m/i, /^t/i, /^w/i, /^t/i, /^f/i, /^s/i],\n  any: [/^su/i, /^m/i, /^tu/i, /^w/i, /^th/i, /^f/i, /^sa/i],\n};\n\nconst matchDayPeriodPatterns = {\n  narrow: /^(a|p|mi|n|(in the|at) (morning|afternoon|evening|night))/i,\n  any: /^([ap]\\.?\\s?m\\.?|midnight|noon|(in the|at) (morning|afternoon|evening|night))/i,\n};\nconst parseDayPeriodPatterns = {\n  any: {\n    am: /^a/i,\n    pm: /^p/i,\n    midnight: /^mi/i,\n    noon: /^no/i,\n    morning: /morning/i,\n    afternoon: /afternoon/i,\n    evening: /evening/i,\n    night: /night/i,\n  },\n};\n\nexport const match = {\n  ordinalNumber: buildMatchPatternFn({\n    matchPattern: matchOrdinalNumberPattern,\n    parsePattern: parseOrdinalNumberPattern,\n    valueCallback: (value) => parseInt(value, 10),\n  }),\n\n  era: buildMatchFn({\n    matchPatterns: matchEraPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseEraPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  quarter: buildMatchFn({\n    matchPatterns: matchQuarterPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseQuarterPatterns,\n    defaultParseWidth: \"any\",\n    valueCallback: (index) => index + 1,\n  }),\n\n  month: buildMatchFn({\n    matchPatterns: matchMonthPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseMonthPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  day: buildMatchFn({\n    matchPatterns: matchDayPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseDayPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  dayPeriod: buildMatchFn({\n    matchPatterns: matchDayPeriodPatterns,\n    defaultMatchWidth: \"any\",\n    parsePatterns: parseDayPeriodPatterns,\n    defaultParseWidth: \"any\",\n  }),\n};\n","import { formatDistance } from \"./en-US/_lib/formatDistance.js\";\nimport { formatLong } from \"./en-US/_lib/formatLong.js\";\nimport { formatRelative } from \"./en-US/_lib/formatRelative.js\";\nimport { localize } from \"./en-US/_lib/localize.js\";\nimport { match } from \"./en-US/_lib/match.js\";\n\n/**\n * @category Locales\n * @summary English locale (United States).\n * @language English\n * @iso-639-2 eng\n * @author Sasha Koss [@kossnocorp](https://github.com/kossnocorp)\n * @author Lesha Koss [@leshakoss](https://github.com/leshakoss)\n */\nexport const enUS = {\n  code: \"en-US\",\n  formatDistance: formatDistance,\n  formatLong: formatLong,\n  formatRelative: formatRelative,\n  localize: localize,\n  match: match,\n  options: {\n    weekStartsOn: 0 /* Sunday */,\n    firstWeekContainsDate: 1,\n  },\n};\n\n// Fallback for modularized imports:\nexport default enUS;\n","import { differenceInCalendarDays } from \"./differenceInCalendarDays.js\";\nimport { startOfYear } from \"./startOfYear.js\";\nimport { toDate } from \"./toDate.js\";\n\n/**\n * The {@link getDayOfYear} function options.\n */\n\n/**\n * @name getDayOfYear\n * @category Day Helpers\n * @summary Get the day of the year of the given date.\n *\n * @description\n * Get the day of the year of the given date.\n *\n * @param date - The given date\n * @param options - The options\n *\n * @returns The day of year\n *\n * @example\n * // Which day of the year is 2 July 2014?\n * const result = getDayOfYear(new Date(2014, 6, 2))\n * //=> 183\n */\nexport function getDayOfYear(date, options) {\n  const _date = toDate(date, options?.in);\n  const diff = differenceInCalendarDays(_date, startOfYear(_date));\n  const dayOfYear = diff + 1;\n  return dayOfYear;\n}\n\n// Fallback for modularized imports:\nexport default getDayOfYear;\n","import { millisecondsInWeek } from \"./constants.js\";\nimport { startOfISOWeek } from \"./startOfISOWeek.js\";\nimport { startOfISOWeekYear } from \"./startOfISOWeekYear.js\";\nimport { toDate } from \"./toDate.js\";\n\n/**\n * The {@link getISOWeek} function options.\n */\n\n/**\n * @name getISOWeek\n * @category ISO Week Helpers\n * @summary Get the ISO week of the given date.\n *\n * @description\n * Get the ISO week of the given date.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @param date - The given date\n * @param options - The options\n *\n * @returns The ISO week\n *\n * @example\n * // Which week of the ISO-week numbering year is 2 January 2005?\n * const result = getISOWeek(new Date(2005, 0, 2))\n * //=> 53\n */\nexport function getISOWeek(date, options) {\n  const _date = toDate(date, options?.in);\n  const diff = +startOfISOWeek(_date) - +startOfISOWeekYear(_date);\n\n  // Round the number of weeks to the nearest integer because the number of\n  // milliseconds in a week is not constant (e.g. it's different in the week of\n  // the daylight saving time clock shift).\n  return Math.round(diff / millisecondsInWeek) + 1;\n}\n\n// Fallback for modularized imports:\nexport default getISOWeek;\n","import { getDefaultOptions } from \"./_lib/defaultOptions.js\";\nimport { constructFrom } from \"./constructFrom.js\";\nimport { startOfWeek } from \"./startOfWeek.js\";\nimport { toDate } from \"./toDate.js\";\n\n/**\n * The {@link getWeekYear} function options.\n */\n\n/**\n * @name getWeekYear\n * @category Week-Numbering Year Helpers\n * @summary Get the local week-numbering year of the given date.\n *\n * @description\n * Get the local week-numbering year of the given date.\n * The exact calculation depends on the values of\n * `options.weekStartsOn` (which is the index of the first day of the week)\n * and `options.firstWeekContainsDate` (which is the day of January, which is always in\n * the first week of the week-numbering year)\n *\n * Week numbering: https://en.wikipedia.org/wiki/Week#The_ISO_week_date_system\n *\n * @param date - The given date\n * @param options - An object with options.\n *\n * @returns The local week-numbering year\n *\n * @example\n * // Which week numbering year is 26 December 2004 with the default settings?\n * const result = getWeekYear(new Date(2004, 11, 26))\n * //=> 2005\n *\n * @example\n * // Which week numbering year is 26 December 2004 if week starts on Saturday?\n * const result = getWeekYear(new Date(2004, 11, 26), { weekStartsOn: 6 })\n * //=> 2004\n *\n * @example\n * // Which week numbering year is 26 December 2004 if the first week contains 4 January?\n * const result = getWeekYear(new Date(2004, 11, 26), { firstWeekContainsDate: 4 })\n * //=> 2004\n */\nexport function getWeekYear(date, options) {\n  const _date = toDate(date, options?.in);\n  const year = _date.getFullYear();\n\n  const defaultOptions = getDefaultOptions();\n  const firstWeekContainsDate =\n    options?.firstWeekContainsDate ??\n    options?.locale?.options?.firstWeekContainsDate ??\n    defaultOptions.firstWeekContainsDate ??\n    defaultOptions.locale?.options?.firstWeekContainsDate ??\n    1;\n\n  const firstWeekOfNextYear = constructFrom(options?.in || date, 0);\n  firstWeekOfNextYear.setFullYear(year + 1, 0, firstWeekContainsDate);\n  firstWeekOfNextYear.setHours(0, 0, 0, 0);\n  const startOfNextYear = startOfWeek(firstWeekOfNextYear, options);\n\n  const firstWeekOfThisYear = constructFrom(options?.in || date, 0);\n  firstWeekOfThisYear.setFullYear(year, 0, firstWeekContainsDate);\n  firstWeekOfThisYear.setHours(0, 0, 0, 0);\n  const startOfThisYear = startOfWeek(firstWeekOfThisYear, options);\n\n  if (+_date >= +startOfNextYear) {\n    return year + 1;\n  } else if (+_date >= +startOfThisYear) {\n    return year;\n  } else {\n    return year - 1;\n  }\n}\n\n// Fallback for modularized imports:\nexport default getWeekYear;\n","import { getDefaultOptions } from \"./_lib/defaultOptions.js\";\nimport { constructFrom } from \"./constructFrom.js\";\nimport { getWeekYear } from \"./getWeekYear.js\";\nimport { startOfWeek } from \"./startOfWeek.js\";\n\n/**\n * The {@link startOfWeekYear} function options.\n */\n\n/**\n * @name startOfWeekYear\n * @category Week-Numbering Year Helpers\n * @summary Return the start of a local week-numbering year for the given date.\n *\n * @description\n * Return the start of a local week-numbering year.\n * The exact calculation depends on the values of\n * `options.weekStartsOn` (which is the index of the first day of the week)\n * and `options.firstWeekContainsDate` (which is the day of January, which is always in\n * the first week of the week-numbering year)\n *\n * Week numbering: https://en.wikipedia.org/wiki/Week#The_ISO_week_date_system\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n * @typeParam ResultDate - The result `Date` type.\n *\n * @param date - The original date\n * @param options - An object with options\n *\n * @returns The start of a week-numbering year\n *\n * @example\n * // The start of an a week-numbering year for 2 July 2005 with default settings:\n * const result = startOfWeekYear(new Date(2005, 6, 2))\n * //=> Sun Dec 26 2004 00:00:00\n *\n * @example\n * // The start of a week-numbering year for 2 July 2005\n * // if Monday is the first day of week\n * // and 4 January is always in the first week of the year:\n * const result = startOfWeekYear(new Date(2005, 6, 2), {\n *   weekStartsOn: 1,\n *   firstWeekContainsDate: 4\n * })\n * //=> Mon Jan 03 2005 00:00:00\n */\nexport function startOfWeekYear(date, options) {\n  const defaultOptions = getDefaultOptions();\n  const firstWeekContainsDate =\n    options?.firstWeekContainsDate ??\n    options?.locale?.options?.firstWeekContainsDate ??\n    defaultOptions.firstWeekContainsDate ??\n    defaultOptions.locale?.options?.firstWeekContainsDate ??\n    1;\n\n  const year = getWeekYear(date, options);\n  const firstWeek = constructFrom(options?.in || date, 0);\n  firstWeek.setFullYear(year, 0, firstWeekContainsDate);\n  firstWeek.setHours(0, 0, 0, 0);\n  const _date = startOfWeek(firstWeek, options);\n  return _date;\n}\n\n// Fallback for modularized imports:\nexport default startOfWeekYear;\n","import { millisecondsInWeek } from \"./constants.js\";\nimport { startOfWeek } from \"./startOfWeek.js\";\nimport { startOfWeekYear } from \"./startOfWeekYear.js\";\nimport { toDate } from \"./toDate.js\";\n\n/**\n * The {@link getWeek} function options.\n */\n\n/**\n * @name getWeek\n * @category Week Helpers\n * @summary Get the local week index of the given date.\n *\n * @description\n * Get the local week index of the given date.\n * The exact calculation depends on the values of\n * `options.weekStartsOn` (which is the index of the first day of the week)\n * and `options.firstWeekContainsDate` (which is the day of January, which is always in\n * the first week of the week-numbering year)\n *\n * Week numbering: https://en.wikipedia.org/wiki/Week#The_ISO_week_date_system\n *\n * @param date - The given date\n * @param options - An object with options\n *\n * @returns The week\n *\n * @example\n * // Which week of the local week numbering year is 2 January 2005 with default options?\n * const result = getWeek(new Date(2005, 0, 2))\n * //=> 2\n *\n * @example\n * // Which week of the local week numbering year is 2 January 2005,\n * // if Monday is the first day of the week,\n * // and the first week of the year always contains 4 January?\n * const result = getWeek(new Date(2005, 0, 2), {\n *   weekStartsOn: 1,\n *   firstWeekContainsDate: 4\n * })\n * //=> 53\n */\nexport function getWeek(date, options) {\n  const _date = toDate(date, options?.in);\n  const diff = +startOfWeek(_date, options) - +startOfWeekYear(_date, options);\n\n  // Round the number of weeks to the nearest integer because the number of\n  // milliseconds in a week is not constant (e.g. it's different in the week of\n  // the daylight saving time clock shift).\n  return Math.round(diff / millisecondsInWeek) + 1;\n}\n\n// Fallback for modularized imports:\nexport default getWeek;\n","export function addLeadingZeros(number, targetLength) {\n  const sign = number < 0 ? \"-\" : \"\";\n  const output = Math.abs(number).toString().padStart(targetLength, \"0\");\n  return sign + output;\n}\n","import { addLeadingZeros } from \"../addLeadingZeros.js\";\n\n/*\n * |     | Unit                           |     | Unit                           |\n * |-----|--------------------------------|-----|--------------------------------|\n * |  a  | AM, PM                         |  A* |                                |\n * |  d  | Day of month                   |  D  |                                |\n * |  h  | Hour [1-12]                    |  H  | Hour [0-23]                    |\n * |  m  | Minute                         |  M  | Month                          |\n * |  s  | Second                         |  S  | Fraction of second             |\n * |  y  | Year (abs)                     |  Y  |                                |\n *\n * Letters marked by * are not implemented but reserved by Unicode standard.\n */\n\nexport const lightFormatters = {\n  // Year\n  y(date, token) {\n    // From http://www.unicode.org/reports/tr35/tr35-31/tr35-dates.html#Date_Format_tokens\n    // | Year     |     y | yy |   yyy |  yyyy | yyyyy |\n    // |----------|-------|----|-------|-------|-------|\n    // | AD 1     |     1 | 01 |   001 |  0001 | 00001 |\n    // | AD 12    |    12 | 12 |   012 |  0012 | 00012 |\n    // | AD 123   |   123 | 23 |   123 |  0123 | 00123 |\n    // | AD 1234  |  1234 | 34 |  1234 |  1234 | 01234 |\n    // | AD 12345 | 12345 | 45 | 12345 | 12345 | 12345 |\n\n    const signedYear = date.getFullYear();\n    // Returns 1 for 1 BC (which is year 0 in JavaScript)\n    const year = signedYear > 0 ? signedYear : 1 - signedYear;\n    return addLeadingZeros(token === \"yy\" ? year % 100 : year, token.length);\n  },\n\n  // Month\n  M(date, token) {\n    const month = date.getMonth();\n    return token === \"M\" ? String(month + 1) : addLeadingZeros(month + 1, 2);\n  },\n\n  // Day of the month\n  d(date, token) {\n    return addLeadingZeros(date.getDate(), token.length);\n  },\n\n  // AM or PM\n  a(date, token) {\n    const dayPeriodEnumValue = date.getHours() / 12 >= 1 ? \"pm\" : \"am\";\n\n    switch (token) {\n      case \"a\":\n      case \"aa\":\n        return dayPeriodEnumValue.toUpperCase();\n      case \"aaa\":\n        return dayPeriodEnumValue;\n      case \"aaaaa\":\n        return dayPeriodEnumValue[0];\n      case \"aaaa\":\n      default:\n        return dayPeriodEnumValue === \"am\" ? \"a.m.\" : \"p.m.\";\n    }\n  },\n\n  // Hour [1-12]\n  h(date, token) {\n    return addLeadingZeros(date.getHours() % 12 || 12, token.length);\n  },\n\n  // Hour [0-23]\n  H(date, token) {\n    return addLeadingZeros(date.getHours(), token.length);\n  },\n\n  // Minute\n  m(date, token) {\n    return addLeadingZeros(date.getMinutes(), token.length);\n  },\n\n  // Second\n  s(date, token) {\n    return addLeadingZeros(date.getSeconds(), token.length);\n  },\n\n  // Fraction of second\n  S(date, token) {\n    const numberOfDigits = token.length;\n    const milliseconds = date.getMilliseconds();\n    const fractionalSeconds = Math.trunc(\n      milliseconds * Math.pow(10, numberOfDigits - 3),\n    );\n    return addLeadingZeros(fractionalSeconds, token.length);\n  },\n};\n","import { getDayOfYear } from \"../../getDayOfYear.js\";\nimport { getISOWeek } from \"../../getISOWeek.js\";\nimport { getISOWeekYear } from \"../../getISOWeekYear.js\";\nimport { getWeek } from \"../../getWeek.js\";\nimport { getWeekYear } from \"../../getWeekYear.js\";\n\nimport { addLeadingZeros } from \"../addLeadingZeros.js\";\nimport { lightFormatters } from \"./lightFormatters.js\";\n\nconst dayPeriodEnum = {\n  am: \"am\",\n  pm: \"pm\",\n  midnight: \"midnight\",\n  noon: \"noon\",\n  morning: \"morning\",\n  afternoon: \"afternoon\",\n  evening: \"evening\",\n  night: \"night\",\n};\n\n/*\n * |     | Unit                           |     | Unit                           |\n * |-----|--------------------------------|-----|--------------------------------|\n * |  a  | AM, PM                         |  A* | Milliseconds in day            |\n * |  b  | AM, PM, noon, midnight         |  B  | Flexible day period            |\n * |  c  | Stand-alone local day of week  |  C* | Localized hour w/ day period   |\n * |  d  | Day of month                   |  D  | Day of year                    |\n * |  e  | Local day of week              |  E  | Day of week                    |\n * |  f  |                                |  F* | Day of week in month           |\n * |  g* | Modified Julian day            |  G  | Era                            |\n * |  h  | Hour [1-12]                    |  H  | Hour [0-23]                    |\n * |  i! | ISO day of week                |  I! | ISO week of year               |\n * |  j* | Localized hour w/ day period   |  J* | Localized hour w/o day period  |\n * |  k  | Hour [1-24]                    |  K  | Hour [0-11]                    |\n * |  l* | (deprecated)                   |  L  | Stand-alone month              |\n * |  m  | Minute                         |  M  | Month                          |\n * |  n  |                                |  N  |                                |\n * |  o! | Ordinal number modifier        |  O  | Timezone (GMT)                 |\n * |  p! | Long localized time            |  P! | Long localized date            |\n * |  q  | Stand-alone quarter            |  Q  | Quarter                        |\n * |  r* | Related Gregorian year         |  R! | ISO week-numbering year        |\n * |  s  | Second                         |  S  | Fraction of second             |\n * |  t! | Seconds timestamp              |  T! | Milliseconds timestamp         |\n * |  u  | Extended year                  |  U* | Cyclic year                    |\n * |  v* | Timezone (generic non-locat.)  |  V* | Timezone (location)            |\n * |  w  | Local week of year             |  W* | Week of month                  |\n * |  x  | Timezone (ISO-8601 w/o Z)      |  X  | Timezone (ISO-8601)            |\n * |  y  | Year (abs)                     |  Y  | Local week-numbering year      |\n * |  z  | Timezone (specific non-locat.) |  Z* | Timezone (aliases)             |\n *\n * Letters marked by * are not implemented but reserved by Unicode standard.\n *\n * Letters marked by ! are non-standard, but implemented by date-fns:\n * - `o` modifies the previous token to turn it into an ordinal (see `format` docs)\n * - `i` is ISO day of week. For `i` and `ii` is returns numeric ISO week days,\n *   i.e. 7 for Sunday, 1 for Monday, etc.\n * - `I` is ISO week of year, as opposed to `w` which is local week of year.\n * - `R` is ISO week-numbering year, as opposed to `Y` which is local week-numbering year.\n *   `R` is supposed to be used in conjunction with `I` and `i`\n *   for universal ISO week-numbering date, whereas\n *   `Y` is supposed to be used in conjunction with `w` and `e`\n *   for week-numbering date specific to the locale.\n * - `P` is long localized date format\n * - `p` is long localized time format\n */\n\nexport const formatters = {\n  // Era\n  G: function (date, token, localize) {\n    const era = date.getFullYear() > 0 ? 1 : 0;\n    switch (token) {\n      // AD, BC\n      case \"G\":\n      case \"GG\":\n      case \"GGG\":\n        return localize.era(era, { width: \"abbreviated\" });\n      // A, B\n      case \"GGGGG\":\n        return localize.era(era, { width: \"narrow\" });\n      // Anno Domini, Before Christ\n      case \"GGGG\":\n      default:\n        return localize.era(era, { width: \"wide\" });\n    }\n  },\n\n  // Year\n  y: function (date, token, localize) {\n    // Ordinal number\n    if (token === \"yo\") {\n      const signedYear = date.getFullYear();\n      // Returns 1 for 1 BC (which is year 0 in JavaScript)\n      const year = signedYear > 0 ? signedYear : 1 - signedYear;\n      return localize.ordinalNumber(year, { unit: \"year\" });\n    }\n\n    return lightFormatters.y(date, token);\n  },\n\n  // Local week-numbering year\n  Y: function (date, token, localize, options) {\n    const signedWeekYear = getWeekYear(date, options);\n    // Returns 1 for 1 BC (which is year 0 in JavaScript)\n    const weekYear = signedWeekYear > 0 ? signedWeekYear : 1 - signedWeekYear;\n\n    // Two digit year\n    if (token === \"YY\") {\n      const twoDigitYear = weekYear % 100;\n      return addLeadingZeros(twoDigitYear, 2);\n    }\n\n    // Ordinal number\n    if (token === \"Yo\") {\n      return localize.ordinalNumber(weekYear, { unit: \"year\" });\n    }\n\n    // Padding\n    return addLeadingZeros(weekYear, token.length);\n  },\n\n  // ISO week-numbering year\n  R: function (date, token) {\n    const isoWeekYear = getISOWeekYear(date);\n\n    // Padding\n    return addLeadingZeros(isoWeekYear, token.length);\n  },\n\n  // Extended year. This is a single number designating the year of this calendar system.\n  // The main difference between `y` and `u` localizers are B.C. years:\n  // | Year | `y` | `u` |\n  // |------|-----|-----|\n  // | AC 1 |   1 |   1 |\n  // | BC 1 |   1 |   0 |\n  // | BC 2 |   2 |  -1 |\n  // Also `yy` always returns the last two digits of a year,\n  // while `uu` pads single digit years to 2 characters and returns other years unchanged.\n  u: function (date, token) {\n    const year = date.getFullYear();\n    return addLeadingZeros(year, token.length);\n  },\n\n  // Quarter\n  Q: function (date, token, localize) {\n    const quarter = Math.ceil((date.getMonth() + 1) / 3);\n    switch (token) {\n      // 1, 2, 3, 4\n      case \"Q\":\n        return String(quarter);\n      // 01, 02, 03, 04\n      case \"QQ\":\n        return addLeadingZeros(quarter, 2);\n      // 1st, 2nd, 3rd, 4th\n      case \"Qo\":\n        return localize.ordinalNumber(quarter, { unit: \"quarter\" });\n      // Q1, Q2, Q3, Q4\n      case \"QQQ\":\n        return localize.quarter(quarter, {\n          width: \"abbreviated\",\n          context: \"formatting\",\n        });\n      // 1, 2, 3, 4 (narrow quarter; could be not numerical)\n      case \"QQQQQ\":\n        return localize.quarter(quarter, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      // 1st quarter, 2nd quarter, ...\n      case \"QQQQ\":\n      default:\n        return localize.quarter(quarter, {\n          width: \"wide\",\n          context: \"formatting\",\n        });\n    }\n  },\n\n  // Stand-alone quarter\n  q: function (date, token, localize) {\n    const quarter = Math.ceil((date.getMonth() + 1) / 3);\n    switch (token) {\n      // 1, 2, 3, 4\n      case \"q\":\n        return String(quarter);\n      // 01, 02, 03, 04\n      case \"qq\":\n        return addLeadingZeros(quarter, 2);\n      // 1st, 2nd, 3rd, 4th\n      case \"qo\":\n        return localize.ordinalNumber(quarter, { unit: \"quarter\" });\n      // Q1, Q2, Q3, Q4\n      case \"qqq\":\n        return localize.quarter(quarter, {\n          width: \"abbreviated\",\n          context: \"standalone\",\n        });\n      // 1, 2, 3, 4 (narrow quarter; could be not numerical)\n      case \"qqqqq\":\n        return localize.quarter(quarter, {\n          width: \"narrow\",\n          context: \"standalone\",\n        });\n      // 1st quarter, 2nd quarter, ...\n      case \"qqqq\":\n      default:\n        return localize.quarter(quarter, {\n          width: \"wide\",\n          context: \"standalone\",\n        });\n    }\n  },\n\n  // Month\n  M: function (date, token, localize) {\n    const month = date.getMonth();\n    switch (token) {\n      case \"M\":\n      case \"MM\":\n        return lightFormatters.M(date, token);\n      // 1st, 2nd, ..., 12th\n      case \"Mo\":\n        return localize.ordinalNumber(month + 1, { unit: \"month\" });\n      // Jan, Feb, ..., Dec\n      case \"MMM\":\n        return localize.month(month, {\n          width: \"abbreviated\",\n          context: \"formatting\",\n        });\n      // J, F, ..., D\n      case \"MMMMM\":\n        return localize.month(month, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      // January, February, ..., December\n      case \"MMMM\":\n      default:\n        return localize.month(month, { width: \"wide\", context: \"formatting\" });\n    }\n  },\n\n  // Stand-alone month\n  L: function (date, token, localize) {\n    const month = date.getMonth();\n    switch (token) {\n      // 1, 2, ..., 12\n      case \"L\":\n        return String(month + 1);\n      // 01, 02, ..., 12\n      case \"LL\":\n        return addLeadingZeros(month + 1, 2);\n      // 1st, 2nd, ..., 12th\n      case \"Lo\":\n        return localize.ordinalNumber(month + 1, { unit: \"month\" });\n      // Jan, Feb, ..., Dec\n      case \"LLL\":\n        return localize.month(month, {\n          width: \"abbreviated\",\n          context: \"standalone\",\n        });\n      // J, F, ..., D\n      case \"LLLLL\":\n        return localize.month(month, {\n          width: \"narrow\",\n          context: \"standalone\",\n        });\n      // January, February, ..., December\n      case \"LLLL\":\n      default:\n        return localize.month(month, { width: \"wide\", context: \"standalone\" });\n    }\n  },\n\n  // Local week of year\n  w: function (date, token, localize, options) {\n    const week = getWeek(date, options);\n\n    if (token === \"wo\") {\n      return localize.ordinalNumber(week, { unit: \"week\" });\n    }\n\n    return addLeadingZeros(week, token.length);\n  },\n\n  // ISO week of year\n  I: function (date, token, localize) {\n    const isoWeek = getISOWeek(date);\n\n    if (token === \"Io\") {\n      return localize.ordinalNumber(isoWeek, { unit: \"week\" });\n    }\n\n    return addLeadingZeros(isoWeek, token.length);\n  },\n\n  // Day of the month\n  d: function (date, token, localize) {\n    if (token === \"do\") {\n      return localize.ordinalNumber(date.getDate(), { unit: \"date\" });\n    }\n\n    return lightFormatters.d(date, token);\n  },\n\n  // Day of year\n  D: function (date, token, localize) {\n    const dayOfYear = getDayOfYear(date);\n\n    if (token === \"Do\") {\n      return localize.ordinalNumber(dayOfYear, { unit: \"dayOfYear\" });\n    }\n\n    return addLeadingZeros(dayOfYear, token.length);\n  },\n\n  // Day of week\n  E: function (date, token, localize) {\n    const dayOfWeek = date.getDay();\n    switch (token) {\n      // Tue\n      case \"E\":\n      case \"EE\":\n      case \"EEE\":\n        return localize.day(dayOfWeek, {\n          width: \"abbreviated\",\n          context: \"formatting\",\n        });\n      // T\n      case \"EEEEE\":\n        return localize.day(dayOfWeek, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      // Tu\n      case \"EEEEEE\":\n        return localize.day(dayOfWeek, {\n          width: \"short\",\n          context: \"formatting\",\n        });\n      // Tuesday\n      case \"EEEE\":\n      default:\n        return localize.day(dayOfWeek, {\n          width: \"wide\",\n          context: \"formatting\",\n        });\n    }\n  },\n\n  // Local day of week\n  e: function (date, token, localize, options) {\n    const dayOfWeek = date.getDay();\n    const localDayOfWeek = (dayOfWeek - options.weekStartsOn + 8) % 7 || 7;\n    switch (token) {\n      // Numerical value (Nth day of week with current locale or weekStartsOn)\n      case \"e\":\n        return String(localDayOfWeek);\n      // Padded numerical value\n      case \"ee\":\n        return addLeadingZeros(localDayOfWeek, 2);\n      // 1st, 2nd, ..., 7th\n      case \"eo\":\n        return localize.ordinalNumber(localDayOfWeek, { unit: \"day\" });\n      case \"eee\":\n        return localize.day(dayOfWeek, {\n          width: \"abbreviated\",\n          context: \"formatting\",\n        });\n      // T\n      case \"eeeee\":\n        return localize.day(dayOfWeek, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      // Tu\n      case \"eeeeee\":\n        return localize.day(dayOfWeek, {\n          width: \"short\",\n          context: \"formatting\",\n        });\n      // Tuesday\n      case \"eeee\":\n      default:\n        return localize.day(dayOfWeek, {\n          width: \"wide\",\n          context: \"formatting\",\n        });\n    }\n  },\n\n  // Stand-alone local day of week\n  c: function (date, token, localize, options) {\n    const dayOfWeek = date.getDay();\n    const localDayOfWeek = (dayOfWeek - options.weekStartsOn + 8) % 7 || 7;\n    switch (token) {\n      // Numerical value (same as in `e`)\n      case \"c\":\n        return String(localDayOfWeek);\n      // Padded numerical value\n      case \"cc\":\n        return addLeadingZeros(localDayOfWeek, token.length);\n      // 1st, 2nd, ..., 7th\n      case \"co\":\n        return localize.ordinalNumber(localDayOfWeek, { unit: \"day\" });\n      case \"ccc\":\n        return localize.day(dayOfWeek, {\n          width: \"abbreviated\",\n          context: \"standalone\",\n        });\n      // T\n      case \"ccccc\":\n        return localize.day(dayOfWeek, {\n          width: \"narrow\",\n          context: \"standalone\",\n        });\n      // Tu\n      case \"cccccc\":\n        return localize.day(dayOfWeek, {\n          width: \"short\",\n          context: \"standalone\",\n        });\n      // Tuesday\n      case \"cccc\":\n      default:\n        return localize.day(dayOfWeek, {\n          width: \"wide\",\n          context: \"standalone\",\n        });\n    }\n  },\n\n  // ISO day of week\n  i: function (date, token, localize) {\n    const dayOfWeek = date.getDay();\n    const isoDayOfWeek = dayOfWeek === 0 ? 7 : dayOfWeek;\n    switch (token) {\n      // 2\n      case \"i\":\n        return String(isoDayOfWeek);\n      // 02\n      case \"ii\":\n        return addLeadingZeros(isoDayOfWeek, token.length);\n      // 2nd\n      case \"io\":\n        return localize.ordinalNumber(isoDayOfWeek, { unit: \"day\" });\n      // Tue\n      case \"iii\":\n        return localize.day(dayOfWeek, {\n          width: \"abbreviated\",\n          context: \"formatting\",\n        });\n      // T\n      case \"iiiii\":\n        return localize.day(dayOfWeek, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      // Tu\n      case \"iiiiii\":\n        return localize.day(dayOfWeek, {\n          width: \"short\",\n          context: \"formatting\",\n        });\n      // Tuesday\n      case \"iiii\":\n      default:\n        return localize.day(dayOfWeek, {\n          width: \"wide\",\n          context: \"formatting\",\n        });\n    }\n  },\n\n  // AM or PM\n  a: function (date, token, localize) {\n    const hours = date.getHours();\n    const dayPeriodEnumValue = hours / 12 >= 1 ? \"pm\" : \"am\";\n\n    switch (token) {\n      case \"a\":\n      case \"aa\":\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"abbreviated\",\n          context: \"formatting\",\n        });\n      case \"aaa\":\n        return localize\n          .dayPeriod(dayPeriodEnumValue, {\n            width: \"abbreviated\",\n            context: \"formatting\",\n          })\n          .toLowerCase();\n      case \"aaaaa\":\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      case \"aaaa\":\n      default:\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"wide\",\n          context: \"formatting\",\n        });\n    }\n  },\n\n  // AM, PM, midnight, noon\n  b: function (date, token, localize) {\n    const hours = date.getHours();\n    let dayPeriodEnumValue;\n    if (hours === 12) {\n      dayPeriodEnumValue = dayPeriodEnum.noon;\n    } else if (hours === 0) {\n      dayPeriodEnumValue = dayPeriodEnum.midnight;\n    } else {\n      dayPeriodEnumValue = hours / 12 >= 1 ? \"pm\" : \"am\";\n    }\n\n    switch (token) {\n      case \"b\":\n      case \"bb\":\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"abbreviated\",\n          context: \"formatting\",\n        });\n      case \"bbb\":\n        return localize\n          .dayPeriod(dayPeriodEnumValue, {\n            width: \"abbreviated\",\n            context: \"formatting\",\n          })\n          .toLowerCase();\n      case \"bbbbb\":\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      case \"bbbb\":\n      default:\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"wide\",\n          context: \"formatting\",\n        });\n    }\n  },\n\n  // in the morning, in the afternoon, in the evening, at night\n  B: function (date, token, localize) {\n    const hours = date.getHours();\n    let dayPeriodEnumValue;\n    if (hours >= 17) {\n      dayPeriodEnumValue = dayPeriodEnum.evening;\n    } else if (hours >= 12) {\n      dayPeriodEnumValue = dayPeriodEnum.afternoon;\n    } else if (hours >= 4) {\n      dayPeriodEnumValue = dayPeriodEnum.morning;\n    } else {\n      dayPeriodEnumValue = dayPeriodEnum.night;\n    }\n\n    switch (token) {\n      case \"B\":\n      case \"BB\":\n      case \"BBB\":\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"abbreviated\",\n          context: \"formatting\",\n        });\n      case \"BBBBB\":\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      case \"BBBB\":\n      default:\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"wide\",\n          context: \"formatting\",\n        });\n    }\n  },\n\n  // Hour [1-12]\n  h: function (date, token, localize) {\n    if (token === \"ho\") {\n      let hours = date.getHours() % 12;\n      if (hours === 0) hours = 12;\n      return localize.ordinalNumber(hours, { unit: \"hour\" });\n    }\n\n    return lightFormatters.h(date, token);\n  },\n\n  // Hour [0-23]\n  H: function (date, token, localize) {\n    if (token === \"Ho\") {\n      return localize.ordinalNumber(date.getHours(), { unit: \"hour\" });\n    }\n\n    return lightFormatters.H(date, token);\n  },\n\n  // Hour [0-11]\n  K: function (date, token, localize) {\n    const hours = date.getHours() % 12;\n\n    if (token === \"Ko\") {\n      return localize.ordinalNumber(hours, { unit: \"hour\" });\n    }\n\n    return addLeadingZeros(hours, token.length);\n  },\n\n  // Hour [1-24]\n  k: function (date, token, localize) {\n    let hours = date.getHours();\n    if (hours === 0) hours = 24;\n\n    if (token === \"ko\") {\n      return localize.ordinalNumber(hours, { unit: \"hour\" });\n    }\n\n    return addLeadingZeros(hours, token.length);\n  },\n\n  // Minute\n  m: function (date, token, localize) {\n    if (token === \"mo\") {\n      return localize.ordinalNumber(date.getMinutes(), { unit: \"minute\" });\n    }\n\n    return lightFormatters.m(date, token);\n  },\n\n  // Second\n  s: function (date, token, localize) {\n    if (token === \"so\") {\n      return localize.ordinalNumber(date.getSeconds(), { unit: \"second\" });\n    }\n\n    return lightFormatters.s(date, token);\n  },\n\n  // Fraction of second\n  S: function (date, token) {\n    return lightFormatters.S(date, token);\n  },\n\n  // Timezone (ISO-8601. If offset is 0, output is always `'Z'`)\n  X: function (date, token, _localize) {\n    const timezoneOffset = date.getTimezoneOffset();\n\n    if (timezoneOffset === 0) {\n      return \"Z\";\n    }\n\n    switch (token) {\n      // Hours and optional minutes\n      case \"X\":\n        return formatTimezoneWithOptionalMinutes(timezoneOffset);\n\n      // Hours, minutes and optional seconds without `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `XX`\n      case \"XXXX\":\n      case \"XX\": // Hours and minutes without `:` delimiter\n        return formatTimezone(timezoneOffset);\n\n      // Hours, minutes and optional seconds with `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `XXX`\n      case \"XXXXX\":\n      case \"XXX\": // Hours and minutes with `:` delimiter\n      default:\n        return formatTimezone(timezoneOffset, \":\");\n    }\n  },\n\n  // Timezone (ISO-8601. If offset is 0, output is `'+00:00'` or equivalent)\n  x: function (date, token, _localize) {\n    const timezoneOffset = date.getTimezoneOffset();\n\n    switch (token) {\n      // Hours and optional minutes\n      case \"x\":\n        return formatTimezoneWithOptionalMinutes(timezoneOffset);\n\n      // Hours, minutes and optional seconds without `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `xx`\n      case \"xxxx\":\n      case \"xx\": // Hours and minutes without `:` delimiter\n        return formatTimezone(timezoneOffset);\n\n      // Hours, minutes and optional seconds with `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `xxx`\n      case \"xxxxx\":\n      case \"xxx\": // Hours and minutes with `:` delimiter\n      default:\n        return formatTimezone(timezoneOffset, \":\");\n    }\n  },\n\n  // Timezone (GMT)\n  O: function (date, token, _localize) {\n    const timezoneOffset = date.getTimezoneOffset();\n\n    switch (token) {\n      // Short\n      case \"O\":\n      case \"OO\":\n      case \"OOO\":\n        return \"GMT\" + formatTimezoneShort(timezoneOffset, \":\");\n      // Long\n      case \"OOOO\":\n      default:\n        return \"GMT\" + formatTimezone(timezoneOffset, \":\");\n    }\n  },\n\n  // Timezone (specific non-location)\n  z: function (date, token, _localize) {\n    const timezoneOffset = date.getTimezoneOffset();\n\n    switch (token) {\n      // Short\n      case \"z\":\n      case \"zz\":\n      case \"zzz\":\n        return \"GMT\" + formatTimezoneShort(timezoneOffset, \":\");\n      // Long\n      case \"zzzz\":\n      default:\n        return \"GMT\" + formatTimezone(timezoneOffset, \":\");\n    }\n  },\n\n  // Seconds timestamp\n  t: function (date, token, _localize) {\n    const timestamp = Math.trunc(+date / 1000);\n    return addLeadingZeros(timestamp, token.length);\n  },\n\n  // Milliseconds timestamp\n  T: function (date, token, _localize) {\n    return addLeadingZeros(+date, token.length);\n  },\n};\n\nfunction formatTimezoneShort(offset, delimiter = \"\") {\n  const sign = offset > 0 ? \"-\" : \"+\";\n  const absOffset = Math.abs(offset);\n  const hours = Math.trunc(absOffset / 60);\n  const minutes = absOffset % 60;\n  if (minutes === 0) {\n    return sign + String(hours);\n  }\n  return sign + String(hours) + delimiter + addLeadingZeros(minutes, 2);\n}\n\nfunction formatTimezoneWithOptionalMinutes(offset, delimiter) {\n  if (offset % 60 === 0) {\n    const sign = offset > 0 ? \"-\" : \"+\";\n    return sign + addLeadingZeros(Math.abs(offset) / 60, 2);\n  }\n  return formatTimezone(offset, delimiter);\n}\n\nfunction formatTimezone(offset, delimiter = \"\") {\n  const sign = offset > 0 ? \"-\" : \"+\";\n  const absOffset = Math.abs(offset);\n  const hours = addLeadingZeros(Math.trunc(absOffset / 60), 2);\n  const minutes = addLeadingZeros(absOffset % 60, 2);\n  return sign + hours + delimiter + minutes;\n}\n","const dateLongFormatter = (pattern, formatLong) => {\n  switch (pattern) {\n    case \"P\":\n      return formatLong.date({ width: \"short\" });\n    case \"PP\":\n      return formatLong.date({ width: \"medium\" });\n    case \"PPP\":\n      return formatLong.date({ width: \"long\" });\n    case \"PPPP\":\n    default:\n      return formatLong.date({ width: \"full\" });\n  }\n};\n\nconst timeLongFormatter = (pattern, formatLong) => {\n  switch (pattern) {\n    case \"p\":\n      return formatLong.time({ width: \"short\" });\n    case \"pp\":\n      return formatLong.time({ width: \"medium\" });\n    case \"ppp\":\n      return formatLong.time({ width: \"long\" });\n    case \"pppp\":\n    default:\n      return formatLong.time({ width: \"full\" });\n  }\n};\n\nconst dateTimeLongFormatter = (pattern, formatLong) => {\n  const matchResult = pattern.match(/(P+)(p+)?/) || [];\n  const datePattern = matchResult[1];\n  const timePattern = matchResult[2];\n\n  if (!timePattern) {\n    return dateLongFormatter(pattern, formatLong);\n  }\n\n  let dateTimeFormat;\n\n  switch (datePattern) {\n    case \"P\":\n      dateTimeFormat = formatLong.dateTime({ width: \"short\" });\n      break;\n    case \"PP\":\n      dateTimeFormat = formatLong.dateTime({ width: \"medium\" });\n      break;\n    case \"PPP\":\n      dateTimeFormat = formatLong.dateTime({ width: \"long\" });\n      break;\n    case \"PPPP\":\n    default:\n      dateTimeFormat = formatLong.dateTime({ width: \"full\" });\n      break;\n  }\n\n  return dateTimeFormat\n    .replace(\"{{date}}\", dateLongFormatter(datePattern, formatLong))\n    .replace(\"{{time}}\", timeLongFormatter(timePattern, formatLong));\n};\n\nexport const longFormatters = {\n  p: timeLongFormatter,\n  P: dateTimeLongFormatter,\n};\n","const dayOfYearTokenRE = /^D+$/;\nconst weekYearTokenRE = /^Y+$/;\n\nconst throwTokens = [\"D\", \"DD\", \"YY\", \"YYYY\"];\n\nexport function isProtectedDayOfYearToken(token) {\n  return dayOfYearTokenRE.test(token);\n}\n\nexport function isProtectedWeekYearToken(token) {\n  return weekYearTokenRE.test(token);\n}\n\nexport function warnOrThrowProtectedError(token, format, input) {\n  const _message = message(token, format, input);\n  console.warn(_message);\n  if (throwTokens.includes(token)) throw new RangeError(_message);\n}\n\nfunction message(token, format, input) {\n  const subject = token[0] === \"Y\" ? \"years\" : \"days of the month\";\n  return `Use \\`${token.toLowerCase()}\\` instead of \\`${token}\\` (in \\`${format}\\`) for formatting ${subject} to the input \\`${input}\\`; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md`;\n}\n","import { defaultLocale } from \"./_lib/defaultLocale.js\";\nimport { getDefaultOptions } from \"./_lib/defaultOptions.js\";\nimport { formatters } from \"./_lib/format/formatters.js\";\nimport { longFormatters } from \"./_lib/format/longFormatters.js\";\nimport {\n  isProtectedDayOfYearToken,\n  isProtectedWeekYearToken,\n  warnOrThrowProtectedError,\n} from \"./_lib/protectedTokens.js\";\nimport { isValid } from \"./isValid.js\";\nimport { toDate } from \"./toDate.js\";\n\n// Rexports of internal for libraries to use.\n// See: https://github.com/date-fns/date-fns/issues/3638#issuecomment-1877082874\nexport { formatters, longFormatters };\n\n// This RegExp consists of three parts separated by `|`:\n// - [yYQqMLwIdDecihHKkms]o matches any available ordinal number token\n//   (one of the certain letters followed by `o`)\n// - (\\w)\\1* matches any sequences of the same letter\n// - '' matches two quote characters in a row\n// - '(''|[^'])+('|$) matches anything surrounded by two quote characters ('),\n//   except a single quote symbol, which ends the sequence.\n//   Two quote characters do not end the sequence.\n//   If there is no matching single quote\n//   then the sequence will continue until the end of the string.\n// - . matches any single character unmatched by previous parts of the RegExps\nconst formattingTokensRegExp =\n  /[yYQqMLwIdDecihHKkms]o|(\\w)\\1*|''|'(''|[^'])+('|$)|./g;\n\n// This RegExp catches symbols escaped by quotes, and also\n// sequences of symbols P, p, and the combinations like `PPPPPPPppppp`\nconst longFormattingTokensRegExp = /P+p+|P+|p+|''|'(''|[^'])+('|$)|./g;\n\nconst escapedStringRegExp = /^'([^]*?)'?$/;\nconst doubleQuoteRegExp = /''/g;\nconst unescapedLatinCharacterRegExp = /[a-zA-Z]/;\n\nexport { format as formatDate };\n\n/**\n * The {@link format} function options.\n */\n\n/**\n * @name format\n * @alias formatDate\n * @category Common Helpers\n * @summary Format the date.\n *\n * @description\n * Return the formatted date string in the given format. The result may vary by locale.\n *\n * > ⚠️ Please note that the `format` tokens differ from Moment.js and other libraries.\n * > See: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n *\n * The characters wrapped between two single quotes characters (') are escaped.\n * Two single quotes in a row, whether inside or outside a quoted sequence, represent a 'real' single quote.\n * (see the last example)\n *\n * Format of the string is based on Unicode Technical Standard #35:\n * https://www.unicode.org/reports/tr35/tr35-dates.html#Date_Field_Symbol_Table\n * with a few additions (see note 7 below the table).\n *\n * Accepted patterns:\n * | Unit                            | Pattern | Result examples                   | Notes |\n * |---------------------------------|---------|-----------------------------------|-------|\n * | Era                             | G..GGG  | AD, BC                            |       |\n * |                                 | GGGG    | Anno Domini, Before Christ        | 2     |\n * |                                 | GGGGG   | A, B                              |       |\n * | Calendar year                   | y       | 44, 1, 1900, 2017                 | 5     |\n * |                                 | yo      | 44th, 1st, 0th, 17th              | 5,7   |\n * |                                 | yy      | 44, 01, 00, 17                    | 5     |\n * |                                 | yyy     | 044, 001, 1900, 2017              | 5     |\n * |                                 | yyyy    | 0044, 0001, 1900, 2017            | 5     |\n * |                                 | yyyyy   | ...                               | 3,5   |\n * | Local week-numbering year       | Y       | 44, 1, 1900, 2017                 | 5     |\n * |                                 | Yo      | 44th, 1st, 1900th, 2017th         | 5,7   |\n * |                                 | YY      | 44, 01, 00, 17                    | 5,8   |\n * |                                 | YYY     | 044, 001, 1900, 2017              | 5     |\n * |                                 | YYYY    | 0044, 0001, 1900, 2017            | 5,8   |\n * |                                 | YYYYY   | ...                               | 3,5   |\n * | ISO week-numbering year         | R       | -43, 0, 1, 1900, 2017             | 5,7   |\n * |                                 | RR      | -43, 00, 01, 1900, 2017           | 5,7   |\n * |                                 | RRR     | -043, 000, 001, 1900, 2017        | 5,7   |\n * |                                 | RRRR    | -0043, 0000, 0001, 1900, 2017     | 5,7   |\n * |                                 | RRRRR   | ...                               | 3,5,7 |\n * | Extended year                   | u       | -43, 0, 1, 1900, 2017             | 5     |\n * |                                 | uu      | -43, 01, 1900, 2017               | 5     |\n * |                                 | uuu     | -043, 001, 1900, 2017             | 5     |\n * |                                 | uuuu    | -0043, 0001, 1900, 2017           | 5     |\n * |                                 | uuuuu   | ...                               | 3,5   |\n * | Quarter (formatting)            | Q       | 1, 2, 3, 4                        |       |\n * |                                 | Qo      | 1st, 2nd, 3rd, 4th                | 7     |\n * |                                 | QQ      | 01, 02, 03, 04                    |       |\n * |                                 | QQQ     | Q1, Q2, Q3, Q4                    |       |\n * |                                 | QQQQ    | 1st quarter, 2nd quarter, ...     | 2     |\n * |                                 | QQQQQ   | 1, 2, 3, 4                        | 4     |\n * | Quarter (stand-alone)           | q       | 1, 2, 3, 4                        |       |\n * |                                 | qo      | 1st, 2nd, 3rd, 4th                | 7     |\n * |                                 | qq      | 01, 02, 03, 04                    |       |\n * |                                 | qqq     | Q1, Q2, Q3, Q4                    |       |\n * |                                 | qqqq    | 1st quarter, 2nd quarter, ...     | 2     |\n * |                                 | qqqqq   | 1, 2, 3, 4                        | 4     |\n * | Month (formatting)              | M       | 1, 2, ..., 12                     |       |\n * |                                 | Mo      | 1st, 2nd, ..., 12th               | 7     |\n * |                                 | MM      | 01, 02, ..., 12                   |       |\n * |                                 | MMM     | Jan, Feb, ..., Dec                |       |\n * |                                 | MMMM    | January, February, ..., December  | 2     |\n * |                                 | MMMMM   | J, F, ..., D                      |       |\n * | Month (stand-alone)             | L       | 1, 2, ..., 12                     |       |\n * |                                 | Lo      | 1st, 2nd, ..., 12th               | 7     |\n * |                                 | LL      | 01, 02, ..., 12                   |       |\n * |                                 | LLL     | Jan, Feb, ..., Dec                |       |\n * |                                 | LLLL    | January, February, ..., December  | 2     |\n * |                                 | LLLLL   | J, F, ..., D                      |       |\n * | Local week of year              | w       | 1, 2, ..., 53                     |       |\n * |                                 | wo      | 1st, 2nd, ..., 53th               | 7     |\n * |                                 | ww      | 01, 02, ..., 53                   |       |\n * | ISO week of year                | I       | 1, 2, ..., 53                     | 7     |\n * |                                 | Io      | 1st, 2nd, ..., 53th               | 7     |\n * |                                 | II      | 01, 02, ..., 53                   | 7     |\n * | Day of month                    | d       | 1, 2, ..., 31                     |       |\n * |                                 | do      | 1st, 2nd, ..., 31st               | 7     |\n * |                                 | dd      | 01, 02, ..., 31                   |       |\n * | Day of year                     | D       | 1, 2, ..., 365, 366               | 9     |\n * |                                 | Do      | 1st, 2nd, ..., 365th, 366th       | 7     |\n * |                                 | DD      | 01, 02, ..., 365, 366             | 9     |\n * |                                 | DDD     | 001, 002, ..., 365, 366           |       |\n * |                                 | DDDD    | ...                               | 3     |\n * | Day of week (formatting)        | E..EEE  | Mon, Tue, Wed, ..., Sun           |       |\n * |                                 | EEEE    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 | EEEEE   | M, T, W, T, F, S, S               |       |\n * |                                 | EEEEEE  | Mo, Tu, We, Th, Fr, Sa, Su        |       |\n * | ISO day of week (formatting)    | i       | 1, 2, 3, ..., 7                   | 7     |\n * |                                 | io      | 1st, 2nd, ..., 7th                | 7     |\n * |                                 | ii      | 01, 02, ..., 07                   | 7     |\n * |                                 | iii     | Mon, Tue, Wed, ..., Sun           | 7     |\n * |                                 | iiii    | Monday, Tuesday, ..., Sunday      | 2,7   |\n * |                                 | iiiii   | M, T, W, T, F, S, S               | 7     |\n * |                                 | iiiiii  | Mo, Tu, We, Th, Fr, Sa, Su        | 7     |\n * | Local day of week (formatting)  | e       | 2, 3, 4, ..., 1                   |       |\n * |                                 | eo      | 2nd, 3rd, ..., 1st                | 7     |\n * |                                 | ee      | 02, 03, ..., 01                   |       |\n * |                                 | eee     | Mon, Tue, Wed, ..., Sun           |       |\n * |                                 | eeee    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 | eeeee   | M, T, W, T, F, S, S               |       |\n * |                                 | eeeeee  | Mo, Tu, We, Th, Fr, Sa, Su        |       |\n * | Local day of week (stand-alone) | c       | 2, 3, 4, ..., 1                   |       |\n * |                                 | co      | 2nd, 3rd, ..., 1st                | 7     |\n * |                                 | cc      | 02, 03, ..., 01                   |       |\n * |                                 | ccc     | Mon, Tue, Wed, ..., Sun           |       |\n * |                                 | cccc    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 | ccccc   | M, T, W, T, F, S, S               |       |\n * |                                 | cccccc  | Mo, Tu, We, Th, Fr, Sa, Su        |       |\n * | AM, PM                          | a..aa   | AM, PM                            |       |\n * |                                 | aaa     | am, pm                            |       |\n * |                                 | aaaa    | a.m., p.m.                        | 2     |\n * |                                 | aaaaa   | a, p                              |       |\n * | AM, PM, noon, midnight          | b..bb   | AM, PM, noon, midnight            |       |\n * |                                 | bbb     | am, pm, noon, midnight            |       |\n * |                                 | bbbb    | a.m., p.m., noon, midnight        | 2     |\n * |                                 | bbbbb   | a, p, n, mi                       |       |\n * | Flexible day period             | B..BBB  | at night, in the morning, ...     |       |\n * |                                 | BBBB    | at night, in the morning, ...     | 2     |\n * |                                 | BBBBB   | at night, in the morning, ...     |       |\n * | Hour [1-12]                     | h       | 1, 2, ..., 11, 12                 |       |\n * |                                 | ho      | 1st, 2nd, ..., 11th, 12th         | 7     |\n * |                                 | hh      | 01, 02, ..., 11, 12               |       |\n * | Hour [0-23]                     | H       | 0, 1, 2, ..., 23                  |       |\n * |                                 | Ho      | 0th, 1st, 2nd, ..., 23rd          | 7     |\n * |                                 | HH      | 00, 01, 02, ..., 23               |       |\n * | Hour [0-11]                     | K       | 1, 2, ..., 11, 0                  |       |\n * |                                 | Ko      | 1st, 2nd, ..., 11th, 0th          | 7     |\n * |                                 | KK      | 01, 02, ..., 11, 00               |       |\n * | Hour [1-24]                     | k       | 24, 1, 2, ..., 23                 |       |\n * |                                 | ko      | 24th, 1st, 2nd, ..., 23rd         | 7     |\n * |                                 | kk      | 24, 01, 02, ..., 23               |       |\n * | Minute                          | m       | 0, 1, ..., 59                     |       |\n * |                                 | mo      | 0th, 1st, ..., 59th               | 7     |\n * |                                 | mm      | 00, 01, ..., 59                   |       |\n * | Second                          | s       | 0, 1, ..., 59                     |       |\n * |                                 | so      | 0th, 1st, ..., 59th               | 7     |\n * |                                 | ss      | 00, 01, ..., 59                   |       |\n * | Fraction of second              | S       | 0, 1, ..., 9                      |       |\n * |                                 | SS      | 00, 01, ..., 99                   |       |\n * |                                 | SSS     | 000, 001, ..., 999                |       |\n * |                                 | SSSS    | ...                               | 3     |\n * | Timezone (ISO-8601 w/ Z)        | X       | -08, +0530, Z                     |       |\n * |                                 | XX      | -0800, +0530, Z                   |       |\n * |                                 | XXX     | -08:00, +05:30, Z                 |       |\n * |                                 | XXXX    | -0800, +0530, Z, +123456          | 2     |\n * |                                 | XXXXX   | -08:00, +05:30, Z, +12:34:56      |       |\n * | Timezone (ISO-8601 w/o Z)       | x       | -08, +0530, +00                   |       |\n * |                                 | xx      | -0800, +0530, +0000               |       |\n * |                                 | xxx     | -08:00, +05:30, +00:00            | 2     |\n * |                                 | xxxx    | -0800, +0530, +0000, +123456      |       |\n * |                                 | xxxxx   | -08:00, +05:30, +00:00, +12:34:56 |       |\n * | Timezone (GMT)                  | O...OOO | GMT-8, GMT+5:30, GMT+0            |       |\n * |                                 | OOOO    | GMT-08:00, GMT+05:30, GMT+00:00   | 2     |\n * | Timezone (specific non-locat.)  | z...zzz | GMT-8, GMT+5:30, GMT+0            | 6     |\n * |                                 | zzzz    | GMT-08:00, GMT+05:30, GMT+00:00   | 2,6   |\n * | Seconds timestamp               | t       | 512969520                         | 7     |\n * |                                 | tt      | ...                               | 3,7   |\n * | Milliseconds timestamp          | T       | 512969520900                      | 7     |\n * |                                 | TT      | ...                               | 3,7   |\n * | Long localized date             | P       | 04/29/1453                        | 7     |\n * |                                 | PP      | Apr 29, 1453                      | 7     |\n * |                                 | PPP     | April 29th, 1453                  | 7     |\n * |                                 | PPPP    | Friday, April 29th, 1453          | 2,7   |\n * | Long localized time             | p       | 12:00 AM                          | 7     |\n * |                                 | pp      | 12:00:00 AM                       | 7     |\n * |                                 | ppp     | 12:00:00 AM GMT+2                 | 7     |\n * |                                 | pppp    | 12:00:00 AM GMT+02:00             | 2,7   |\n * | Combination of date and time    | Pp      | 04/29/1453, 12:00 AM              | 7     |\n * |                                 | PPpp    | Apr 29, 1453, 12:00:00 AM         | 7     |\n * |                                 | PPPppp  | April 29th, 1453 at ...           | 7     |\n * |                                 | PPPPpppp| Friday, April 29th, 1453 at ...   | 2,7   |\n * Notes:\n * 1. \"Formatting\" units (e.g. formatting quarter) in the default en-US locale\n *    are the same as \"stand-alone\" units, but are different in some languages.\n *    \"Formatting\" units are declined according to the rules of the language\n *    in the context of a date. \"Stand-alone\" units are always nominative singular:\n *\n *    `format(new Date(2017, 10, 6), 'do LLLL', {locale: cs}) //=> '6. listopad'`\n *\n *    `format(new Date(2017, 10, 6), 'do MMMM', {locale: cs}) //=> '6. listopadu'`\n *\n * 2. Any sequence of the identical letters is a pattern, unless it is escaped by\n *    the single quote characters (see below).\n *    If the sequence is longer than listed in table (e.g. `EEEEEEEEEEE`)\n *    the output will be the same as default pattern for this unit, usually\n *    the longest one (in case of ISO weekdays, `EEEE`). Default patterns for units\n *    are marked with \"2\" in the last column of the table.\n *\n *    `format(new Date(2017, 10, 6), 'MMM') //=> 'Nov'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMM') //=> 'November'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMMM') //=> 'N'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMMMM') //=> 'November'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMMMMM') //=> 'November'`\n *\n * 3. Some patterns could be unlimited length (such as `yyyyyyyy`).\n *    The output will be padded with zeros to match the length of the pattern.\n *\n *    `format(new Date(2017, 10, 6), 'yyyyyyyy') //=> '00002017'`\n *\n * 4. `QQQQQ` and `qqqqq` could be not strictly numerical in some locales.\n *    These tokens represent the shortest form of the quarter.\n *\n * 5. The main difference between `y` and `u` patterns are B.C. years:\n *\n *    | Year | `y` | `u` |\n *    |------|-----|-----|\n *    | AC 1 |   1 |   1 |\n *    | BC 1 |   1 |   0 |\n *    | BC 2 |   2 |  -1 |\n *\n *    Also `yy` always returns the last two digits of a year,\n *    while `uu` pads single digit years to 2 characters and returns other years unchanged:\n *\n *    | Year | `yy` | `uu` |\n *    |------|------|------|\n *    | 1    |   01 |   01 |\n *    | 14   |   14 |   14 |\n *    | 376  |   76 |  376 |\n *    | 1453 |   53 | 1453 |\n *\n *    The same difference is true for local and ISO week-numbering years (`Y` and `R`),\n *    except local week-numbering years are dependent on `options.weekStartsOn`\n *    and `options.firstWeekContainsDate` (compare [getISOWeekYear](https://date-fns.org/docs/getISOWeekYear)\n *    and [getWeekYear](https://date-fns.org/docs/getWeekYear)).\n *\n * 6. Specific non-location timezones are currently unavailable in `date-fns`,\n *    so right now these tokens fall back to GMT timezones.\n *\n * 7. These patterns are not in the Unicode Technical Standard #35:\n *    - `i`: ISO day of week\n *    - `I`: ISO week of year\n *    - `R`: ISO week-numbering year\n *    - `t`: seconds timestamp\n *    - `T`: milliseconds timestamp\n *    - `o`: ordinal number modifier\n *    - `P`: long localized date\n *    - `p`: long localized time\n *\n * 8. `YY` and `YYYY` tokens represent week-numbering years but they are often confused with years.\n *    You should enable `options.useAdditionalWeekYearTokens` to use them. See: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n *\n * 9. `D` and `DD` tokens represent days of the year but they are often confused with days of the month.\n *    You should enable `options.useAdditionalDayOfYearTokens` to use them. See: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n *\n * @param date - The original date\n * @param format - The string of tokens\n * @param options - An object with options\n *\n * @returns The formatted date string\n *\n * @throws `date` must not be Invalid Date\n * @throws `options.locale` must contain `localize` property\n * @throws `options.locale` must contain `formatLong` property\n * @throws use `yyyy` instead of `YYYY` for formatting years using [format provided] to the input [input provided]; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n * @throws use `yy` instead of `YY` for formatting years using [format provided] to the input [input provided]; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n * @throws use `d` instead of `D` for formatting days of the month using [format provided] to the input [input provided]; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n * @throws use `dd` instead of `DD` for formatting days of the month using [format provided] to the input [input provided]; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n * @throws format string contains an unescaped latin alphabet character\n *\n * @example\n * // Represent 11 February 2014 in middle-endian format:\n * const result = format(new Date(2014, 1, 11), 'MM/dd/yyyy')\n * //=> '02/11/2014'\n *\n * @example\n * // Represent 2 July 2014 in Esperanto:\n * import { eoLocale } from 'date-fns/locale/eo'\n * const result = format(new Date(2014, 6, 2), \"do 'de' MMMM yyyy\", {\n *   locale: eoLocale\n * })\n * //=> '2-a de julio 2014'\n *\n * @example\n * // Escape string by single quote characters:\n * const result = format(new Date(2014, 6, 2, 15), \"h 'o''clock'\")\n * //=> \"3 o'clock\"\n */\nexport function format(date, formatStr, options) {\n  const defaultOptions = getDefaultOptions();\n  const locale = options?.locale ?? defaultOptions.locale ?? defaultLocale;\n\n  const firstWeekContainsDate =\n    options?.firstWeekContainsDate ??\n    options?.locale?.options?.firstWeekContainsDate ??\n    defaultOptions.firstWeekContainsDate ??\n    defaultOptions.locale?.options?.firstWeekContainsDate ??\n    1;\n\n  const weekStartsOn =\n    options?.weekStartsOn ??\n    options?.locale?.options?.weekStartsOn ??\n    defaultOptions.weekStartsOn ??\n    defaultOptions.locale?.options?.weekStartsOn ??\n    0;\n\n  const originalDate = toDate(date, options?.in);\n\n  if (!isValid(originalDate)) {\n    throw new RangeError(\"Invalid time value\");\n  }\n\n  let parts = formatStr\n    .match(longFormattingTokensRegExp)\n    .map((substring) => {\n      const firstCharacter = substring[0];\n      if (firstCharacter === \"p\" || firstCharacter === \"P\") {\n        const longFormatter = longFormatters[firstCharacter];\n        return longFormatter(substring, locale.formatLong);\n      }\n      return substring;\n    })\n    .join(\"\")\n    .match(formattingTokensRegExp)\n    .map((substring) => {\n      // Replace two single quote characters with one single quote character\n      if (substring === \"''\") {\n        return { isToken: false, value: \"'\" };\n      }\n\n      const firstCharacter = substring[0];\n      if (firstCharacter === \"'\") {\n        return { isToken: false, value: cleanEscapedString(substring) };\n      }\n\n      if (formatters[firstCharacter]) {\n        return { isToken: true, value: substring };\n      }\n\n      if (firstCharacter.match(unescapedLatinCharacterRegExp)) {\n        throw new RangeError(\n          \"Format string contains an unescaped latin alphabet character `\" +\n            firstCharacter +\n            \"`\",\n        );\n      }\n\n      return { isToken: false, value: substring };\n    });\n\n  // invoke localize preprocessor (only for french locales at the moment)\n  if (locale.localize.preprocessor) {\n    parts = locale.localize.preprocessor(originalDate, parts);\n  }\n\n  const formatterOptions = {\n    firstWeekContainsDate,\n    weekStartsOn,\n    locale,\n  };\n\n  return parts\n    .map((part) => {\n      if (!part.isToken) return part.value;\n\n      const token = part.value;\n\n      if (\n        (!options?.useAdditionalWeekYearTokens &&\n          isProtectedWeekYearToken(token)) ||\n        (!options?.useAdditionalDayOfYearTokens &&\n          isProtectedDayOfYearToken(token))\n      ) {\n        warnOrThrowProtectedError(token, formatStr, String(date));\n      }\n\n      const formatter = formatters[token[0]];\n      return formatter(originalDate, token, locale.localize, formatterOptions);\n    })\n    .join(\"\");\n}\n\nfunction cleanEscapedString(input) {\n  const matched = input.match(escapedStringRegExp);\n\n  if (!matched) {\n    return input;\n  }\n\n  return matched[1].replace(doubleQuoteRegExp, \"'\");\n}\n\n// Fallback for modularized imports:\nexport default format;\n","import { useState } from 'react';\r\nimport { Card, CardContent, CardDescription, CardFooter, CardHeader, CardTitle } from '@/components/ui/card';\r\nimport { Badge } from '@/components/ui/badge';\r\nimport { Button } from '@/components/ui/button';\r\nimport {\r\n  Calendar,\r\n  CreditCard,\r\n  AlertTriangle,\r\n  CheckCircle2,\r\n  Clock,\r\n  Crown,\r\n  Zap\r\n} from 'lucide-react';\r\nimport { SubscriptionStatus, UsageStats } from '@/types/billing';\r\nimport { billingService } from '@/services/billingService';\r\nimport { useAuth } from '@/contexts/AuthContext';\r\nimport { toast } from 'sonner';\r\nimport { format } from 'date-fns';\r\nimport { ProgressBar } from '@/components/shared/ProgressBar';\r\n\r\ninterface SubscriptionCardProps {\r\n  subscription: SubscriptionStatus | null;\r\n  usage: UsageStats;\r\n  onManageSubscription: () => void;\r\n  onUpgrade: () => void;\r\n}\r\n\r\nexport function SubscriptionCard({ \r\n  subscription, \r\n  usage, \r\n  onManageSubscription, \r\n  onUpgrade \r\n}: SubscriptionCardProps) {\r\n  const { user } = useAuth();\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  const getStatusColor = (status: string) => {\r\n    switch (status) {\r\n      case 'active':\r\n        return 'bg-success/10 text-success border-success/20';\r\n      case 'trialing':\r\n        return 'bg-info/10 text-info border-info/20';\r\n      case 'past_due':\r\n      case 'unpaid':\r\n        return 'bg-destructive/10 text-destructive border-destructive/20';\r\n      case 'canceled':\r\n        return 'bg-muted/10 text-muted-foreground border-muted/20';\r\n      default:\r\n        return 'bg-warning/10 text-warning border-warning/20';\r\n    }\r\n  };\r\n\r\n  const getStatusIcon = (status: string) => {\r\n    switch (status) {\r\n      case 'active':\r\n        return <CheckCircle2 className=\"h-4 w-4\" />;\r\n      case 'trialing':\r\n        return <Clock className=\"h-4 w-4\" />;\r\n      case 'past_due':\r\n      case 'unpaid':\r\n        return <AlertTriangle className=\"h-4 w-4\" />;\r\n      default:\r\n        return <AlertTriangle className=\"h-4 w-4\" />;\r\n    }\r\n  };\r\n\r\n  const formatCurrency = (amount: number, currency: string) => {\r\n    return new Intl.NumberFormat('en-US', {\r\n      style: 'currency',\r\n      currency: currency.toUpperCase(),\r\n    }).format(amount / 100);\r\n  };\r\n\r\n  const handleCancelSubscription = async () => {\r\n    if (!confirm('Are you sure you want to cancel your subscription? You will still have access until the end of your billing period.')) {\r\n      return;\r\n    }\r\n\r\n    setIsLoading(true);\r\n    try {\r\n      await billingService.cancelSubscription();\r\n      toast.success('Subscription cancelled successfully. You will have access until the end of your billing period.');\r\n      window.location.reload(); // Refresh to show updated status\r\n    } catch {\r\n      toast.error('Failed to cancel subscription. Please try again.');\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  // Show admin status for enterprise users\r\n  if (user?.plan === 'enterprise' && !subscription) {\r\n    return (\r\n      <Card className=\"border-warning/20\">\r\n        <CardHeader>\r\n          <div className=\"flex items-center gap-2\">\r\n            <Crown className=\"h-5 w-5 text-warning\" />\r\n            <CardTitle>Admin Account</CardTitle>\r\n          </div>\r\n          <CardDescription>\r\n            You have administrative privileges with unlimited access to all features.\r\n          </CardDescription>\r\n        </CardHeader>\r\n        <CardContent>\r\n          <div className=\"space-y-4\">\r\n            <div className=\"flex items-center justify-between\">\r\n              <span className=\"text-sm text-muted-foreground\">Status</span>\r\n              <Badge className=\"bg-warning/10 text-warning border-warning/20\">\r\n                <Crown className=\"h-3 w-3 mr-1\" />\r\n                Admin\r\n              </Badge>\r\n            </div>\r\n            <div className=\"flex items-center justify-between\">\r\n              <span className=\"text-sm text-muted-foreground\">Parses this month</span>\r\n              <span className=\"font-medium\">{usage.currentMonth.parses.toLocaleString()}</span>\r\n            </div>\r\n            <div className=\"flex items-center justify-between\">\r\n              <span className=\"text-sm text-muted-foreground\">Monthly limit</span>\r\n              <span className=\"font-medium\">Unlimited</span>\r\n            </div>\r\n          </div>\r\n        </CardContent>\r\n      </Card>\r\n    );\r\n  }\r\n\r\n  // Show free tier status\r\n  if (!subscription) {\r\n    return (\r\n      <Card>\r\n        <CardHeader>\r\n          <CardTitle>Free Tier</CardTitle>\r\n          <CardDescription>\r\n            You're currently on the free tier with limited features.\r\n          </CardDescription>\r\n        </CardHeader>\r\n        <CardContent className=\"space-y-4\">\r\n          <ProgressBar\r\n            value={usage.currentMonth.parses}\r\n            max={usage.currentMonth.limit}\r\n            showLabel\r\n            label={`Usage this month: ${usage.currentMonth.parses} / ${usage.currentMonth.limit}`}\r\n            dangerZone={90}\r\n            size=\"sm\"\r\n          />\r\n          \r\n          <div className=\"pt-2 space-y-2\">\r\n            <p className=\"text-sm font-medium\">Free tier includes:</p>\r\n            <ul className=\"text-sm text-muted-foreground space-y-1\">\r\n              <li>• 100 file parses per month</li>\r\n              <li>• Basic CSV processing</li>\r\n              <li>• Email support</li>\r\n            </ul>\r\n          </div>\r\n        </CardContent>\r\n        <CardFooter>\r\n          <Button onClick={onUpgrade} className=\"w-full\">\r\n            <Zap className=\"h-4 w-4 mr-2\" />\r\n            Upgrade to Pro\r\n          </Button>\r\n        </CardFooter>\r\n      </Card>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Card>\r\n      <CardHeader>\r\n        <div className=\"flex items-center justify-between\">\r\n          <div>\r\n            <CardTitle className=\"flex items-center gap-2\">\r\n              <CreditCard className=\"h-5 w-5\" />\r\n              {subscription.plan.name} Plan\r\n            </CardTitle>\r\n            <CardDescription>\r\n              {formatCurrency(subscription.plan.amount, subscription.plan.currency)} / {subscription.plan.interval}\r\n            </CardDescription>\r\n          </div>\r\n          <Badge className={getStatusColor(subscription.status)}>\r\n            {getStatusIcon(subscription.status)}\r\n            {subscription.status.charAt(0).toUpperCase() + subscription.status.slice(1)}\r\n          </Badge>\r\n        </div>\r\n      </CardHeader>\r\n      \r\n      <CardContent className=\"space-y-4\">\r\n        {/* Usage Statistics */}\r\n        {subscription.plan.name !== 'Enterprise' ? (\r\n          <ProgressBar\r\n            value={usage.currentMonth.parses}\r\n            max={usage.currentMonth.limit}\r\n            showLabel\r\n            label={`Usage this month: ${usage.currentMonth.parses.toLocaleString()} / ${usage.currentMonth.limit.toLocaleString()}`}\r\n            dangerZone={90}\r\n            size=\"sm\"\r\n          />\r\n        ) : (\r\n          <div className=\"flex items-center justify-between text-sm\">\r\n            <span className=\"text-muted-foreground\">Usage this month</span>\r\n            <span className=\"font-medium\">{usage.currentMonth.parses.toLocaleString()} / ∞</span>\r\n          </div>\r\n        )}\r\n\r\n        {/* Billing Period */}\r\n        <div className=\"flex items-center justify-between text-sm\">\r\n          <span className=\"text-muted-foreground\">Current period</span>\r\n          <span className=\"flex items-center gap-1\">\r\n            <Calendar className=\"h-3 w-3\" />\r\n            {format(new Date(subscription.currentPeriodStart), 'MMM dd')} - {format(new Date(subscription.currentPeriodEnd), 'MMM dd')}\r\n          </span>\r\n        </div>\r\n\r\n        {/* Trial Information */}\r\n        {subscription.status === 'trialing' && subscription.trialEnd && (\r\n          <div className=\"flex items-center justify-between text-sm\">\r\n            <span className=\"text-muted-foreground\">Trial ends</span>\r\n            <span className=\"flex items-center gap-1\">\r\n              <Clock className=\"h-3 w-3\" />\r\n              {format(new Date(subscription.trialEnd), 'MMM dd, yyyy')}\r\n            </span>\r\n          </div>\r\n        )}\r\n\r\n        {/* Cancellation Notice */}\r\n        {subscription.cancelAtPeriodEnd && (\r\n          <div className=\"flex items-center gap-2 p-3 rounded-lg bg-warning/10 border border-warning/20\">\r\n            <AlertTriangle className=\"h-4 w-4 text-warning\" />\r\n            <div className=\"text-sm\">\r\n              <p className=\"text-warning font-medium\">Subscription will end</p>\r\n              <p className=\"text-muted-foreground\">\r\n                Your subscription will end on {format(new Date(subscription.currentPeriodEnd), 'MMMM dd, yyyy')}\r\n              </p>\r\n            </div>\r\n          </div>\r\n        )}\r\n\r\n        {/* Plan Features */}\r\n        <div className=\"pt-2\">\r\n          <p className=\"text-sm font-medium mb-2\">Plan includes:</p>\r\n          <ul className=\"text-sm text-muted-foreground space-y-1\">\r\n            {subscription.plan.features.map((feature, index) => (\r\n              <li key={index}>• {feature}</li>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n      </CardContent>\r\n\r\n      <CardFooter className=\"flex gap-2\">\r\n        <Button \r\n          variant=\"outline\" \r\n          onClick={onManageSubscription}\r\n          disabled={isLoading}\r\n        >\r\n          Manage Billing\r\n        </Button>\r\n        \r\n        {!subscription.cancelAtPeriodEnd && (\r\n          <Button \r\n            variant=\"destructive\" \r\n            size=\"sm\"\r\n            onClick={handleCancelSubscription}\r\n            disabled={isLoading}\r\n          >\r\n            Cancel Subscription\r\n          </Button>\r\n        )}\r\n        \r\n        {subscription.cancelAtPeriodEnd && (\r\n          <Button \r\n            variant=\"default\" \r\n            onClick={onUpgrade}\r\n            disabled={isLoading}\r\n          >\r\n            Reactivate\r\n          </Button>\r\n        )}\r\n      </CardFooter>\r\n    </Card>\r\n  );\r\n}","import { useState, useEffect } from 'react';\r\nimport { logger } from '@/utils/logger';\nimport { Link } from 'react-router-dom';\r\nimport { Dialog, DialogContent, DialogDescription, DialogHeader, DialogTitle } from '@/components/ui/dialog';\r\nimport { Button } from '@/components/ui/button';\r\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';\r\nimport { Badge } from '@/components/ui/badge';\r\nimport { Separator } from '@/components/ui/separator';\r\nimport { \r\n  Check, \r\n  CreditCard, \r\n  Loader2, \r\n  Star, \r\n  Zap,\r\n  Shield,\r\n  Clock,\r\n  Users\r\n} from 'lucide-react';\r\nimport { PricingPlan } from '@/types/billing';\r\nimport { billingService } from '@/services/billingService';\r\nimport { toast } from 'sonner';\r\nimport { useAuth } from '@/contexts/AuthContext';\r\n\r\ninterface PaymentModalProps {\r\n  isOpen: boolean;\r\n  onClose: () => void;\r\n  onSuccess?: () => void;\r\n}\r\n\r\nexport function PaymentModal({ isOpen, onClose, onSuccess }: PaymentModalProps) {\r\n  const { user } = useAuth();\r\n  const [plans, setPlans] = useState<PricingPlan[]>([]);\r\n  const [selectedPlan, setSelectedPlan] = useState<PricingPlan | null>(null);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [loadingPlans, setLoadingPlans] = useState(true);\r\n\r\n  useEffect(() => {\r\n    if (isOpen) {\r\n      loadPlans();\r\n    }\r\n  }, [isOpen]);\r\n\r\n  const loadPlans = async () => {\r\n    try {\r\n      setLoadingPlans(true);\r\n      const fetchedPlans = await billingService.getPricingPlans();\r\n      setPlans(fetchedPlans);\r\n      \r\n      // Pre-select the popular plan\r\n      const popularPlan = fetchedPlans.find(plan => plan.popular);\r\n      if (popularPlan) {\r\n        setSelectedPlan(popularPlan);\r\n      } else if (fetchedPlans.length > 0) {\r\n        setSelectedPlan(fetchedPlans[0]);\r\n      }\r\n    } catch (error) {\r\n      toast.error('Failed to load pricing plans');\r\n      logger.error('Error loading plans:', error);\r\n    } finally {\r\n      setLoadingPlans(false);\r\n    }\r\n  };\r\n\r\n  const handleSubscribe = async () => {\r\n    if (!selectedPlan) return;\r\n    \r\n    setIsLoading(true);\r\n    try {\r\n      const { url } = await billingService.createCheckoutSession({\r\n        priceId: selectedPlan.priceId,\r\n      });\r\n      \r\n      // Redirect to Stripe Checkout\r\n      window.location.href = url;\r\n    } catch (error) {\r\n      toast.error('Failed to create checkout session');\r\n      logger.error('Error creating checkout session:', error);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const formatCurrency = (amount: number, currency: string) => {\r\n    return new Intl.NumberFormat('en-US', {\r\n      style: 'currency',\r\n      currency: currency.toUpperCase(),\r\n    }).format(amount / 100);\r\n  };\r\n\r\n  const getPlanIcon = (planName: string) => {\r\n    switch (planName.toLowerCase()) {\r\n      case 'professional':\r\n      case 'pro':\r\n        return <Zap className=\"h-5 w-5\" />;\r\n      case 'enterprise':\r\n        return <Shield className=\"h-5 w-5\" />;\r\n      case 'team':\r\n        return <Users className=\"h-5 w-5\" />;\r\n      default:\r\n        return <CreditCard className=\"h-5 w-5\" />;\r\n    }\r\n  };\r\n\r\n  // Don't show modal for enterprise users (admins)\r\n  if (user?.plan === 'enterprise') {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <Dialog open={isOpen} onOpenChange={onClose}>\r\n      <DialogContent className=\"sm:max-w-4xl max-h-[90vh] overflow-y-auto\">\r\n        <DialogHeader>\r\n          <DialogTitle className=\"flex items-center gap-2\">\r\n            <Star className=\"h-5 w-5 text-status-warning\" />\r\n            Choose Your Plan\r\n          </DialogTitle>\r\n          <DialogDescription>\r\n            Upgrade your account to unlock unlimited parses and premium features.\r\n          </DialogDescription>\r\n        </DialogHeader>\r\n\r\n        {loadingPlans ? (\r\n          <div className=\"flex items-center justify-center py-8\">\r\n            <Loader2 className=\"h-8 w-8 animate-spin\" />\r\n            <span className=\"ml-2\">Loading plans...</span>\r\n          </div>\r\n        ) : (\r\n          <div className=\"space-y-6\">\r\n            {/* Plan Selection */}\r\n            <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\r\n              {plans.map((plan) => (\r\n                <Card\r\n                  key={plan.id}\r\n                  className={`cursor-pointer transition-all ${\r\n                    selectedPlan?.id === plan.id\r\n                      ? 'border-primary ring-2 ring-primary/20'\r\n                      : 'hover:border-primary/50'\r\n                  } ${plan.popular ? 'border-status-warning ring-2 ring-status-warning/20' : ''}`}\r\n                  onClick={() => setSelectedPlan(plan)}\r\n                >\r\n                  <CardHeader className=\"text-center\">\r\n                    {plan.popular && (\r\n                      <Badge className=\"self-center mb-2 bg-status-warning-bg border-status-warning-border text-status-warning\">\r\n                        <Star className=\"h-3 w-3 mr-1\" />\r\n                        Most Popular\r\n                      </Badge>\r\n                    )}\r\n                    <div className=\"flex items-center justify-center mb-2\">\r\n                      {getPlanIcon(plan.name)}\r\n                    </div>\r\n                    <CardTitle className=\"text-xl\">{plan.name}</CardTitle>\r\n                    <CardDescription>{plan.description}</CardDescription>\r\n                    <div className=\"mt-4\">\r\n                      <div className=\"text-3xl font-bold\">\r\n                        {formatCurrency(plan.amount, plan.currency)}\r\n                      </div>\r\n                      <div className=\"text-sm text-muted-foreground\">\r\n                        per {plan.interval}\r\n                      </div>\r\n                    </div>\r\n                  </CardHeader>\r\n                  <CardContent>\r\n                    <ul className=\"space-y-2\">\r\n                      {plan.features.map((feature, index) => (\r\n                        <li key={index} className=\"flex items-start gap-2 text-sm\">\r\n                          <Check className=\"h-4 w-4 text-status-success mt-0.5 flex-shrink-0\" />\r\n                          <span>{feature}</span>\r\n                        </li>\r\n                      ))}\r\n                    </ul>\r\n                  </CardContent>\r\n                </Card>\r\n              ))}\r\n            </div>\r\n\r\n            {/* Selected Plan Summary */}\r\n            {selectedPlan && (\r\n              <>\r\n                <Separator />\r\n                <div className=\"bg-muted/50 rounded-lg p-4\">\r\n                  <h3 className=\"font-semibold mb-2\">Order Summary</h3>\r\n                  <div className=\"flex justify-between items-center\">\r\n                    <div>\r\n                      <p className=\"font-medium\">{selectedPlan.name} Plan</p>\r\n                      <p className=\"text-sm text-muted-foreground\">\r\n                        Billed {selectedPlan.interval}ly\r\n                      </p>\r\n                    </div>\r\n                    <div className=\"text-right\">\r\n                      <p className=\"font-bold text-xl\">\r\n                        {formatCurrency(selectedPlan.amount, selectedPlan.currency)}\r\n                      </p>\r\n                      <p className=\"text-sm text-muted-foreground\">\r\n                        per {selectedPlan.interval}\r\n                      </p>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                {/* Payment Info */}\r\n                <div className=\"bg-status-info-bg border border-status-info-border rounded-lg p-4\">\r\n                  <div className=\"flex items-start gap-2\">\r\n                    <Shield className=\"h-5 w-5 text-status-info mt-0.5\" />\r\n                    <div className=\"text-sm\">\r\n                      <p className=\"font-medium text-status-info\">Secure Payment</p>\r\n                      <p className=\"text-status-info\">\r\n                        Your payment is secured by Stripe. You can cancel anytime.\r\n                      </p>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                {/* Immediate Access Info */}\r\n                <div className=\"bg-status-success-bg border border-status-success-border rounded-lg p-4\">\r\n                  <div className=\"flex items-start gap-2\">\r\n                    <Check className=\"h-5 w-5 text-status-success mt-0.5\" />\r\n                    <div className=\"text-sm\">\r\n                      <p className=\"font-medium text-status-success\">Immediate Access</p>\r\n                      <p className=\"text-status-success\">\r\n                        Get instant access to all premium features. Cancel anytime.\r\n                      </p>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                {/* Action Buttons */}\r\n                <div className=\"flex gap-3 pt-4\">\r\n                  <Button variant=\"outline\" onClick={onClose} disabled={isLoading}>\r\n                    Cancel\r\n                  </Button>\r\n                  <Button \r\n                    onClick={handleSubscribe} \r\n                    disabled={isLoading}\r\n                    className=\"flex-1\"\r\n                  >\r\n                    {isLoading ? (\r\n                      <>\r\n                        <Loader2 className=\"h-4 w-4 animate-spin mr-2\" />\r\n                        Processing...\r\n                      </>\r\n                    ) : (\r\n                      <>\r\n                        <CreditCard className=\"h-4 w-4 mr-2\" />\r\n                        Subscribe Now\r\n                      </>\r\n                    )}\r\n                  </Button>\r\n                </div>\r\n\r\n                <p className=\"text-caption text-muted-foreground text-center\">\r\n                  By subscribing, you agree to our{' '}\r\n                  <Link to=\"/legal/terms-of-service\" className=\"underline hover:text-primary\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n                    Terms of Service\r\n                  </Link>\r\n                  {' '}and{' '}\r\n                  <Link to=\"/legal/privacy-policy\" className=\"underline hover:text-primary\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n                    Privacy Policy\r\n                  </Link>.\r\n                  You will be charged immediately upon subscription.\r\n                </p>\r\n              </>\r\n            )}\r\n          </div>\r\n        )}\r\n      </DialogContent>\r\n    </Dialog>\r\n  );\r\n}","import { useState, useEffect } from 'react';\r\nimport { logger } from '@/utils/logger';\nimport { useSearchParams } from 'react-router-dom';\r\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';\r\nimport { Button } from '@/components/ui/button';\r\nimport { Badge } from '@/components/ui/badge';\r\nimport { \r\n  CreditCard,\r\n  Download,\r\n  Calendar,\r\n  TrendingUp,\r\n  Activity,\r\n  AlertCircle,\r\n  CheckCircle2,\r\n  Loader2,\r\n  Receipt,\r\n  BarChart3,\r\n  DollarSign,\r\n  Zap\r\n} from 'lucide-react';\r\nimport { SubscriptionCard } from '@/components/billing/SubscriptionCard';\r\nimport { PaymentModal } from '@/components/billing/PaymentModal';\r\nimport { SubscriptionStatus, UsageStats, BillingHistory } from '@/types/billing';\r\nimport { billingService } from '@/services/billingService';\r\nimport { useAuth } from '@/contexts/AuthContext';\r\nimport { toast } from 'sonner';\r\nimport { format } from 'date-fns';\r\n\r\nexport default function Billing() {\r\n  const { user } = useAuth();\r\n  const [searchParams, setSearchParams] = useSearchParams();\r\n  const [subscription, setSubscription] = useState<SubscriptionStatus | null>(null);\r\n  const [usage, setUsage] = useState<UsageStats | null>(null);\r\n  const [billingHistory, setBillingHistory] = useState<BillingHistory[]>([]);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [showPaymentModal, setShowPaymentModal] = useState(false);\r\n\r\n  useEffect(() => {\r\n    loadBillingData();\r\n    \r\n    // Check for success/cancel params from Stripe redirect\r\n    const success = searchParams.get('success');\r\n    const canceled = searchParams.get('canceled');\r\n    \r\n    if (success === 'true') {\r\n      toast.success('Subscription created successfully!');\r\n      setSearchParams({}, { replace: true }); // Clear params\r\n    } else if (canceled === 'true') {\r\n      toast.error('Payment was cancelled.');\r\n      setSearchParams({}, { replace: true }); // Clear params\r\n    }\r\n  }, [searchParams, setSearchParams]);\r\n\r\n  const loadBillingData = async () => {\r\n    try {\r\n      setIsLoading(true);\r\n      \r\n      const [subscriptionData, usageData, historyData] = await Promise.allSettled([\r\n        billingService.getSubscriptionStatus(),\r\n        billingService.getUsageStats(),\r\n        billingService.getBillingHistory(10)\r\n      ]);\r\n\r\n      if (subscriptionData.status === 'fulfilled') {\r\n        setSubscription(subscriptionData.value);\r\n      }\r\n      \r\n      if (usageData.status === 'fulfilled') {\r\n        setUsage(usageData.value);\r\n      }\r\n      \r\n      if (historyData.status === 'fulfilled') {\r\n        setBillingHistory(historyData.value);\r\n      }\r\n    } catch (error) {\r\n      logger.error('Error loading billing data:', error);\r\n      toast.error('Failed to load billing information');\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleManageSubscription = async () => {\r\n    try {\r\n      const { url } = await billingService.createCustomerPortalSession();\r\n      window.location.href = url;\r\n    } catch {\r\n      toast.error('Failed to open billing portal');\r\n    }\r\n  };\r\n\r\n  const handleDownloadInvoice = async (invoiceId: string) => {\r\n    try {\r\n      const blob = await billingService.downloadInvoice(invoiceId);\r\n      const url = window.URL.createObjectURL(blob);\r\n      const a = document.createElement('a');\r\n      a.style.display = 'none';\r\n      a.href = url;\r\n      a.download = `invoice-${invoiceId}.pdf`;\r\n      document.body.appendChild(a);\r\n      a.click();\r\n      window.URL.revokeObjectURL(url);\r\n      document.body.removeChild(a);\r\n    } catch {\r\n      toast.error('Failed to download invoice');\r\n    }\r\n  };\r\n\r\n  const formatCurrency = (amount: number, currency: string) => {\r\n    return new Intl.NumberFormat('en-US', {\r\n      style: 'currency',\r\n      currency: currency.toUpperCase(),\r\n    }).format(amount / 100);\r\n  };\r\n\r\n  const getPaymentStatusColor = (status: string) => {\r\n    switch (status) {\r\n      case 'paid':\r\n        return 'bg-success/10 text-success border-success/20';\r\n      case 'pending':\r\n        return 'bg-warning/10 text-warning border-warning/20';\r\n      case 'failed':\r\n        return 'bg-destructive/10 text-destructive border-destructive/20';\r\n      default:\r\n        return 'bg-muted/10 text-muted-foreground border-muted/20';\r\n    }\r\n  };\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <div className=\"space-y-6\">\r\n        {/* Header skeleton */}\r\n        <div className=\"space-y-2\">\r\n          <div className=\"h-8 bg-muted rounded w-64 animate-pulse\"></div>\r\n          <div className=\"h-4 bg-muted rounded w-96 animate-pulse\"></div>\r\n        </div>\r\n\r\n        {/* Content skeleton */}\r\n        <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-6\">\r\n          <div className=\"lg:col-span-2 space-y-6\">\r\n            {/* Subscription card skeleton */}\r\n            <Card className=\"animate-pulse\">\r\n              <CardHeader>\r\n                <div className=\"h-6 bg-muted rounded w-40\"></div>\r\n                <div className=\"h-4 bg-muted rounded w-full mt-2\"></div>\r\n              </CardHeader>\r\n              <CardContent className=\"space-y-4\">\r\n                <div className=\"h-20 bg-muted rounded\"></div>\r\n                <div className=\"h-16 bg-muted rounded\"></div>\r\n              </CardContent>\r\n            </Card>\r\n\r\n            {/* Usage stats skeleton */}\r\n            <Card className=\"animate-pulse\">\r\n              <CardHeader>\r\n                <div className=\"h-6 bg-muted rounded w-48\"></div>\r\n              </CardHeader>\r\n              <CardContent>\r\n                <div className=\"h-32 bg-muted rounded\"></div>\r\n              </CardContent>\r\n            </Card>\r\n          </div>\r\n\r\n          {/* Billing history skeleton */}\r\n          <div className=\"space-y-4\">\r\n            <Card className=\"animate-pulse\">\r\n              <CardHeader>\r\n                <div className=\"h-6 bg-muted rounded w-40\"></div>\r\n              </CardHeader>\r\n              <CardContent className=\"space-y-3\">\r\n                {[...Array(5)].map((_, i) => (\r\n                  <div key={i} className=\"h-16 bg-muted rounded\"></div>\r\n                ))}\r\n              </CardContent>\r\n            </Card>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"space-y-6\">\r\n      {/* Header */}\r\n      <div className=\"flex items-center justify-between\">\r\n        <div>\r\n          <h1 className=\"text-2xl font-bold flex items-center gap-2\">\r\n            <CreditCard className=\"h-6 w-6\" />\r\n            Billing & Subscription\r\n          </h1>\r\n          <p className=\"text-muted-foreground\">\r\n            Manage your subscription, view usage statistics, and billing history.\r\n          </p>\r\n        </div>\r\n        \r\n        {(!subscription || subscription.status !== 'active') && user?.plan !== 'enterprise' && (\r\n          <Button onClick={() => setShowPaymentModal(true)}>\r\n            <Zap className=\"h-4 w-4 mr-2\" />\r\n            Upgrade Plan\r\n          </Button>\r\n        )}\r\n      </div>\r\n\r\n      <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-6\">\r\n        {/* Left Column - Subscription & Usage */}\r\n        <div className=\"lg:col-span-2 space-y-6\">\r\n          {/* Subscription Card */}\r\n          {usage && (\r\n            <SubscriptionCard\r\n              subscription={subscription}\r\n              usage={usage}\r\n              onManageSubscription={handleManageSubscription}\r\n              onUpgrade={() => setShowPaymentModal(true)}\r\n            />\r\n          )}\r\n\r\n          {/* Usage Statistics */}\r\n          {usage && (\r\n            <Card>\r\n              <CardHeader>\r\n                <CardTitle className=\"flex items-center gap-2\">\r\n                  <BarChart3 className=\"h-5 w-5\" />\r\n                  Usage Statistics\r\n                </CardTitle>\r\n                <CardDescription>\r\n                  Detailed breakdown of your account usage.\r\n                </CardDescription>\r\n              </CardHeader>\r\n              <CardContent className=\"space-y-4\">\r\n                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n                  <div className=\"space-y-2\">\r\n                    <div className=\"flex items-center justify-between\">\r\n                      <span className=\"text-sm text-muted-foreground\">This month</span>\r\n                      <span className=\"font-medium\">{usage.currentMonth.parses.toLocaleString()}</span>\r\n                    </div>\r\n                    <div className=\"flex items-center justify-between\">\r\n                      <span className=\"text-sm text-muted-foreground\">Last month</span>\r\n                      <span className=\"font-medium\">{usage.previousMonth.parses.toLocaleString()}</span>\r\n                    </div>\r\n                    <div className=\"flex items-center justify-between\">\r\n                      <span className=\"text-sm text-muted-foreground\">All time</span>\r\n                      <span className=\"font-medium\">{usage.allTimeParses.toLocaleString()}</span>\r\n                    </div>\r\n                  </div>\r\n                  \r\n                  <div className=\"space-y-2\">\r\n                    <div className=\"flex items-center justify-between\">\r\n                      <span className=\"text-sm text-muted-foreground\">Average parse size</span>\r\n                      <span className=\"font-medium\">{(usage.averageParseSize / 1024).toFixed(1)}KB</span>\r\n                    </div>\r\n                    <div className=\"flex items-center justify-between\">\r\n                      <span className=\"text-sm text-muted-foreground\">Peak usage day</span>\r\n                      <span className=\"font-medium\">{usage.peakUsageDay.parses}</span>\r\n                    </div>\r\n                    <div className=\"flex items-center justify-between\">\r\n                      <span className=\"text-sm text-muted-foreground\">Peak date</span>\r\n                      <span className=\"font-medium\">\r\n                        {format(new Date(usage.peakUsageDay.date), 'MMM dd')}\r\n                      </span>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </CardContent>\r\n            </Card>\r\n          )}\r\n\r\n          {/* Billing History */}\r\n          <Card>\r\n            <CardHeader>\r\n              <CardTitle className=\"flex items-center gap-2\">\r\n                <Receipt className=\"h-5 w-5\" />\r\n                Billing History\r\n              </CardTitle>\r\n              <CardDescription>\r\n                Your recent invoices and payments.\r\n              </CardDescription>\r\n            </CardHeader>\r\n            <CardContent>\r\n              {billingHistory.length === 0 ? (\r\n                <div className=\"text-center py-8\">\r\n                  <Receipt className=\"h-12 w-12 text-muted-foreground mx-auto mb-4\" />\r\n                  <p className=\"text-muted-foreground\">No billing history available.</p>\r\n                </div>\r\n              ) : (\r\n                <div className=\"space-y-4\">\r\n                  {billingHistory.map((item) => (\r\n                    <div key={item.id} className=\"flex items-center justify-between p-4 border rounded-lg\">\r\n                      <div className=\"flex items-center gap-3\">\r\n                        <div className=\"flex items-center gap-2\">\r\n                          <DollarSign className=\"h-4 w-4\" />\r\n                          <div>\r\n                            <p className=\"font-medium\">{item.description}</p>\r\n                            <p className=\"text-sm text-muted-foreground\">\r\n                              {format(new Date(item.createdAt), 'MMM dd, yyyy')}\r\n                            </p>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                      \r\n                      <div className=\"flex items-center gap-3\">\r\n                        <div className=\"text-right\">\r\n                          <p className=\"font-medium\">\r\n                            {formatCurrency(item.amount, item.currency)}\r\n                          </p>\r\n                          <Badge className={getPaymentStatusColor(item.status)}>\r\n                            {item.status === 'paid' && <CheckCircle2 className=\"h-3 w-3 mr-1\" />}\r\n                            {item.status === 'pending' && <Activity className=\"h-3 w-3 mr-1\" />}\r\n                            {item.status === 'failed' && <AlertCircle className=\"h-3 w-3 mr-1\" />}\r\n                            {item.status.charAt(0).toUpperCase() + item.status.slice(1)}\r\n                          </Badge>\r\n                        </div>\r\n                        \r\n                        {item.invoiceUrl && (\r\n                          <Button\r\n                            variant=\"ghost\"\r\n                            size=\"sm\"\r\n                            onClick={() => handleDownloadInvoice(item.id)}\r\n                          >\r\n                            <Download className=\"h-4 w-4\" />\r\n                          </Button>\r\n                        )}\r\n                      </div>\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n              )}\r\n            </CardContent>\r\n          </Card>\r\n        </div>\r\n\r\n        {/* Right Column - Quick Stats */}\r\n        <div className=\"space-y-6\">\r\n          {/* Quick Stats */}\r\n          {usage && (\r\n            <div className=\"space-y-4\">\r\n              <Card>\r\n                <CardContent className=\"p-6\">\r\n                  <div className=\"flex items-center gap-2\">\r\n                    <TrendingUp className=\"h-5 w-5 text-success\" />\r\n                    <div>\r\n                      <p className=\"text-2xl font-bold\">{usage.currentMonth.parses.toLocaleString()}</p>\r\n                      <p className=\"text-sm text-muted-foreground\">Parses this month</p>\r\n                    </div>\r\n                  </div>\r\n                </CardContent>\r\n              </Card>\r\n\r\n              <Card>\r\n                <CardContent className=\"p-6\">\r\n                  <div className=\"flex items-center gap-2\">\r\n                    <Activity className=\"h-5 w-5 text-info\" />\r\n                    <div>\r\n                      <p className=\"text-2xl font-bold\">{usage.currentMonth.percentage.toFixed(1)}%</p>\r\n                      <p className=\"text-sm text-muted-foreground\">Of monthly limit used</p>\r\n                    </div>\r\n                  </div>\r\n                </CardContent>\r\n              </Card>\r\n\r\n              <Card>\r\n                <CardContent className=\"p-6\">\r\n                  <div className=\"flex items-center gap-2\">\r\n                    <Calendar className=\"h-5 w-5 text-secondary\" />\r\n                    <div>\r\n                      <p className=\"text-2xl font-bold\">{usage.peakUsageDay.parses}</p>\r\n                      <p className=\"text-sm text-muted-foreground\">Peak daily usage</p>\r\n                    </div>\r\n                  </div>\r\n                </CardContent>\r\n              </Card>\r\n            </div>\r\n          )}\r\n\r\n          {/* Support Card */}\r\n          <Card>\r\n            <CardHeader>\r\n              <CardTitle className=\"text-xl\">Need Help?</CardTitle>\r\n              <CardDescription>\r\n                Contact our support team for billing assistance.\r\n              </CardDescription>\r\n            </CardHeader>\r\n            <CardContent>\r\n              <Button variant=\"outline\" className=\"w-full\" asChild>\r\n                <a href=\"/contact\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n                  Contact Support\r\n                </a>\r\n              </Button>\r\n            </CardContent>\r\n          </Card>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Payment Modal */}\r\n      <PaymentModal\r\n        isOpen={showPaymentModal}\r\n        onClose={() => setShowPaymentModal(false)}\r\n        onSuccess={() => {\r\n          setShowPaymentModal(false);\r\n          loadBillingData();\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n}"],"names":["__iconNode","CircleCheck","createLucideIcon","Receipt","millisecondsInWeek","millisecondsInDay","constructFromSymbol","constructFrom","date","value","toDate","argument","context","defaultOptions","getDefaultOptions","startOfWeek","options","weekStartsOn","_date","day","diff","startOfISOWeek","getISOWeekYear","year","fourthOfJanuaryOfNextYear","startOfNextYear","fourthOfJanuaryOfThisYear","startOfThisYear","getTimezoneOffsetInMilliseconds","utcDate","normalizeDates","dates","normalize","startOfDay","differenceInCalendarDays","laterDate","earlierDate","laterDate_","earlierDate_","laterStartOfDay","earlierStartOfDay","laterTimestamp","earlierTimestamp","startOfISOWeekYear","fourthOfJanuary","isDate","isValid","startOfYear","date_","formatDistanceLocale","formatDistance","token","count","result","tokenValue","buildFormatLongFn","args","width","dateFormats","timeFormats","dateTimeFormats","formatLong","formatRelativeLocale","formatRelative","_baseDate","_options","buildLocalizeFn","valuesArray","defaultWidth","index","eraValues","quarterValues","monthValues","dayValues","dayPeriodValues","formattingDayPeriodValues","ordinalNumber","dirtyNumber","number","rem100","localize","quarter","buildMatchFn","string","matchPattern","matchResult","matchedString","parsePatterns","key","findIndex","pattern","findKey","rest","object","predicate","array","buildMatchPatternFn","parseResult","matchOrdinalNumberPattern","parseOrdinalNumberPattern","matchEraPatterns","parseEraPatterns","matchQuarterPatterns","parseQuarterPatterns","matchMonthPatterns","parseMonthPatterns","matchDayPatterns","parseDayPatterns","matchDayPeriodPatterns","parseDayPeriodPatterns","match","enUS","getDayOfYear","getISOWeek","getWeekYear","firstWeekContainsDate","firstWeekOfNextYear","firstWeekOfThisYear","startOfWeekYear","firstWeek","getWeek","addLeadingZeros","targetLength","sign","output","lightFormatters","signedYear","month","dayPeriodEnumValue","numberOfDigits","milliseconds","fractionalSeconds","dayPeriodEnum","formatters","era","signedWeekYear","weekYear","twoDigitYear","isoWeekYear","week","isoWeek","dayOfYear","dayOfWeek","localDayOfWeek","isoDayOfWeek","hours","_localize","timezoneOffset","formatTimezoneWithOptionalMinutes","formatTimezone","formatTimezoneShort","timestamp","offset","delimiter","absOffset","minutes","dateLongFormatter","timeLongFormatter","dateTimeLongFormatter","datePattern","timePattern","dateTimeFormat","longFormatters","dayOfYearTokenRE","weekYearTokenRE","throwTokens","isProtectedDayOfYearToken","isProtectedWeekYearToken","warnOrThrowProtectedError","format","input","_message","message","subject","formattingTokensRegExp","longFormattingTokensRegExp","escapedStringRegExp","doubleQuoteRegExp","unescapedLatinCharacterRegExp","formatStr","locale","defaultLocale","originalDate","parts","substring","firstCharacter","longFormatter","cleanEscapedString","formatterOptions","part","formatter","matched","SubscriptionCard","subscription","usage","onManageSubscription","onUpgrade","user","useAuth","isLoading","setIsLoading","useState","getStatusColor","status","getStatusIcon","jsx","CheckCircle2","Clock","AlertTriangle","formatCurrency","amount","currency","handleCancelSubscription","billingService","toast","jsxs","Card","CardHeader","Crown","CardTitle","CardDescription","CardContent","Badge","CreditCard","ProgressBar","Calendar","feature","CardFooter","Button","Zap","PaymentModal","isOpen","onClose","onSuccess","plans","setPlans","selectedPlan","setSelectedPlan","loadingPlans","setLoadingPlans","useEffect","loadPlans","fetchedPlans","popularPlan","plan","error","logger","handleSubscribe","url","getPlanIcon","planName","Shield","Users","Dialog","DialogContent","DialogHeader","DialogTitle","Star","DialogDescription","Loader2","Check","Fragment","Separator","Link","Billing","searchParams","setSearchParams","useSearchParams","setSubscription","setUsage","billingHistory","setBillingHistory","showPaymentModal","setShowPaymentModal","loadBillingData","success","canceled","subscriptionData","usageData","historyData","handleManageSubscription","handleDownloadInvoice","invoiceId","blob","a","getPaymentStatusColor","_","i","BarChart3","item","DollarSign","Activity","AlertCircle","Download","TrendingUp"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37]}