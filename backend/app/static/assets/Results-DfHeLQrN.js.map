{"version":3,"file":"Results-DfHeLQrN.js","sources":["../../node_modules/lucide-react/dist/esm/icons/funnel.js","../../src/utils/warningHelpers.ts","../../src/components/QualityMetricsPanel.tsx","../../node_modules/@radix-ui/react-tooltip/dist/index.mjs","../../src/components/ui/tooltip.tsx","../../src/utils/entities.ts","../../src/components/ResultsTable.tsx","../../src/pages/dashboard/Results.tsx"],"sourcesContent":["/**\n * @license lucide-react v0.542.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst __iconNode = [\n  [\n    \"path\",\n    {\n      d: \"M10 20a1 1 0 0 0 .553.895l2 1A1 1 0 0 0 14 21v-7a2 2 0 0 1 .517-1.341L21.74 4.67A1 1 0 0 0 21 3H3a1 1 0 0 0-.742 1.67l7.225 7.989A2 2 0 0 1 10 14z\",\n      key: \"sc7q7i\"\n    }\n  ]\n];\nconst Funnel = createLucideIcon(\"funnel\", __iconNode);\n\nexport { __iconNode, Funnel as default };\n//# sourceMappingURL=funnel.js.map\n","import { ParseResult, ProcessingJob } from '@/types/processing';\r\n\r\nexport type WarningLevel = 'info' | 'warning' | 'error';\r\nexport type ParsingMethod = 'gemini' | 'fallback';\r\n\r\nexport interface ParsingWarning {\r\n  level: WarningLevel;\r\n  message: string;\r\n  reason?: string;\r\n  confidence?: number;\r\n  method: ParsingMethod;\r\n}\r\n\r\nexport interface QualityMetrics {\r\n  totalRows: number;\r\n  geminiSuccessCount: number;\r\n  fallbackCount: number;\r\n  lowConfidenceCount: number;\r\n  successRate: number;\r\n  fallbackUsagePercentage: number;\r\n  avgConfidence: number;\r\n  qualityScore: number;\r\n}\r\n\r\n/**\r\n * Determines the parsing method based on confidence score and other indicators\r\n */\r\nexport function getParsingMethod(result: ParseResult): ParsingMethod {\r\n  // Check if result contains fallback indicators\r\n  if (result.warnings?.some(warning => \r\n    warning.toLowerCase().includes('fallback') ||\r\n    warning.toLowerCase().includes('regex') ||\r\n    warning.toLowerCase().includes('pattern')\r\n  )) {\r\n    return 'fallback';\r\n  }\r\n  \r\n  // Low confidence might indicate fallback was used\r\n  if (result.parsingConfidence < 0.6) {\r\n    return 'fallback';\r\n  }\r\n  \r\n  return 'gemini';\r\n}\r\n\r\n/**\r\n * Generates warning information for a parse result\r\n */\r\nexport function getParsingWarning(result: ParseResult): ParsingWarning | null {\r\n  const method = getParsingMethod(result);\r\n  const confidence = result.parsingConfidence;\r\n  \r\n  if (method === 'fallback') {\r\n    if (confidence < 0.4) {\r\n      return {\r\n        level: 'error',\r\n        method,\r\n        confidence,\r\n        message: 'Low quality fallback parsing',\r\n        reason: 'Gemini API failed, used regex fallback with very low confidence'\r\n      };\r\n    } else if (confidence < 0.7) {\r\n      return {\r\n        level: 'warning',\r\n        method,\r\n        confidence,\r\n        message: 'Fallback parsing used',\r\n        reason: 'Gemini API unavailable, used pattern-based fallback'\r\n      };\r\n    } else {\r\n      return {\r\n        level: 'info',\r\n        method,\r\n        confidence,\r\n        message: 'High-quality fallback parsing',\r\n        reason: 'Fallback parser achieved good results'\r\n      };\r\n    }\r\n  }\r\n  \r\n  // Gemini API but low confidence\r\n  if (method === 'gemini' && confidence < 0.7) {\r\n    return {\r\n      level: 'warning',\r\n      method,\r\n      confidence,\r\n      message: 'Low confidence AI parsing',\r\n      reason: 'Gemini AI had difficulty parsing this text'\r\n    };\r\n  }\r\n  \r\n  return null;\r\n}\r\n\r\n/**\r\n * Gets the appropriate color class for confidence scores\r\n * Uses semantic status colors for consistent theming\r\n */\r\nexport function getConfidenceColor(confidence: number): string {\r\n  if (confidence >= 0.9) return 'text-status-success';\r\n  if (confidence >= 0.7) return 'text-status-warning';\r\n  if (confidence >= 0.5) return 'text-status-warning';\r\n  return 'text-status-error';\r\n}\r\n\r\n/**\r\n * Gets the appropriate background color class for parsing method\r\n * Uses semantic status colors for consistent theming\r\n */\r\nexport function getMethodColor(method: ParsingMethod): string {\r\n  return method === 'gemini'\r\n    ? 'bg-status-info-bg text-status-info border-status-info-border'\r\n    : 'bg-status-warning-bg text-status-warning border-status-warning-border';\r\n}\r\n\r\n/**\r\n * Gets the appropriate color class for warning level\r\n * Uses semantic status colors for consistent theming\r\n */\r\nexport function getWarningColor(level: WarningLevel): string {\r\n  switch (level) {\r\n    case 'info': return 'text-status-info';\r\n    case 'warning': return 'text-status-warning';\r\n    case 'error': return 'text-status-error';\r\n    default: return 'text-muted-foreground';\r\n  }\r\n}\r\n\r\n/**\r\n * Formats fallback reasons into user-friendly messages\r\n */\r\nexport function formatFallbackReason(warning: string): string {\r\n  const lowerWarning = warning.toLowerCase();\r\n  \r\n  if (lowerWarning.includes('api') && lowerWarning.includes('limit')) {\r\n    return 'API rate limit reached - used backup parsing system';\r\n  }\r\n  \r\n  if (lowerWarning.includes('api') && lowerWarning.includes('error')) {\r\n    return 'AI service temporarily unavailable - used pattern-based parsing';\r\n  }\r\n  \r\n  if (lowerWarning.includes('timeout')) {\r\n    return 'AI processing timeout - switched to fast pattern parsing';\r\n  }\r\n  \r\n  if (lowerWarning.includes('fallback') || lowerWarning.includes('regex')) {\r\n    return 'Used pattern-based parsing (backup system)';\r\n  }\r\n  \r\n  if (lowerWarning.includes('low confidence')) {\r\n    return 'AI had difficulty - confidence score below threshold';\r\n  }\r\n  \r\n  return 'Alternative parsing method used';\r\n}\r\n\r\n/**\r\n * Calculates quality metrics for a set of results\r\n */\r\nexport function calculateQualityMetrics(results: ParseResult[]): QualityMetrics {\r\n  if (results.length === 0) {\r\n    return {\r\n      totalRows: 0,\r\n      geminiSuccessCount: 0,\r\n      fallbackCount: 0,\r\n      lowConfidenceCount: 0,\r\n      successRate: 0,\r\n      fallbackUsagePercentage: 0,\r\n      avgConfidence: 0,\r\n      qualityScore: 0\r\n    };\r\n  }\r\n  \r\n  let geminiSuccessCount = 0;\r\n  let fallbackCount = 0;\r\n  let lowConfidenceCount = 0;\r\n  let totalConfidence = 0;\r\n  \r\n  results.forEach(result => {\r\n    const method = getParsingMethod(result);\r\n    const confidence = result.parsingConfidence;\r\n    \r\n    if (method === 'gemini') {\r\n      geminiSuccessCount++;\r\n    } else {\r\n      fallbackCount++;\r\n    }\r\n    \r\n    if (confidence < 0.7) {\r\n      lowConfidenceCount++;\r\n    }\r\n    \r\n    totalConfidence += confidence;\r\n  });\r\n  \r\n  const totalRows = results.length;\r\n  const successRate = (results.length - lowConfidenceCount) / totalRows;\r\n  const fallbackUsagePercentage = fallbackCount / totalRows;\r\n  const avgConfidence = totalConfidence / totalRows;\r\n  \r\n  // Calculate overall quality score (0-100)\r\n  // Factors: API usage (40%), confidence (40%), low warning count (20%)\r\n  const apiScore = (geminiSuccessCount / totalRows) * 0.4;\r\n  const confidenceScore = avgConfidence * 0.4;\r\n  const warningScore = Math.max(0, 1 - (lowConfidenceCount / totalRows)) * 0.2;\r\n  const qualityScore = (apiScore + confidenceScore + warningScore) * 100;\r\n  \r\n  return {\r\n    totalRows,\r\n    geminiSuccessCount,\r\n    fallbackCount,\r\n    lowConfidenceCount,\r\n    successRate,\r\n    fallbackUsagePercentage,\r\n    avgConfidence,\r\n    qualityScore: Math.round(qualityScore)\r\n  };\r\n}\r\n\r\n/**\r\n * Generates quality recommendations based on metrics\r\n */\r\nexport function getQualityRecommendations(metrics: QualityMetrics): string[] {\r\n  const recommendations: string[] = [];\r\n  \r\n  if (metrics.fallbackUsagePercentage > 0.3) {\r\n    recommendations.push('High fallback usage detected. Consider checking your API key and quota limits.');\r\n  }\r\n  \r\n  if (metrics.avgConfidence < 0.7) {\r\n    recommendations.push('Low average confidence. Review and clean your input data for better results.');\r\n  }\r\n  \r\n  if (metrics.lowConfidenceCount > metrics.totalRows * 0.2) {\r\n    recommendations.push('Many low-confidence results. Consider preprocessing your data or using higher quality source text.');\r\n  }\r\n  \r\n  if (metrics.qualityScore < 70) {\r\n    recommendations.push('Overall quality score is low. Review input data quality and API configuration.');\r\n  }\r\n  \r\n  if (recommendations.length === 0) {\r\n    recommendations.push('Great job! Your parsing results show high quality and minimal issues.');\r\n  }\r\n  \r\n  return recommendations;\r\n}\r\n\r\n/**\r\n * Determines if a warning banner should be shown for quality issues\r\n */\r\nexport function shouldShowQualityAlert(metrics: QualityMetrics): { show: boolean; severity: 'warning' | 'error'; message: string } {\r\n  if (metrics.fallbackUsagePercentage > 0.5) {\r\n    return {\r\n      show: true,\r\n      severity: 'error',\r\n      message: `Critical: ${Math.round(metrics.fallbackUsagePercentage * 100)}% of results used fallback parsing. Check your API configuration.`\r\n    };\r\n  }\r\n  \r\n  if (metrics.fallbackUsagePercentage > 0.3 || metrics.qualityScore < 60) {\r\n    return {\r\n      show: true,\r\n      severity: 'warning',\r\n      message: `Quality concern: ${Math.round(metrics.fallbackUsagePercentage * 100)}% fallback usage detected. Review results carefully.`\r\n    };\r\n  }\r\n  \r\n  return { show: false, severity: 'warning', message: '' };\r\n}","import { useState } from 'react';\r\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';\r\nimport { Badge } from '@/components/ui/badge';\r\nimport { Alert, AlertDescription } from '@/components/ui/alert';\r\nimport { Button } from '@/components/ui/button';\r\nimport {\r\n  AlertTriangle,\r\n  Brain,\r\n  Zap,\r\n  BarChart3,\r\n  ChevronDown,\r\n  ChevronUp,\r\n  Info,\r\n  Activity,\r\n  CheckCircle,\r\n  TrendingUp\r\n} from 'lucide-react';\r\nimport { ParseResult, ProcessingJob } from '@/types/processing';\r\nimport {\r\n  calculateQualityMetrics,\r\n  getQualityRecommendations,\r\n  shouldShowQualityAlert,\r\n  QualityMetrics\r\n} from '@/utils/warningHelpers';\r\nimport { MetricCard } from '@/components/shared/MetricCard';\r\nimport { ProgressBar } from '@/components/shared/ProgressBar';\r\nimport { getQualityScoreColor, getQualityScoreIcon, getQualityScoreLabel, getQualityScoreBadgeVariant } from '@/utils/status';\r\nimport { formatCompact } from '@/utils/format';\r\n\r\n// Helper function to extract quality metrics from job analytics data\r\nfunction getMetricsFromJob(job: ProcessingJob): QualityMetrics {\r\n  const totalRows = job.totalRows || job.processedRows || 0;\r\n  const geminiSuccessCount = job.geminiSuccessCount || 0;\r\n  const fallbackUsageCount = job.fallbackUsageCount || 0;\r\n  const lowConfidenceCount = job.lowConfidenceCount || 0;\r\n  const qualityScore = typeof job.qualityScore === 'number' ? job.qualityScore * 100 : 0;\r\n  \r\n  // Get analytics from analytics field \r\n  const analytics = job.analytics || job.stats || {};\r\n  const avgConfidence = analytics.avg_confidence || 0;\r\n  const successRate = (analytics as any).success_rate ? (analytics as any).success_rate / 100 : 1;\r\n  \r\n  return {\r\n    totalRows,\r\n    geminiSuccessCount,\r\n    fallbackCount: fallbackUsageCount,\r\n    lowConfidenceCount,\r\n    successRate,\r\n    fallbackUsagePercentage: totalRows > 0 ? fallbackUsageCount / totalRows : 0,\r\n    avgConfidence,\r\n    qualityScore: Math.round(qualityScore)\r\n  };\r\n}\r\n\r\ninterface QualityMetricsPanelProps {\r\n  results: ParseResult[];\r\n  job?: ProcessingJob;\r\n  className?: string;\r\n}\r\n\r\nexport default function QualityMetricsPanel({ results, job, className = '' }: QualityMetricsPanelProps) {\r\n  const [isExpanded, setIsExpanded] = useState(false);\r\n  \r\n  // Use job analytics data if available, otherwise calculate from results\r\n  const metrics = job && job.analytics ? \r\n    getMetricsFromJob(job) : \r\n    calculateQualityMetrics(results);\r\n  const recommendations = getQualityRecommendations(metrics);\r\n  const alertInfo = shouldShowQualityAlert(metrics);\r\n\r\n  if (results.length === 0) {\r\n    return null;\r\n  }\r\n\r\n  const QualityIcon = getQualityScoreIcon(metrics.qualityScore);\r\n\r\n  return (\r\n    <div className={`space-y-4 ${className}`}>\r\n      {/* Quality Alert */}\r\n      {alertInfo.show && (\r\n        <Alert variant={alertInfo.severity === 'error' ? 'destructive' : 'default'}>\r\n          <AlertTriangle className=\"h-4 w-4\" />\r\n          <AlertDescription>{alertInfo.message}</AlertDescription>\r\n        </Alert>\r\n      )}\r\n\r\n      {/* Main Quality Metrics Card */}\r\n      <Card>\r\n        <CardHeader>\r\n          <div className=\"flex items-center justify-between\">\r\n            <div>\r\n              <CardTitle className=\"flex items-center gap-2\">\r\n                <BarChart3 className=\"h-5 w-5\" />\r\n                Data Quality Report\r\n              </CardTitle>\r\n              <CardDescription>\r\n                Parsing quality and method analysis for {metrics.totalRows.toLocaleString()} processed rows\r\n              </CardDescription>\r\n            </div>\r\n            <Button \r\n              variant=\"outline\" \r\n              size=\"sm\"\r\n              onClick={() => setIsExpanded(!isExpanded)}\r\n            >\r\n              {isExpanded ? <ChevronUp className=\"h-4 w-4\" /> : <ChevronDown className=\"h-4 w-4\" />}\r\n              {isExpanded ? 'Collapse' : 'Expand'}\r\n            </Button>\r\n          </div>\r\n        </CardHeader>\r\n        \r\n        <CardContent className=\"space-y-6\">\r\n          {/* Quality Score */}\r\n          <div className=\"flex items-center justify-between p-4 bg-muted/50 rounded-lg\">\r\n            <div className=\"flex items-center gap-3\">\r\n              <QualityIcon className=\"h-5 w-5\" />\r\n              <div>\r\n                <p className=\"font-semibold\">Overall Quality Score</p>\r\n                <p className=\"text-sm text-muted-foreground\">Combined parsing quality rating</p>\r\n              </div>\r\n            </div>\r\n            <div className=\"text-right\">\r\n              <p className={`text-3xl font-bold ${getQualityScoreColor(metrics.qualityScore)}`}>\r\n                {metrics.qualityScore}%\r\n              </p>\r\n              <Badge variant={getQualityScoreBadgeVariant(metrics.qualityScore)}>\r\n                {getQualityScoreLabel(metrics.qualityScore)}\r\n              </Badge>\r\n            </div>\r\n          </div>\r\n\r\n          {/* Key Metrics Grid */}\r\n          <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4\">\r\n            <MetricCard\r\n              value={metrics.geminiSuccessCount}\r\n              label=\"AI Parsed\"\r\n              subtitle={`${Math.round((metrics.geminiSuccessCount / metrics.totalRows) * 100)}%`}\r\n              variant=\"info\"\r\n              icon={Brain}\r\n            />\r\n            <MetricCard\r\n              value={metrics.fallbackCount}\r\n              label=\"Fallback Used\"\r\n              subtitle={`${Math.round(metrics.fallbackUsagePercentage * 100)}%`}\r\n              variant=\"warning\"\r\n              icon={Zap}\r\n            />\r\n            <MetricCard\r\n              value={metrics.totalRows - metrics.lowConfidenceCount}\r\n              label=\"High Quality\"\r\n              subtitle={`${Math.round(metrics.successRate * 100)}%`}\r\n              variant=\"success\"\r\n              icon={CheckCircle}\r\n            />\r\n            <MetricCard\r\n              value={metrics.lowConfidenceCount}\r\n              label=\"Low Confidence\"\r\n              subtitle={`${Math.round((metrics.lowConfidenceCount / metrics.totalRows) * 100)}%`}\r\n              variant=\"error\"\r\n              icon={AlertTriangle}\r\n            />\r\n          </div>\r\n\r\n          {/* Average Confidence */}\r\n          <ProgressBar\r\n            value={metrics.avgConfidence * 100}\r\n            max={100}\r\n            showLabel\r\n            label={`Average Confidence: ${Math.round(metrics.avgConfidence * 100)}%`}\r\n            dangerZone={70}\r\n            size=\"sm\"\r\n            variant={\r\n              metrics.avgConfidence * 100 >= 85\r\n                ? 'success'\r\n                : metrics.avgConfidence * 100 >= 70\r\n                ? 'primary'\r\n                : 'warning'\r\n            }\r\n          />\r\n\r\n          {/* Expanded Details */}\r\n          {isExpanded && (\r\n            <div className=\"space-y-4 border-t pt-4\">\r\n              {/* API Usage Breakdown */}\r\n              <div className=\"space-y-2\">\r\n                <h4 className=\"font-semibold flex items-center gap-2\">\r\n                  <TrendingUp className=\"h-4 w-4\" />\r\n                  API Usage Breakdown\r\n                </h4>\r\n                <div className=\"grid grid-cols-2 gap-4 text-sm\">\r\n                  <div className=\"flex justify-between\">\r\n                    <span>Gemini API Success:</span>\r\n                    <Badge variant=\"outline\" className=\"bg-status-info-bg border-status-info-border\">\r\n                      {Math.round((metrics.geminiSuccessCount / metrics.totalRows) * 100)}%\r\n                    </Badge>\r\n                  </div>\r\n                  <div className=\"flex justify-between\">\r\n                    <span>Fallback Usage:</span>\r\n                    <Badge variant=\"outline\" className=\"bg-status-warning-bg border-status-warning-border\">\r\n                      {Math.round(metrics.fallbackUsagePercentage * 100)}%\r\n                    </Badge>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              {/* Cost Analysis */}\r\n              <div className=\"p-3 bg-muted/50 rounded-lg\">\r\n                <h4 className=\"font-semibold text-sm mb-2\">Cost Analysis</h4>\r\n                <p className=\"text-caption text-muted-foreground\">\r\n                  Fallback parsing saved approximately{' '}\r\n                  <span className=\"font-medium text-status-success\">\r\n                    ${(metrics.fallbackCount * 0.001).toFixed(3)}\r\n                  </span>{' '}\r\n                  in API costs ({metrics.fallbackCount} API calls avoided)\r\n                </p>\r\n              </div>\r\n\r\n              {/* Recommendations */}\r\n              <div className=\"space-y-2\">\r\n                <h4 className=\"font-semibold flex items-center gap-2\">\r\n                  <Info className=\"h-4 w-4\" />\r\n                  Recommendations\r\n                </h4>\r\n                <div className=\"space-y-2\">\r\n                  {recommendations.map((recommendation, index) => (\r\n                    <div key={index} className=\"flex items-start gap-2 p-2 bg-muted/50 rounded text-sm\">\r\n                      <div className=\"w-2 h-2 bg-primary rounded-full mt-2 flex-shrink-0\" />\r\n                      <p>{recommendation}</p>\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          )}\r\n        </CardContent>\r\n      </Card>\r\n    </div>\r\n  );\r\n}","\"use client\";\n\n// src/tooltip.tsx\nimport * as React from \"react\";\nimport { composeEventHandlers } from \"@radix-ui/primitive\";\nimport { useComposedRefs } from \"@radix-ui/react-compose-refs\";\nimport { createContextScope } from \"@radix-ui/react-context\";\nimport { DismissableLayer } from \"@radix-ui/react-dismissable-layer\";\nimport { useId } from \"@radix-ui/react-id\";\nimport * as PopperPrimitive from \"@radix-ui/react-popper\";\nimport { createPopperScope } from \"@radix-ui/react-popper\";\nimport { Portal as PortalPrimitive } from \"@radix-ui/react-portal\";\nimport { Presence } from \"@radix-ui/react-presence\";\nimport { Primitive } from \"@radix-ui/react-primitive\";\nimport { createSlottable } from \"@radix-ui/react-slot\";\nimport { useControllableState } from \"@radix-ui/react-use-controllable-state\";\nimport * as VisuallyHiddenPrimitive from \"@radix-ui/react-visually-hidden\";\nimport { jsx, jsxs } from \"react/jsx-runtime\";\nvar [createTooltipContext, createTooltipScope] = createContextScope(\"Tooltip\", [\n  createPopperScope\n]);\nvar usePopperScope = createPopperScope();\nvar PROVIDER_NAME = \"TooltipProvider\";\nvar DEFAULT_DELAY_DURATION = 700;\nvar TOOLTIP_OPEN = \"tooltip.open\";\nvar [TooltipProviderContextProvider, useTooltipProviderContext] = createTooltipContext(PROVIDER_NAME);\nvar TooltipProvider = (props) => {\n  const {\n    __scopeTooltip,\n    delayDuration = DEFAULT_DELAY_DURATION,\n    skipDelayDuration = 300,\n    disableHoverableContent = false,\n    children\n  } = props;\n  const isOpenDelayedRef = React.useRef(true);\n  const isPointerInTransitRef = React.useRef(false);\n  const skipDelayTimerRef = React.useRef(0);\n  React.useEffect(() => {\n    const skipDelayTimer = skipDelayTimerRef.current;\n    return () => window.clearTimeout(skipDelayTimer);\n  }, []);\n  return /* @__PURE__ */ jsx(\n    TooltipProviderContextProvider,\n    {\n      scope: __scopeTooltip,\n      isOpenDelayedRef,\n      delayDuration,\n      onOpen: React.useCallback(() => {\n        window.clearTimeout(skipDelayTimerRef.current);\n        isOpenDelayedRef.current = false;\n      }, []),\n      onClose: React.useCallback(() => {\n        window.clearTimeout(skipDelayTimerRef.current);\n        skipDelayTimerRef.current = window.setTimeout(\n          () => isOpenDelayedRef.current = true,\n          skipDelayDuration\n        );\n      }, [skipDelayDuration]),\n      isPointerInTransitRef,\n      onPointerInTransitChange: React.useCallback((inTransit) => {\n        isPointerInTransitRef.current = inTransit;\n      }, []),\n      disableHoverableContent,\n      children\n    }\n  );\n};\nTooltipProvider.displayName = PROVIDER_NAME;\nvar TOOLTIP_NAME = \"Tooltip\";\nvar [TooltipContextProvider, useTooltipContext] = createTooltipContext(TOOLTIP_NAME);\nvar Tooltip = (props) => {\n  const {\n    __scopeTooltip,\n    children,\n    open: openProp,\n    defaultOpen,\n    onOpenChange,\n    disableHoverableContent: disableHoverableContentProp,\n    delayDuration: delayDurationProp\n  } = props;\n  const providerContext = useTooltipProviderContext(TOOLTIP_NAME, props.__scopeTooltip);\n  const popperScope = usePopperScope(__scopeTooltip);\n  const [trigger, setTrigger] = React.useState(null);\n  const contentId = useId();\n  const openTimerRef = React.useRef(0);\n  const disableHoverableContent = disableHoverableContentProp ?? providerContext.disableHoverableContent;\n  const delayDuration = delayDurationProp ?? providerContext.delayDuration;\n  const wasOpenDelayedRef = React.useRef(false);\n  const [open, setOpen] = useControllableState({\n    prop: openProp,\n    defaultProp: defaultOpen ?? false,\n    onChange: (open2) => {\n      if (open2) {\n        providerContext.onOpen();\n        document.dispatchEvent(new CustomEvent(TOOLTIP_OPEN));\n      } else {\n        providerContext.onClose();\n      }\n      onOpenChange?.(open2);\n    },\n    caller: TOOLTIP_NAME\n  });\n  const stateAttribute = React.useMemo(() => {\n    return open ? wasOpenDelayedRef.current ? \"delayed-open\" : \"instant-open\" : \"closed\";\n  }, [open]);\n  const handleOpen = React.useCallback(() => {\n    window.clearTimeout(openTimerRef.current);\n    openTimerRef.current = 0;\n    wasOpenDelayedRef.current = false;\n    setOpen(true);\n  }, [setOpen]);\n  const handleClose = React.useCallback(() => {\n    window.clearTimeout(openTimerRef.current);\n    openTimerRef.current = 0;\n    setOpen(false);\n  }, [setOpen]);\n  const handleDelayedOpen = React.useCallback(() => {\n    window.clearTimeout(openTimerRef.current);\n    openTimerRef.current = window.setTimeout(() => {\n      wasOpenDelayedRef.current = true;\n      setOpen(true);\n      openTimerRef.current = 0;\n    }, delayDuration);\n  }, [delayDuration, setOpen]);\n  React.useEffect(() => {\n    return () => {\n      if (openTimerRef.current) {\n        window.clearTimeout(openTimerRef.current);\n        openTimerRef.current = 0;\n      }\n    };\n  }, []);\n  return /* @__PURE__ */ jsx(PopperPrimitive.Root, { ...popperScope, children: /* @__PURE__ */ jsx(\n    TooltipContextProvider,\n    {\n      scope: __scopeTooltip,\n      contentId,\n      open,\n      stateAttribute,\n      trigger,\n      onTriggerChange: setTrigger,\n      onTriggerEnter: React.useCallback(() => {\n        if (providerContext.isOpenDelayedRef.current) handleDelayedOpen();\n        else handleOpen();\n      }, [providerContext.isOpenDelayedRef, handleDelayedOpen, handleOpen]),\n      onTriggerLeave: React.useCallback(() => {\n        if (disableHoverableContent) {\n          handleClose();\n        } else {\n          window.clearTimeout(openTimerRef.current);\n          openTimerRef.current = 0;\n        }\n      }, [handleClose, disableHoverableContent]),\n      onOpen: handleOpen,\n      onClose: handleClose,\n      disableHoverableContent,\n      children\n    }\n  ) });\n};\nTooltip.displayName = TOOLTIP_NAME;\nvar TRIGGER_NAME = \"TooltipTrigger\";\nvar TooltipTrigger = React.forwardRef(\n  (props, forwardedRef) => {\n    const { __scopeTooltip, ...triggerProps } = props;\n    const context = useTooltipContext(TRIGGER_NAME, __scopeTooltip);\n    const providerContext = useTooltipProviderContext(TRIGGER_NAME, __scopeTooltip);\n    const popperScope = usePopperScope(__scopeTooltip);\n    const ref = React.useRef(null);\n    const composedRefs = useComposedRefs(forwardedRef, ref, context.onTriggerChange);\n    const isPointerDownRef = React.useRef(false);\n    const hasPointerMoveOpenedRef = React.useRef(false);\n    const handlePointerUp = React.useCallback(() => isPointerDownRef.current = false, []);\n    React.useEffect(() => {\n      return () => document.removeEventListener(\"pointerup\", handlePointerUp);\n    }, [handlePointerUp]);\n    return /* @__PURE__ */ jsx(PopperPrimitive.Anchor, { asChild: true, ...popperScope, children: /* @__PURE__ */ jsx(\n      Primitive.button,\n      {\n        \"aria-describedby\": context.open ? context.contentId : void 0,\n        \"data-state\": context.stateAttribute,\n        ...triggerProps,\n        ref: composedRefs,\n        onPointerMove: composeEventHandlers(props.onPointerMove, (event) => {\n          if (event.pointerType === \"touch\") return;\n          if (!hasPointerMoveOpenedRef.current && !providerContext.isPointerInTransitRef.current) {\n            context.onTriggerEnter();\n            hasPointerMoveOpenedRef.current = true;\n          }\n        }),\n        onPointerLeave: composeEventHandlers(props.onPointerLeave, () => {\n          context.onTriggerLeave();\n          hasPointerMoveOpenedRef.current = false;\n        }),\n        onPointerDown: composeEventHandlers(props.onPointerDown, () => {\n          if (context.open) {\n            context.onClose();\n          }\n          isPointerDownRef.current = true;\n          document.addEventListener(\"pointerup\", handlePointerUp, { once: true });\n        }),\n        onFocus: composeEventHandlers(props.onFocus, () => {\n          if (!isPointerDownRef.current) context.onOpen();\n        }),\n        onBlur: composeEventHandlers(props.onBlur, context.onClose),\n        onClick: composeEventHandlers(props.onClick, context.onClose)\n      }\n    ) });\n  }\n);\nTooltipTrigger.displayName = TRIGGER_NAME;\nvar PORTAL_NAME = \"TooltipPortal\";\nvar [PortalProvider, usePortalContext] = createTooltipContext(PORTAL_NAME, {\n  forceMount: void 0\n});\nvar TooltipPortal = (props) => {\n  const { __scopeTooltip, forceMount, children, container } = props;\n  const context = useTooltipContext(PORTAL_NAME, __scopeTooltip);\n  return /* @__PURE__ */ jsx(PortalProvider, { scope: __scopeTooltip, forceMount, children: /* @__PURE__ */ jsx(Presence, { present: forceMount || context.open, children: /* @__PURE__ */ jsx(PortalPrimitive, { asChild: true, container, children }) }) });\n};\nTooltipPortal.displayName = PORTAL_NAME;\nvar CONTENT_NAME = \"TooltipContent\";\nvar TooltipContent = React.forwardRef(\n  (props, forwardedRef) => {\n    const portalContext = usePortalContext(CONTENT_NAME, props.__scopeTooltip);\n    const { forceMount = portalContext.forceMount, side = \"top\", ...contentProps } = props;\n    const context = useTooltipContext(CONTENT_NAME, props.__scopeTooltip);\n    return /* @__PURE__ */ jsx(Presence, { present: forceMount || context.open, children: context.disableHoverableContent ? /* @__PURE__ */ jsx(TooltipContentImpl, { side, ...contentProps, ref: forwardedRef }) : /* @__PURE__ */ jsx(TooltipContentHoverable, { side, ...contentProps, ref: forwardedRef }) });\n  }\n);\nvar TooltipContentHoverable = React.forwardRef((props, forwardedRef) => {\n  const context = useTooltipContext(CONTENT_NAME, props.__scopeTooltip);\n  const providerContext = useTooltipProviderContext(CONTENT_NAME, props.__scopeTooltip);\n  const ref = React.useRef(null);\n  const composedRefs = useComposedRefs(forwardedRef, ref);\n  const [pointerGraceArea, setPointerGraceArea] = React.useState(null);\n  const { trigger, onClose } = context;\n  const content = ref.current;\n  const { onPointerInTransitChange } = providerContext;\n  const handleRemoveGraceArea = React.useCallback(() => {\n    setPointerGraceArea(null);\n    onPointerInTransitChange(false);\n  }, [onPointerInTransitChange]);\n  const handleCreateGraceArea = React.useCallback(\n    (event, hoverTarget) => {\n      const currentTarget = event.currentTarget;\n      const exitPoint = { x: event.clientX, y: event.clientY };\n      const exitSide = getExitSideFromRect(exitPoint, currentTarget.getBoundingClientRect());\n      const paddedExitPoints = getPaddedExitPoints(exitPoint, exitSide);\n      const hoverTargetPoints = getPointsFromRect(hoverTarget.getBoundingClientRect());\n      const graceArea = getHull([...paddedExitPoints, ...hoverTargetPoints]);\n      setPointerGraceArea(graceArea);\n      onPointerInTransitChange(true);\n    },\n    [onPointerInTransitChange]\n  );\n  React.useEffect(() => {\n    return () => handleRemoveGraceArea();\n  }, [handleRemoveGraceArea]);\n  React.useEffect(() => {\n    if (trigger && content) {\n      const handleTriggerLeave = (event) => handleCreateGraceArea(event, content);\n      const handleContentLeave = (event) => handleCreateGraceArea(event, trigger);\n      trigger.addEventListener(\"pointerleave\", handleTriggerLeave);\n      content.addEventListener(\"pointerleave\", handleContentLeave);\n      return () => {\n        trigger.removeEventListener(\"pointerleave\", handleTriggerLeave);\n        content.removeEventListener(\"pointerleave\", handleContentLeave);\n      };\n    }\n  }, [trigger, content, handleCreateGraceArea, handleRemoveGraceArea]);\n  React.useEffect(() => {\n    if (pointerGraceArea) {\n      const handleTrackPointerGrace = (event) => {\n        const target = event.target;\n        const pointerPosition = { x: event.clientX, y: event.clientY };\n        const hasEnteredTarget = trigger?.contains(target) || content?.contains(target);\n        const isPointerOutsideGraceArea = !isPointInPolygon(pointerPosition, pointerGraceArea);\n        if (hasEnteredTarget) {\n          handleRemoveGraceArea();\n        } else if (isPointerOutsideGraceArea) {\n          handleRemoveGraceArea();\n          onClose();\n        }\n      };\n      document.addEventListener(\"pointermove\", handleTrackPointerGrace);\n      return () => document.removeEventListener(\"pointermove\", handleTrackPointerGrace);\n    }\n  }, [trigger, content, pointerGraceArea, onClose, handleRemoveGraceArea]);\n  return /* @__PURE__ */ jsx(TooltipContentImpl, { ...props, ref: composedRefs });\n});\nvar [VisuallyHiddenContentContextProvider, useVisuallyHiddenContentContext] = createTooltipContext(TOOLTIP_NAME, { isInside: false });\nvar Slottable = createSlottable(\"TooltipContent\");\nvar TooltipContentImpl = React.forwardRef(\n  (props, forwardedRef) => {\n    const {\n      __scopeTooltip,\n      children,\n      \"aria-label\": ariaLabel,\n      onEscapeKeyDown,\n      onPointerDownOutside,\n      ...contentProps\n    } = props;\n    const context = useTooltipContext(CONTENT_NAME, __scopeTooltip);\n    const popperScope = usePopperScope(__scopeTooltip);\n    const { onClose } = context;\n    React.useEffect(() => {\n      document.addEventListener(TOOLTIP_OPEN, onClose);\n      return () => document.removeEventListener(TOOLTIP_OPEN, onClose);\n    }, [onClose]);\n    React.useEffect(() => {\n      if (context.trigger) {\n        const handleScroll = (event) => {\n          const target = event.target;\n          if (target?.contains(context.trigger)) onClose();\n        };\n        window.addEventListener(\"scroll\", handleScroll, { capture: true });\n        return () => window.removeEventListener(\"scroll\", handleScroll, { capture: true });\n      }\n    }, [context.trigger, onClose]);\n    return /* @__PURE__ */ jsx(\n      DismissableLayer,\n      {\n        asChild: true,\n        disableOutsidePointerEvents: false,\n        onEscapeKeyDown,\n        onPointerDownOutside,\n        onFocusOutside: (event) => event.preventDefault(),\n        onDismiss: onClose,\n        children: /* @__PURE__ */ jsxs(\n          PopperPrimitive.Content,\n          {\n            \"data-state\": context.stateAttribute,\n            ...popperScope,\n            ...contentProps,\n            ref: forwardedRef,\n            style: {\n              ...contentProps.style,\n              // re-namespace exposed content custom properties\n              ...{\n                \"--radix-tooltip-content-transform-origin\": \"var(--radix-popper-transform-origin)\",\n                \"--radix-tooltip-content-available-width\": \"var(--radix-popper-available-width)\",\n                \"--radix-tooltip-content-available-height\": \"var(--radix-popper-available-height)\",\n                \"--radix-tooltip-trigger-width\": \"var(--radix-popper-anchor-width)\",\n                \"--radix-tooltip-trigger-height\": \"var(--radix-popper-anchor-height)\"\n              }\n            },\n            children: [\n              /* @__PURE__ */ jsx(Slottable, { children }),\n              /* @__PURE__ */ jsx(VisuallyHiddenContentContextProvider, { scope: __scopeTooltip, isInside: true, children: /* @__PURE__ */ jsx(VisuallyHiddenPrimitive.Root, { id: context.contentId, role: \"tooltip\", children: ariaLabel || children }) })\n            ]\n          }\n        )\n      }\n    );\n  }\n);\nTooltipContent.displayName = CONTENT_NAME;\nvar ARROW_NAME = \"TooltipArrow\";\nvar TooltipArrow = React.forwardRef(\n  (props, forwardedRef) => {\n    const { __scopeTooltip, ...arrowProps } = props;\n    const popperScope = usePopperScope(__scopeTooltip);\n    const visuallyHiddenContentContext = useVisuallyHiddenContentContext(\n      ARROW_NAME,\n      __scopeTooltip\n    );\n    return visuallyHiddenContentContext.isInside ? null : /* @__PURE__ */ jsx(PopperPrimitive.Arrow, { ...popperScope, ...arrowProps, ref: forwardedRef });\n  }\n);\nTooltipArrow.displayName = ARROW_NAME;\nfunction getExitSideFromRect(point, rect) {\n  const top = Math.abs(rect.top - point.y);\n  const bottom = Math.abs(rect.bottom - point.y);\n  const right = Math.abs(rect.right - point.x);\n  const left = Math.abs(rect.left - point.x);\n  switch (Math.min(top, bottom, right, left)) {\n    case left:\n      return \"left\";\n    case right:\n      return \"right\";\n    case top:\n      return \"top\";\n    case bottom:\n      return \"bottom\";\n    default:\n      throw new Error(\"unreachable\");\n  }\n}\nfunction getPaddedExitPoints(exitPoint, exitSide, padding = 5) {\n  const paddedExitPoints = [];\n  switch (exitSide) {\n    case \"top\":\n      paddedExitPoints.push(\n        { x: exitPoint.x - padding, y: exitPoint.y + padding },\n        { x: exitPoint.x + padding, y: exitPoint.y + padding }\n      );\n      break;\n    case \"bottom\":\n      paddedExitPoints.push(\n        { x: exitPoint.x - padding, y: exitPoint.y - padding },\n        { x: exitPoint.x + padding, y: exitPoint.y - padding }\n      );\n      break;\n    case \"left\":\n      paddedExitPoints.push(\n        { x: exitPoint.x + padding, y: exitPoint.y - padding },\n        { x: exitPoint.x + padding, y: exitPoint.y + padding }\n      );\n      break;\n    case \"right\":\n      paddedExitPoints.push(\n        { x: exitPoint.x - padding, y: exitPoint.y - padding },\n        { x: exitPoint.x - padding, y: exitPoint.y + padding }\n      );\n      break;\n  }\n  return paddedExitPoints;\n}\nfunction getPointsFromRect(rect) {\n  const { top, right, bottom, left } = rect;\n  return [\n    { x: left, y: top },\n    { x: right, y: top },\n    { x: right, y: bottom },\n    { x: left, y: bottom }\n  ];\n}\nfunction isPointInPolygon(point, polygon) {\n  const { x, y } = point;\n  let inside = false;\n  for (let i = 0, j = polygon.length - 1; i < polygon.length; j = i++) {\n    const ii = polygon[i];\n    const jj = polygon[j];\n    const xi = ii.x;\n    const yi = ii.y;\n    const xj = jj.x;\n    const yj = jj.y;\n    const intersect = yi > y !== yj > y && x < (xj - xi) * (y - yi) / (yj - yi) + xi;\n    if (intersect) inside = !inside;\n  }\n  return inside;\n}\nfunction getHull(points) {\n  const newPoints = points.slice();\n  newPoints.sort((a, b) => {\n    if (a.x < b.x) return -1;\n    else if (a.x > b.x) return 1;\n    else if (a.y < b.y) return -1;\n    else if (a.y > b.y) return 1;\n    else return 0;\n  });\n  return getHullPresorted(newPoints);\n}\nfunction getHullPresorted(points) {\n  if (points.length <= 1) return points.slice();\n  const upperHull = [];\n  for (let i = 0; i < points.length; i++) {\n    const p = points[i];\n    while (upperHull.length >= 2) {\n      const q = upperHull[upperHull.length - 1];\n      const r = upperHull[upperHull.length - 2];\n      if ((q.x - r.x) * (p.y - r.y) >= (q.y - r.y) * (p.x - r.x)) upperHull.pop();\n      else break;\n    }\n    upperHull.push(p);\n  }\n  upperHull.pop();\n  const lowerHull = [];\n  for (let i = points.length - 1; i >= 0; i--) {\n    const p = points[i];\n    while (lowerHull.length >= 2) {\n      const q = lowerHull[lowerHull.length - 1];\n      const r = lowerHull[lowerHull.length - 2];\n      if ((q.x - r.x) * (p.y - r.y) >= (q.y - r.y) * (p.x - r.x)) lowerHull.pop();\n      else break;\n    }\n    lowerHull.push(p);\n  }\n  lowerHull.pop();\n  if (upperHull.length === 1 && lowerHull.length === 1 && upperHull[0].x === lowerHull[0].x && upperHull[0].y === lowerHull[0].y) {\n    return upperHull;\n  } else {\n    return upperHull.concat(lowerHull);\n  }\n}\nvar Provider = TooltipProvider;\nvar Root3 = Tooltip;\nvar Trigger = TooltipTrigger;\nvar Portal = TooltipPortal;\nvar Content2 = TooltipContent;\nvar Arrow2 = TooltipArrow;\nexport {\n  Arrow2 as Arrow,\n  Content2 as Content,\n  Portal,\n  Provider,\n  Root3 as Root,\n  Tooltip,\n  TooltipArrow,\n  TooltipContent,\n  TooltipPortal,\n  TooltipProvider,\n  TooltipTrigger,\n  Trigger,\n  createTooltipScope\n};\n//# sourceMappingURL=index.mjs.map\n","import * as React from \"react\"\r\nimport * as TooltipPrimitive from \"@radix-ui/react-tooltip\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst TooltipProvider = TooltipPrimitive.Provider\r\n\r\nconst Tooltip = TooltipPrimitive.Root\r\n\r\nconst TooltipTrigger = TooltipPrimitive.Trigger\r\n\r\nconst TooltipContent = React.forwardRef<\r\n  React.ElementRef<typeof TooltipPrimitive.Content>,\r\n  React.ComponentPropsWithoutRef<typeof TooltipPrimitive.Content>\r\n>(({ className, sideOffset = 4, ...props }, ref) => (\r\n  <TooltipPrimitive.Content\r\n    ref={ref}\r\n    sideOffset={sideOffset}\r\n    className={cn(\r\n      \"z-modal overflow-hidden rounded-dropdown border bg-popover px-3 py-2 text-sm text-popover-foreground shadow-dropdown animate-in fade-in-0 zoom-in-95 data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=closed]:zoom-out-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n))\r\nTooltipContent.displayName = TooltipPrimitive.Content.displayName\r\n\r\nexport { Tooltip, TooltipTrigger, TooltipContent, TooltipProvider }","import { User, Building, Shield, FileText, Users, type LucideIcon } from 'lucide-react';\r\n\r\nexport type EntityType = 'person' | 'company' | 'corporation' | 'business' | 'trust' | 'foundation' | 'unknown';\r\nexport type BadgeVariant = 'default' | 'secondary' | 'outline' | 'destructive';\r\n\r\n/**\r\n * Gets the appropriate icon for an entity type\r\n *\r\n * @param entityType - The entity type (person, company, trust, etc.)\r\n * @returns Lucide icon component\r\n *\r\n * @example\r\n * ```tsx\r\n * const Icon = getEntityIcon('person');\r\n * <Icon className=\"h-4 w-4\" />\r\n * ```\r\n */\r\nexport function getEntityIcon(entityType: string | undefined): LucideIcon {\r\n  if (!entityType) return Users;\r\n\r\n  switch (entityType.toLowerCase()) {\r\n    case 'person':\r\n      return User;\r\n    case 'company':\r\n    case 'corporation':\r\n    case 'business':\r\n      return Building;\r\n    case 'trust':\r\n    case 'foundation':\r\n      return Shield;\r\n    case 'unknown':\r\n      return FileText;\r\n    default:\r\n      return Users;\r\n  }\r\n}\r\n\r\n/**\r\n * Gets the appropriate badge variant for an entity type\r\n *\r\n * @param entityType - The entity type\r\n * @returns Badge variant\r\n *\r\n * @example\r\n * ```tsx\r\n * <Badge variant={getEntityBadgeVariant('person')}>Person</Badge>\r\n * ```\r\n */\r\nexport function getEntityBadgeVariant(entityType: string | undefined): BadgeVariant {\r\n  if (!entityType) return 'destructive';\r\n\r\n  switch (entityType.toLowerCase()) {\r\n    case 'person':\r\n      return 'default';\r\n    case 'company':\r\n    case 'corporation':\r\n    case 'business':\r\n      return 'secondary';\r\n    case 'trust':\r\n    case 'foundation':\r\n      return 'outline';\r\n    case 'unknown':\r\n      return 'destructive';\r\n    default:\r\n      return 'destructive';\r\n  }\r\n}\r\n\r\n/**\r\n * Gets the appropriate color class for an entity type\r\n *\r\n * @param entityType - The entity type\r\n * @returns Tailwind color class using status colors\r\n *\r\n * @example\r\n * ```tsx\r\n * <div className={getEntityColor('person')}>Person</div>\r\n * ```\r\n */\r\nexport function getEntityColor(entityType: string | undefined): string {\r\n  if (!entityType) return 'text-muted-foreground';\r\n\r\n  switch (entityType.toLowerCase()) {\r\n    case 'person':\r\n      return 'text-status-info';\r\n    case 'company':\r\n    case 'corporation':\r\n    case 'business':\r\n      return 'text-status-success';\r\n    case 'trust':\r\n    case 'foundation':\r\n      return 'text-primary';\r\n    case 'unknown':\r\n      return 'text-status-warning';\r\n    default:\r\n      return 'text-muted-foreground';\r\n  }\r\n}\r\n\r\n/**\r\n * Gets the appropriate background color class for an entity type\r\n *\r\n * @param entityType - The entity type\r\n * @returns Tailwind background color class using status colors\r\n *\r\n * @example\r\n * ```tsx\r\n * <div className={getEntityBackgroundColor('person')}>Person</div>\r\n * ```\r\n */\r\nexport function getEntityBackgroundColor(entityType: string | undefined): string {\r\n  if (!entityType) return 'bg-muted/50';\r\n\r\n  switch (entityType.toLowerCase()) {\r\n    case 'person':\r\n      return 'bg-status-info-bg border-status-info-border';\r\n    case 'company':\r\n    case 'corporation':\r\n    case 'business':\r\n      return 'bg-status-success-bg border-status-success-border';\r\n    case 'trust':\r\n    case 'foundation':\r\n      return 'bg-primary/10 border-primary/20';\r\n    case 'unknown':\r\n      return 'bg-status-warning-bg border-status-warning-border';\r\n    default:\r\n      return 'bg-muted/50';\r\n  }\r\n}\r\n\r\n/**\r\n * Gets a human-readable label for an entity type\r\n *\r\n * @param entityType - The entity type\r\n * @returns Formatted label\r\n *\r\n * @example\r\n * ```tsx\r\n * getEntityLabel('person') // \"Person\"\r\n * getEntityLabel('unknown') // \"Unknown\"\r\n * ```\r\n */\r\nexport function getEntityLabel(entityType: string | undefined): string {\r\n  if (!entityType) return 'Unknown';\r\n\r\n  const normalized = entityType.toLowerCase();\r\n\r\n  // Capitalize first letter\r\n  return normalized.charAt(0).toUpperCase() + normalized.slice(1);\r\n}\r\n\r\n/**\r\n * Checks if an entity type is valid/known\r\n *\r\n * @param entityType - The entity type to check\r\n * @returns True if the entity type is recognized\r\n *\r\n * @example\r\n * ```tsx\r\n * isValidEntityType('person') // true\r\n * isValidEntityType('xyz') // false\r\n * ```\r\n */\r\nexport function isValidEntityType(entityType: string | undefined): boolean {\r\n  if (!entityType) return false;\r\n\r\n  const validTypes = [\r\n    'person',\r\n    'company',\r\n    'corporation',\r\n    'business',\r\n    'trust',\r\n    'foundation',\r\n  ];\r\n\r\n  return validTypes.includes(entityType.toLowerCase());\r\n}\r\n\r\n/**\r\n * Gets entity statistics from results\r\n *\r\n * @param results - Array of parse results with entity types\r\n * @returns Object with counts for each entity type\r\n *\r\n * @example\r\n * ```tsx\r\n * const stats = getEntityStats(results);\r\n * // { person: 50, company: 30, trust: 10, unknown: 5 }\r\n * ```\r\n */\r\nexport function getEntityStats(\r\n  results: Array<{ entityType: string }>\r\n): Record<string, number> {\r\n  const stats: Record<string, number> = {\r\n    person: 0,\r\n    company: 0,\r\n    trust: 0,\r\n    unknown: 0,\r\n  };\r\n\r\n  results.forEach((result) => {\r\n    const type = result.entityType?.toLowerCase();\r\n\r\n    if (type === 'person') {\r\n      stats.person++;\r\n    } else if (type === 'company' || type === 'corporation' || type === 'business') {\r\n      stats.company++;\r\n    } else if (type === 'trust' || type === 'foundation') {\r\n      stats.trust++;\r\n    } else {\r\n      stats.unknown++;\r\n    }\r\n  });\r\n\r\n  return stats;\r\n}\r\n","import { ParseResult } from '@/types/processing';\r\nimport {\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TableHeader,\r\n  TableRow,\r\n} from '@/components/ui/table';\r\nimport { Badge } from '@/components/ui/badge';\r\nimport {\r\n  Tooltip,\r\n  TooltipContent,\r\n  TooltipProvider,\r\n  TooltipTrigger,\r\n} from '@/components/ui/tooltip';\r\nimport {\r\n  AlertTriangle,\r\n  Brain,\r\n  Zap,\r\n  Info,\r\n  AlertCircle\r\n} from 'lucide-react';\r\nimport {\r\n  getParsingMethod,\r\n  getParsingWarning,\r\n  getConfidenceColor,\r\n  getMethodColor,\r\n  getWarningColor,\r\n  formatFallbackReason\r\n} from '@/utils/warningHelpers';\r\nimport { getEntityIcon, getEntityBadgeVariant } from '@/utils/entities';\r\nimport { EmptyState } from '@/components/shared/EmptyState';\r\n\r\ninterface ResultsTableProps {\r\n  results: ParseResult[];\r\n  searchTerm?: string;\r\n  className?: string;\r\n}\r\n\r\nexport default function ResultsTable({ results, searchTerm = '', className = '' }: ResultsTableProps) {\r\n  // Filter results based on search term\r\n  const filteredResults = results.filter(result =>\r\n    result.originalText.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n    result.firstName?.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n    result.lastName?.toLowerCase().includes(searchTerm.toLowerCase())\r\n  );\r\n\r\n  const getGenderDisplay = (gender: string | undefined, confidence?: number) => {\r\n    if (!gender || gender === 'unknown') return '-';\r\n    \r\n    const displayGender = gender.charAt(0).toUpperCase() + gender.slice(1);\r\n    \r\n    return (\r\n      <div className=\"flex items-center gap-2\">\r\n        <span>{displayGender}</span>\r\n        {confidence && (\r\n          <span className={`text-caption ${getConfidenceColor(confidence)}`}>\r\n            {Math.round(confidence * 100)}%\r\n          </span>\r\n        )}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const renderParsingMethodBadge = (result: ParseResult) => {\r\n    const method = getParsingMethod(result);\r\n    const warning = getParsingWarning(result);\r\n    \r\n    return (\r\n      <TooltipProvider>\r\n        <Tooltip>\r\n          <TooltipTrigger>\r\n            <Badge \r\n              variant=\"outline\" \r\n              className={`flex items-center gap-1 ${getMethodColor(method)}`}\r\n            >\r\n              {method === 'gemini' ? (\r\n                <Brain className=\"h-3 w-3\" />\r\n              ) : (\r\n                <Zap className=\"h-3 w-3\" />\r\n              )}\r\n              {method === 'gemini' ? 'AI' : 'Pattern'}\r\n            </Badge>\r\n          </TooltipTrigger>\r\n          <TooltipContent>\r\n            <div className=\"max-w-xs\">\r\n              <p className=\"font-semibold mb-1\">\r\n                {method === 'gemini' ? 'Gemini AI Parsing' : 'Pattern-based Fallback'}\r\n              </p>\r\n              <p className=\"text-xs\">\r\n                {method === 'gemini' \r\n                  ? 'Processed using advanced AI for intelligent name parsing'\r\n                  : 'Processed using rule-based pattern matching as fallback'\r\n                }\r\n              </p>\r\n              {warning?.reason && (\r\n                <p className=\"text-caption mt-1 text-muted-foreground\">\r\n                  {formatFallbackReason(warning.reason)}\r\n                </p>\r\n              )}\r\n            </div>\r\n          </TooltipContent>\r\n        </Tooltip>\r\n      </TooltipProvider>\r\n    );\r\n  };\r\n\r\n  const renderWarningIndicator = (result: ParseResult) => {\r\n    const warning = getParsingWarning(result);\r\n    \r\n    if (!warning) return null;\r\n\r\n    const WarningIcon = warning.level === 'error' ? AlertCircle : \r\n                       warning.level === 'warning' ? AlertTriangle : \r\n                       Info;\r\n\r\n    return (\r\n      <TooltipProvider>\r\n        <Tooltip>\r\n          <TooltipTrigger>\r\n            <WarningIcon className={`h-4 w-4 ${getWarningColor(warning.level)}`} />\r\n          </TooltipTrigger>\r\n          <TooltipContent>\r\n            <div className=\"max-w-xs\">\r\n              <p className={`font-semibold mb-1 ${getWarningColor(warning.level)}`}>\r\n                {warning.message}\r\n              </p>\r\n              {warning.reason && (\r\n                <p className=\"text-caption text-muted-foreground\">\r\n                  {formatFallbackReason(warning.reason)}\r\n                </p>\r\n              )}\r\n              {warning.confidence && (\r\n                <p className=\"text-caption mt-1\">\r\n                  Confidence: {Math.round(warning.confidence * 100)}%\r\n                </p>\r\n              )}\r\n            </div>\r\n          </TooltipContent>\r\n        </Tooltip>\r\n      </TooltipProvider>\r\n    );\r\n  };\r\n\r\n  const renderConfidenceScore = (result: ParseResult) => {\r\n    const warning = getParsingWarning(result);\r\n    \r\n    return (\r\n      <div className=\"flex items-center gap-2\">\r\n        <span className={getConfidenceColor(result.parsingConfidence)}>\r\n          {Math.round(result.parsingConfidence * 100)}%\r\n        </span>\r\n        {warning && renderWarningIndicator(result)}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const displayResults = filteredResults.slice(0, 100);\r\n\r\n  return (\r\n    <div className={`space-y-4 ${className}`}>\r\n      <div className=\"border rounded-lg\">\r\n        <Table>\r\n          <TableHeader>\r\n            <TableRow>\r\n              <TableHead>Original Text</TableHead>\r\n              <TableHead>First Name</TableHead>\r\n              <TableHead>Last Name</TableHead>\r\n              <TableHead>Entity Type</TableHead>\r\n              <TableHead>Gender</TableHead>\r\n              <TableHead>Method</TableHead>\r\n              <TableHead>Confidence</TableHead>\r\n            </TableRow>\r\n          </TableHeader>\r\n          <TableBody>\r\n            {displayResults.map((result, index) => (\r\n              <TableRow\r\n                key={index}\r\n                className={getParsingMethod(result) === 'fallback' ? 'bg-status-warning-bg/30' : ''}\r\n              >\r\n                <TableCell className=\"font-medium max-w-xs\">\r\n                  <div className=\"truncate\" title={result.originalText}>\r\n                    {result.originalText}\r\n                  </div>\r\n                </TableCell>\r\n                <TableCell>{result.firstName || '-'}</TableCell>\r\n                <TableCell>{result.lastName || '-'}</TableCell>\r\n                <TableCell>\r\n                  <Badge\r\n                    variant={getEntityBadgeVariant(result.entityType)}\r\n                    className=\"flex items-center gap-1 w-fit\"\r\n                  >\r\n                    {(() => {\r\n                      const Icon = getEntityIcon(result.entityType);\r\n                      return <Icon className=\"h-4 w-4\" />;\r\n                    })()}\r\n                    {result.entityType}\r\n                  </Badge>\r\n                </TableCell>\r\n                <TableCell>\r\n                  {getGenderDisplay(result.gender, result.genderConfidence)}\r\n                </TableCell>\r\n                <TableCell>\r\n                  {renderParsingMethodBadge(result)}\r\n                </TableCell>\r\n                <TableCell>\r\n                  {renderConfidenceScore(result)}\r\n                </TableCell>\r\n              </TableRow>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n        \r\n        {filteredResults.length > 100 && (\r\n          <div className=\"p-4 text-center text-sm text-muted-foreground border-t bg-muted/20\">\r\n            Showing first 100 results of {filteredResults.length.toLocaleString()} total. \r\n            Download the full file to see all results.\r\n          </div>\r\n        )}\r\n        \r\n        {filteredResults.length === 0 && (\r\n          <EmptyState\r\n            icon={Info}\r\n            title=\"No results found\"\r\n            description={searchTerm ? 'No results match your search criteria' : 'No results available for this job'}\r\n            size=\"md\"\r\n          />\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}","import { useState, useEffect, useCallback } from 'react';\r\nimport { logger } from '@/utils/logger';\nimport { useSearchParams } from 'react-router-dom';\r\nimport { processingService } from '@/services/processingService';\r\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';\r\nimport { Button } from '@/components/ui/button';\r\nimport { Input } from '@/components/ui/input';\r\nimport {\r\n  Download,\r\n  Search,\r\n  Filter,\r\n  FileText,\r\n  AlertTriangle\r\n} from 'lucide-react';\r\nimport { ProcessingJob, ParseResult, ParseResultResponse, JobResultsResponse } from '@/types/processing';\r\nimport { toast } from 'sonner';\r\nimport QualityMetricsPanel from '@/components/QualityMetricsPanel';\r\nimport ResultsTable from '@/components/ResultsTable';\r\nimport CountdownTimer from '@/components/CountdownTimer';\r\nimport { SkeletonCard } from '@/components/shared/SkeletonCard';\r\nimport { EmptyState } from '@/components/shared/EmptyState';\r\n\r\nexport default function Results() {\r\n  const [searchParams] = useSearchParams();\r\n  const [jobs, setJobs] = useState<ProcessingJob[]>([]);\r\n  const [selectedJob, setSelectedJob] = useState<ProcessingJob | null>(null);\r\n  const [results, setResults] = useState<ParseResult[]>([]);\r\n  const [filteredResults, setFilteredResults] = useState<ParseResult[]>([]);\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [loading, setLoading] = useState(true);\r\n  \r\n  const jobId = searchParams.get('jobId');\r\n\r\n  const fetchJobs = useCallback(async () => {\r\n    try {\r\n      const fetchedJobs = await processingService.getJobs();\r\n      const completedJobs = fetchedJobs.filter(job => job.status === 'completed');\r\n      setJobs(completedJobs);\r\n      \r\n      // Auto-select job if jobId in URL\r\n      if (jobId) {\r\n        const targetJob = completedJobs.find(job => job.id === jobId);\r\n        if (targetJob) {\r\n          setSelectedJob(targetJob);\r\n        }\r\n      } else if (completedJobs.length > 0) {\r\n        setSelectedJob(completedJobs[0]);\r\n      }\r\n    } catch {\r\n      toast.error('Failed to fetch completed jobs');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }, [jobId]);\r\n\r\n  const fetchJobResults = async (jobId: string) => {\r\n    try {\r\n      const resultsData = await processingService.getJobResults(jobId, 100) as JobResultsResponse;\r\n\r\n      // Convert the raw results to ParseResult format with proper typing\r\n      const parsedResults: ParseResult[] = resultsData.results.map((result: ParseResultResponse, index: number) => ({\r\n        id: index.toString(),\r\n        originalText: result.original_name_text || '',\r\n        firstName: result.first_name || '',\r\n        lastName: result.last_name || '',\r\n        entityType: result.entity_type || 'unknown',\r\n        parsingConfidence: result.parsing_confidence || 0,\r\n        gender: result.gender || 'unknown',\r\n        genderConfidence: result.gender_confidence || 0,\r\n        parsingMethod: result.parsing_method || 'unknown',\r\n        hasWarnings: result.has_warnings || false,\r\n        warnings: result.warnings ? result.warnings.split(',') : [],\r\n        geminiUsed: result.gemini_used || false,\r\n        fallbackReason: result.fallback_reason || null\r\n      }));\r\n\r\n      setResults(parsedResults);\r\n    } catch (error) {\r\n      logger.error('Failed to fetch job results:', error);\r\n\r\n      // Handle specific error cases with proper typing\r\n      const errorResponse = error as { response?: { status?: number } };\r\n      if (errorResponse?.response?.status === 404) {\r\n        toast.error('Results file has expired and been deleted. Please process the file again.');\r\n      } else if (errorResponse?.response?.status === 400) {\r\n        toast.error('Job is not completed yet or has failed processing.');\r\n      } else {\r\n        toast.error('Failed to fetch job results. The file may have expired.');\r\n      }\r\n      setResults([]);\r\n    }\r\n  };\r\n\r\n  const filterResults = useCallback(() => {\r\n    if (!searchTerm) {\r\n      setFilteredResults(results);\r\n      return;\r\n    }\r\n\r\n    const filtered = results.filter(result =>\r\n      result.originalText.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n      result.firstName?.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n      result.lastName?.toLowerCase().includes(searchTerm.toLowerCase())\r\n    );\r\n    setFilteredResults(filtered);\r\n  }, [results, searchTerm]);\r\n\r\n  useEffect(() => {\r\n    fetchJobs();\r\n  }, [fetchJobs]);\r\n\r\n  useEffect(() => {\r\n    if (selectedJob) {\r\n      fetchJobResults(selectedJob.id);\r\n    }\r\n  }, [selectedJob]);\r\n\r\n  useEffect(() => {\r\n    filterResults();\r\n  }, [filterResults]);\r\n\r\n  const handleDownload = async (job: ProcessingJob) => {\r\n    try {\r\n      const blob = await processingService.downloadResults(job.id);\r\n      const url = window.URL.createObjectURL(blob);\r\n      const a = document.createElement('a');\r\n      a.style.display = 'none';\r\n      a.href = url;\r\n      a.download = `processed_${job.filename}`;\r\n      document.body.appendChild(a);\r\n      a.click();\r\n      window.URL.revokeObjectURL(url);\r\n      document.body.removeChild(a);\r\n      toast.success('File downloaded successfully');\r\n    } catch {\r\n      toast.error('Failed to download file');\r\n    }\r\n  };\r\n\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"space-y-6\">\r\n        <h1 className=\"text-3xl font-bold tracking-tight\">Results</h1>\r\n        <SkeletonCard variant=\"card\" showHeader rows={5} />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (jobs.length === 0) {\r\n    return (\r\n      <div className=\"space-y-6\">\r\n        <h1 className=\"text-3xl font-bold tracking-tight\">Results</h1>\r\n        <Card>\r\n          <EmptyState\r\n            icon={FileText}\r\n            title=\"No completed jobs\"\r\n            description=\"Complete processing jobs will appear here for viewing and download\"\r\n            size=\"lg\"\r\n            showBranding\r\n          />\r\n        </Card>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"space-y-6\">\r\n      <div>\r\n        <h1 className=\"text-3xl font-bold tracking-tight\">Results</h1>\r\n        <p className=\"text-muted-foreground\">\r\n          View and download your processed file results\r\n        </p>\r\n      </div>\r\n\r\n      {/* Job Selection */}\r\n      <Card>\r\n        <CardHeader>\r\n          <CardTitle>Select Job</CardTitle>\r\n          <CardDescription>Choose a completed job to view results</CardDescription>\r\n        </CardHeader>\r\n        <CardContent>\r\n          <div className=\"grid gap-2 md:grid-cols-2 lg:grid-cols-3\">\r\n            {jobs.map((job) => {\r\n              const isExpired = job.expiresAt && new Date(job.expiresAt) < new Date();\r\n              const isExpiringSoon = job.expiresAt && \r\n                !isExpired && \r\n                new Date(job.expiresAt).getTime() - new Date().getTime() < 2 * 60 * 1000; // Less than 2 minutes\r\n              \r\n              return (\r\n                <Button\r\n                  key={job.id}\r\n                  variant={selectedJob?.id === job.id ? 'default' : 'outline'}\r\n                  className={`justify-start h-auto p-4 relative ${\r\n                    isExpired ? 'opacity-50' : ''\r\n                  }`}\r\n                  onClick={() => setSelectedJob(job)}\r\n                >\r\n                  <div className=\"text-left w-full\">\r\n                    <p className=\"font-medium truncate\">{job.filename}</p>\r\n                    <p className=\"text-caption text-muted-foreground\">\r\n                      {new Date(job.completedAt!).toLocaleDateString()}\r\n                    </p>\r\n                    <p className=\"text-caption text-muted-foreground\">\r\n                      {job.totalRows?.toLocaleString()} rows\r\n                    </p>\r\n                    {isExpired && (\r\n                      <div className=\"flex items-center gap-1 text-caption text-status-error mt-1\">\r\n                        <AlertTriangle className=\"h-3 w-3\" />\r\n                        <span>Expired</span>\r\n                      </div>\r\n                    )}\r\n                    {!isExpired && isExpiringSoon && (\r\n                      <div className=\"flex items-center gap-1 text-caption text-status-warning mt-1\">\r\n                        <AlertTriangle className=\"h-3 w-3\" />\r\n                        <span>Expiring soon</span>\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                </Button>\r\n              );\r\n            })}\r\n          </div>\r\n        </CardContent>\r\n      </Card>\r\n\r\n      {/* Results */}\r\n      {selectedJob && (\r\n        <Card>\r\n          {/* Expiry Warning Banner */}\r\n          {selectedJob.expiresAt && (\r\n            <div className=\"border-b\">\r\n              <div className=\"p-4 bg-status-warning-bg\">\r\n                <CountdownTimer \r\n                  expiresAt={selectedJob.expiresAt}\r\n                  className=\"w-full\"\r\n                  showIcon={true}\r\n                  warningThreshold={5}\r\n                />\r\n              </div>\r\n            </div>\r\n          )}\r\n          \r\n          <CardHeader>\r\n            <div className=\"flex items-center justify-between\">\r\n              <div>\r\n                <CardTitle>{selectedJob.filename}</CardTitle>\r\n                <CardDescription>\r\n                  Processing completed {new Date(selectedJob.completedAt!).toLocaleString()}\r\n                </CardDescription>\r\n              </div>\r\n              <Button onClick={() => handleDownload(selectedJob)}>\r\n                <Download className=\"h-4 w-4 mr-2\" />\r\n                Download\r\n              </Button>\r\n            </div>\r\n          </CardHeader>\r\n          <CardContent className=\"space-y-4\">\r\n            {/* Search and Filter */}\r\n            <div className=\"flex gap-2\">\r\n              <div className=\"relative flex-1\">\r\n                <Search className=\"absolute left-3 top-3 h-4 w-4 text-muted-foreground\" />\r\n                <Input\r\n                  placeholder=\"Search results...\"\r\n                  value={searchTerm}\r\n                  onChange={(e) => setSearchTerm(e.target.value)}\r\n                  className=\"pl-9\"\r\n                />\r\n              </div>\r\n              <Button variant=\"outline\" size=\"sm\">\r\n                <Filter className=\"h-4 w-4 mr-2\" />\r\n                Filter\r\n              </Button>\r\n            </div>\r\n\r\n            {/* Summary Statistics */}\r\n            {results.length > 0 && (\r\n              <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4 p-4 bg-muted/50 rounded-lg\">\r\n                <div className=\"text-center\">\r\n                  <p className=\"text-2xl font-bold text-primary\">\r\n                    {results.filter(r => r.entityType === 'person').length}\r\n                  </p>\r\n                  <p className=\"text-sm text-muted-foreground\">People</p>\r\n                </div>\r\n                <div className=\"text-center\">\r\n                  <p className=\"text-2xl font-bold text-info\">\r\n                    {results.filter(r => r.entityType === 'company').length}\r\n                  </p>\r\n                  <p className=\"text-sm text-muted-foreground\">Companies</p>\r\n                </div>\r\n                <div className=\"text-center\">\r\n                  <p className=\"text-2xl font-bold text-success\">\r\n                    {results.filter(r => r.entityType === 'trust').length}\r\n                  </p>\r\n                  <p className=\"text-sm text-muted-foreground\">Trusts</p>\r\n                </div>\r\n                <div className=\"text-center\">\r\n                  <p className=\"text-2xl font-bold text-warning\">\r\n                    {Math.round((results.reduce((sum, r) => sum + r.parsingConfidence, 0) / results.length) * 100)}%\r\n                  </p>\r\n                  <p className=\"text-sm text-muted-foreground\">Avg Confidence</p>\r\n                </div>\r\n              </div>\r\n            )}\r\n\r\n            {/* Quality Metrics Panel */}\r\n            <QualityMetricsPanel results={results} job={selectedJob} />\r\n\r\n            {/* Results Table */}\r\n            {results.length > 0 ? (\r\n              <ResultsTable \r\n                results={results} \r\n                searchTerm={searchTerm}\r\n              />\r\n            ) : (\r\n              <div className=\"text-center py-8\">\r\n                <p className=\"text-muted-foreground\">No results available for this job</p>\r\n              </div>\r\n            )}\r\n          </CardContent>\r\n        </Card>\r\n      )}\r\n    </div>\r\n  );\r\n}"],"names":["__iconNode","Funnel","createLucideIcon","getParsingMethod","result","warning","getParsingWarning","method","confidence","getConfidenceColor","getMethodColor","getWarningColor","level","formatFallbackReason","lowerWarning","calculateQualityMetrics","results","geminiSuccessCount","fallbackCount","lowConfidenceCount","totalConfidence","totalRows","successRate","fallbackUsagePercentage","avgConfidence","apiScore","confidenceScore","warningScore","qualityScore","getQualityRecommendations","metrics","recommendations","shouldShowQualityAlert","getMetricsFromJob","job","fallbackUsageCount","analytics","QualityMetricsPanel","className","isExpanded","setIsExpanded","useState","alertInfo","QualityIcon","getQualityScoreIcon","jsxs","Alert","jsx","AlertTriangle","AlertDescription","Card","CardHeader","CardTitle","BarChart3","CardDescription","Button","ChevronUp","ChevronDown","CardContent","getQualityScoreColor","Badge","getQualityScoreBadgeVariant","getQualityScoreLabel","MetricCard","Brain","Zap","CheckCircle","ProgressBar","TrendingUp","Info","recommendation","index","createTooltipContext","createTooltipScope","createContextScope","createPopperScope","usePopperScope","PROVIDER_NAME","DEFAULT_DELAY_DURATION","TOOLTIP_OPEN","TooltipProviderContextProvider","useTooltipProviderContext","TooltipProvider","props","__scopeTooltip","delayDuration","skipDelayDuration","disableHoverableContent","children","isOpenDelayedRef","React.useRef","isPointerInTransitRef","skipDelayTimerRef","React.useEffect","skipDelayTimer","React.useCallback","inTransit","TOOLTIP_NAME","TooltipContextProvider","useTooltipContext","Tooltip","openProp","defaultOpen","onOpenChange","disableHoverableContentProp","delayDurationProp","providerContext","popperScope","trigger","setTrigger","React.useState","contentId","useId","openTimerRef","wasOpenDelayedRef","open","setOpen","useControllableState","open2","stateAttribute","React.useMemo","handleOpen","handleClose","handleDelayedOpen","PopperPrimitive.Root","TRIGGER_NAME","TooltipTrigger","React.forwardRef","forwardedRef","triggerProps","context","ref","composedRefs","useComposedRefs","isPointerDownRef","hasPointerMoveOpenedRef","handlePointerUp","PopperPrimitive.Anchor","Primitive","composeEventHandlers","event","PORTAL_NAME","PortalProvider","usePortalContext","CONTENT_NAME","TooltipContent","portalContext","forceMount","side","contentProps","Presence","TooltipContentImpl","TooltipContentHoverable","pointerGraceArea","setPointerGraceArea","onClose","content","onPointerInTransitChange","handleRemoveGraceArea","handleCreateGraceArea","hoverTarget","currentTarget","exitPoint","exitSide","getExitSideFromRect","paddedExitPoints","getPaddedExitPoints","hoverTargetPoints","getPointsFromRect","graceArea","getHull","handleTriggerLeave","handleContentLeave","handleTrackPointerGrace","target","pointerPosition","hasEnteredTarget","isPointerOutsideGraceArea","isPointInPolygon","VisuallyHiddenContentContextProvider","useVisuallyHiddenContentContext","Slottable","createSlottable","ariaLabel","onEscapeKeyDown","onPointerDownOutside","handleScroll","DismissableLayer","PopperPrimitive.Content","VisuallyHiddenPrimitive.Root","ARROW_NAME","TooltipArrow","arrowProps","PopperPrimitive.Arrow","point","rect","top","bottom","right","left","padding","polygon","x","y","inside","i","j","ii","jj","xi","yi","xj","yj","points","newPoints","a","b","getHullPresorted","upperHull","p","q","r","lowerHull","Provider","Root3","Trigger","Content2","TooltipPrimitive.Provider","TooltipPrimitive.Root","TooltipPrimitive.Trigger","sideOffset","TooltipPrimitive.Content","cn","getEntityIcon","entityType","Users","User","Building","Shield","FileText","getEntityBadgeVariant","ResultsTable","searchTerm","filteredResults","getGenderDisplay","gender","displayGender","renderParsingMethodBadge","renderWarningIndicator","WarningIcon","AlertCircle","renderConfidenceScore","displayResults","Table","TableHeader","TableRow","TableHead","TableBody","TableCell","Icon","EmptyState","Results","searchParams","useSearchParams","jobs","setJobs","selectedJob","setSelectedJob","setResults","setFilteredResults","setSearchTerm","loading","setLoading","jobId","fetchJobs","useCallback","completedJobs","processingService","targetJob","toast","fetchJobResults","parsedResults","error","logger","errorResponse","filterResults","filtered","useEffect","handleDownload","blob","url","SkeletonCard","isExpired","isExpiringSoon","CountdownTimer","Download","Search","Input","e","Filter","sum"],"mappings":"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","x_google_ignoreList":[0,3]}